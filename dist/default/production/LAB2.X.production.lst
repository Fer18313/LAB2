

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jul 28 13:41:05 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0009                     _PORTE	set	9
   376  0008                     _PORTD	set	8
   377  0007                     _PORTC	set	7
   378  0006                     _PORTB	set	6
   379  0005                     _PORTA	set	5
   380  000B                     _INTCONbits	set	11
   381  0019                     _TXREG	set	25
   382  001A                     _RCREG	set	26
   383  001F                     _ADCON0bits	set	31
   384  001E                     _ADRESH	set	30
   385  000C                     _PIR1bits	set	12
   386  0049                     _RE1	set	73
   387  0048                     _RE0	set	72
   388  0064                     _TXIF	set	100
   389  0035                     _RB5	set	53
   390  0066                     _ADIF	set	102
   391  009F                     _ADCON1bits	set	159
   392  0095                     _WPUB	set	149
   393  0081                     _OPTION_REGbits	set	129
   394  0089                     _TRISE	set	137
   395  0088                     _TRISD	set	136
   396  0087                     _TRISC	set	135
   397  0086                     _TRISB	set	134
   398  0085                     _TRISA	set	133
   399  0096                     _IOCB	set	150
   400  008C                     _PIE1bits	set	140
   401  008F                     _OSCCONbits	set	143
   402  0188                     _ANSEL	set	392
   403  0189                     _ANSELH	set	393
   404                           
   405                           	psect	strings
   406  061D                     __pstrings:
   407  061D                     stringtab:
   408  061D                     __stringtab:
   409  061D                     stringcode:	
   410                           ;	String table - string pointers are 1 byte each
   411                           
   412  061D                     stringdir:
   413  061D  3006               	movlw	high stringdir
   414  061E  008A               	movwf	10
   415  061F  0804               	movf	4,w
   416  0620  0A84               	incf	4,f
   417  0621  0782               	addwf	2,f
   418  0622                     __stringbase:
   419  0622  3400               	retlw	0
   420  0623                     __end_of__stringtab:
   421  0623                     STR_2:
   422  0623  3430               	retlw	48	;'0'
   423  0624  342E               	retlw	46	;'.'
   424  0625  3430               	retlw	48	;'0'
   425  0626  3430               	retlw	48	;'0'
   426  0627  3400               	retlw	0
   427  0628                     STR_1:
   428  0628  3453               	retlw	83	;'S'
   429  0629  3431               	retlw	49	;'1'
   430  062A  3400               	retlw	0
   431  062B                     STR_3:
   432  062B  3453               	retlw	83	;'S'
   433  062C  3432               	retlw	50	;'2'
   434  062D  3400               	retlw	0
   435  062E                     STR_5:
   436  062E  3453               	retlw	83	;'S'
   437  062F  3433               	retlw	51	;'3'
   438  0630  3400               	retlw	0
   439  0623                     
   440                           	psect	cinit
   441  000F                     start_initialization:	
   442                           ; #config settings
   443                           
   444  000F                     __initialization:
   445                           
   446                           ; Clear objects allocated to COMMON
   447  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   448  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   449  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   450                           
   451                           ; Clear objects allocated to BANK0
   452  0012  1283               	bcf	3,5	;RP0=0, select bank0
   453  0013  1303               	bcf	3,6	;RP1=0, select bank0
   454  0014  01B4               	clrf	__pbssBANK0& (0+127)
   455  0015  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   456  0016  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   457  0017  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   458  0018  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   459  0019  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   460  001A  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   461  001B  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   462  001C  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   463  001D  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   464  001E  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   465  001F  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   466  0020  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   467  0021                     end_of_initialization:	
   468                           ;End of C runtime variable initialization code
   469                           
   470  0021                     __end_of__initialization:
   471  0021  0183               	clrf	3
   472  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   473                           
   474                           	psect	bssCOMMON
   475  0078                     __pbssCOMMON:
   476  0078                     _f:
   477  0078                     	ds	1
   478  0079                     _F:
   479  0079                     	ds	1
   480  007A                     _temp:
   481  007A                     	ds	1
   482                           
   483                           	psect	bssBANK0
   484  0034                     __pbssBANK0:
   485  0034                     _unity:
   486  0034                     	ds	1
   487  0035                     _dozen:
   488  0035                     	ds	1
   489  0036                     _temp1:
   490  0036                     	ds	1
   491  0037                     _cents:
   492  0037                     	ds	1
   493  0038                     _k1:
   494  0038                     	ds	1
   495  0039                     _k0:
   496  0039                     	ds	1
   497  003A                     _dec1:
   498  003A                     	ds	1
   499  003B                     _dec0:
   500  003B                     	ds	1
   501  003C                     _unit1:
   502  003C                     	ds	1
   503  003D                     _unit0:
   504  003D                     	ds	1
   505  003E                     _counter:
   506  003E                     	ds	1
   507  003F                     _ADC_read1:
   508  003F                     	ds	1
   509  0040                     _ADC_read0:
   510  0040                     	ds	1
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:
   514  0070                     ?_initCONFIG:
   515  0070                     ?_wLCD:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_wsLCD:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_ADC_START:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_initLCD:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_LCDsetup:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_main:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_ISR:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_ISR:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_LCDconfig:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_LCD_set:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 1 bytes @ 0x0
   547  0070                     	ds	3
   548  0073                     ??_ADC_START:
   549  0073                     ??_LCDsetup:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     ?___bmul:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     ?___wmul:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0073                     ?___awmod:	
   559                           ; 2 bytes @ 0x3
   560                           
   561  0073                     LCDsetup@x:	
   562                           ; 2 bytes @ 0x3
   563                           
   564  0073                     ___bmul@multiplicand:	
   565                           ; 1 bytes @ 0x3
   566                           
   567  0073                     ___wmul@multiplier:	
   568                           ; 1 bytes @ 0x3
   569                           
   570  0073                     ___awmod@divisor:	
   571                           ; 2 bytes @ 0x3
   572                           
   573                           
   574                           ; 2 bytes @ 0x3
   575  0073                     	ds	1
   576  0074                     ??_wLCD:
   577  0074                     ??_initLCD:	
   578                           ; 1 bytes @ 0x4
   579                           
   580  0074                     ??_LCD_set:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0074                     ??___bmul:	
   584                           ; 1 bytes @ 0x4
   585                           
   586                           
   587                           ; 1 bytes @ 0x4
   588  0074                     	ds	1
   589  0075                     wLCD@x:
   590  0075                     ___bmul@product:	
   591                           ; 1 bytes @ 0x5
   592                           
   593  0075                     ___wmul@multiplicand:	
   594                           ; 1 bytes @ 0x5
   595                           
   596  0075                     ___awmod@dividend:	
   597                           ; 2 bytes @ 0x5
   598                           
   599                           
   600                           ; 2 bytes @ 0x5
   601  0075                     	ds	1
   602  0076                     ??_wsLCD:
   603  0076                     LCD_set@x:	
   604                           ; 1 bytes @ 0x6
   605                           
   606  0076                     ___bmul@multiplier:	
   607                           ; 1 bytes @ 0x6
   608                           
   609                           
   610                           ; 1 bytes @ 0x6
   611  0076                     	ds	1
   612  0077                     ?_LCD_cursor:
   613  0077                     ??___wmul:	
   614                           ; 1 bytes @ 0x7
   615                           
   616  0077                     ??___awdiv:	
   617                           ; 1 bytes @ 0x7
   618                           
   619  0077                     ??___awmod:	
   620                           ; 1 bytes @ 0x7
   621                           
   622  0077                     LCD_cursor@y:	
   623                           ; 1 bytes @ 0x7
   624                           
   625                           
   626                           ; 1 bytes @ 0x7
   627  0077                     	ds	1
   628  0078                     ??_initCONFIG:
   629                           
   630                           	psect	cstackBANK0
   631  0020                     __pcstackBANK0:	
   632                           ; 1 bytes @ 0x8
   633                           
   634  0020                     ??_LCD_cursor:
   635  0020                     ___awmod@counter:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0020                     wsLCD@i:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0020                     ___wmul@product:	
   642                           ; 2 bytes @ 0x0
   643                           
   644                           
   645                           ; 2 bytes @ 0x0
   646  0020                     	ds	1
   647  0021                     LCD_cursor@x:
   648  0021                     ___awmod@sign:	
   649                           ; 1 bytes @ 0x1
   650                           
   651                           
   652                           ; 1 bytes @ 0x1
   653  0021                     	ds	1
   654  0022                     ?___awdiv:
   655  0022                     wsLCD@x:	
   656                           ; 2 bytes @ 0x2
   657                           
   658  0022                     LCD_cursor@a:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0022                     ___awdiv@divisor:	
   662                           ; 1 bytes @ 0x2
   663                           
   664                           
   665                           ; 2 bytes @ 0x2
   666  0022                     	ds	1
   667  0023                     ??_LCDconfig:
   668                           
   669                           ; 1 bytes @ 0x3
   670  0023                     	ds	1
   671  0024                     ___awdiv@dividend:
   672                           
   673                           ; 2 bytes @ 0x4
   674  0024                     	ds	2
   675  0026                     ___awdiv@counter:
   676                           
   677                           ; 1 bytes @ 0x6
   678  0026                     	ds	1
   679  0027                     ___awdiv@sign:
   680                           
   681                           ; 1 bytes @ 0x7
   682  0027                     	ds	1
   683  0028                     ___awdiv@quotient:
   684                           
   685                           ; 2 bytes @ 0x8
   686  0028                     	ds	2
   687  002A                     ??_main:
   688                           
   689                           ; 1 bytes @ 0xA
   690  002A                     	ds	8
   691  0032                     _main$990:
   692                           
   693                           ; 2 bytes @ 0x12
   694  0032                     	ds	2
   695                           
   696                           	psect	maintext
   697  0025                     __pmaintext:	
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 56 in file "newmain.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : B00/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       2       0       0       0
   719 ;;      Temps:          0       8       0       0       0
   720 ;;      Totals:         0      10       0       0       0
   721 ;;Total ram usage:       10 bytes
   722 ;; Hardware stack levels required when called: 6
   723 ;; This function calls:
   724 ;;		_LCD_cursor
   725 ;;		___awdiv
   726 ;;		___awmod
   727 ;;		___bmul
   728 ;;		___wmul
   729 ;;		_initCONFIG
   730 ;;		_wLCD
   731 ;; This function is called by:
   732 ;;		Startup code after reset
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _main
   738  0025                     _main:
   739  0025                     l1812:	
   740                           ;incstack = 0
   741                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   742                           
   743                           
   744                           ;newmain.c: 57:     initCONFIG();
   745  0025  120A  118A  250E  120A  118A  	fcall	_initCONFIG
   746  002A                     l1814:
   747                           
   748                           ;newmain.c: 59:         unit0 = ADC_read0/51;
   749  002A  3033               	movlw	51
   750  002B  1283               	bcf	3,5	;RP0=0, select bank0
   751  002C  1303               	bcf	3,6	;RP1=0, select bank0
   752  002D  00A2               	movwf	___awdiv@divisor
   753  002E  3000               	movlw	0
   754  002F  00A3               	movwf	___awdiv@divisor+1
   755  0030  0840               	movf	_ADC_read0,w
   756  0031  00AA               	movwf	??_main
   757  0032  01AB               	clrf	??_main+1
   758  0033  082A               	movf	??_main,w
   759  0034  00A4               	movwf	___awdiv@dividend
   760  0035  082B               	movf	??_main+1,w
   761  0036  00A5               	movwf	___awdiv@dividend+1
   762  0037  120A  118A  23F1  120A  118A  	fcall	___awdiv
   763  003C  1283               	bcf	3,5	;RP0=0, select bank0
   764  003D  1303               	bcf	3,6	;RP1=0, select bank0
   765  003E  0822               	movf	?___awdiv,w
   766  003F  00AC               	movwf	??_main+2
   767  0040  082C               	movf	??_main+2,w
   768  0041  00BD               	movwf	_unit0
   769  0042                     l1816:
   770                           
   771                           ;newmain.c: 60:         dec0 = ((ADC_read0*100/51)-(unit0*100));
   772  0042  3033               	movlw	51
   773  0043  00A2               	movwf	___awdiv@divisor
   774  0044  3000               	movlw	0
   775  0045  00A3               	movwf	___awdiv@divisor+1
   776  0046  0840               	movf	_ADC_read0,w
   777  0047  00AA               	movwf	??_main
   778  0048  01AB               	clrf	??_main+1
   779  0049  082A               	movf	??_main,w
   780  004A  00F3               	movwf	___wmul@multiplier
   781  004B  082B               	movf	??_main+1,w
   782  004C  00F4               	movwf	___wmul@multiplier+1
   783  004D  3064               	movlw	100
   784  004E  00F5               	movwf	___wmul@multiplicand
   785  004F  3000               	movlw	0
   786  0050  00F6               	movwf	___wmul@multiplicand+1
   787  0051  120A  118A  2548  120A  118A  	fcall	___wmul
   788  0056  0874               	movf	?___wmul+1,w
   789  0057  1283               	bcf	3,5	;RP0=0, select bank0
   790  0058  1303               	bcf	3,6	;RP1=0, select bank0
   791  0059  00A5               	movwf	___awdiv@dividend+1
   792  005A  0873               	movf	?___wmul,w
   793  005B  00A4               	movwf	___awdiv@dividend
   794  005C  120A  118A  23F1  120A  118A  	fcall	___awdiv
   795  0061  1283               	bcf	3,5	;RP0=0, select bank0
   796  0062  1303               	bcf	3,6	;RP1=0, select bank0
   797  0063  0822               	movf	?___awdiv,w
   798  0064  00AC               	movwf	??_main+2
   799  0065  0823               	movf	?___awdiv+1,w
   800  0066  00AD               	movwf	??_main+3
   801  0067  309C               	movlw	156
   802  0068  00AE               	movwf	??_main+4
   803  0069  082E               	movf	??_main+4,w
   804  006A  00F3               	movwf	___bmul@multiplicand
   805  006B  083D               	movf	_unit0,w
   806  006C  120A  118A  2608  120A  118A  	fcall	___bmul
   807  0071  1283               	bcf	3,5	;RP0=0, select bank0
   808  0072  1303               	bcf	3,6	;RP1=0, select bank0
   809  0073  072C               	addwf	??_main+2,w
   810  0074  00AF               	movwf	??_main+5
   811  0075  082F               	movf	??_main+5,w
   812  0076  00BB               	movwf	_dec0
   813  0077                     l1818:
   814                           
   815                           ;newmain.c: 61:         dec1 = ((ADC_read0*100/51)-(unit0*100) - (dec0*10));
   816  0077  3033               	movlw	51
   817  0078  00A2               	movwf	___awdiv@divisor
   818  0079  3000               	movlw	0
   819  007A  00A3               	movwf	___awdiv@divisor+1
   820  007B  0840               	movf	_ADC_read0,w
   821  007C  00AA               	movwf	??_main
   822  007D  01AB               	clrf	??_main+1
   823  007E  082A               	movf	??_main,w
   824  007F  00F3               	movwf	___wmul@multiplier
   825  0080  082B               	movf	??_main+1,w
   826  0081  00F4               	movwf	___wmul@multiplier+1
   827  0082  3064               	movlw	100
   828  0083  00F5               	movwf	___wmul@multiplicand
   829  0084  3000               	movlw	0
   830  0085  00F6               	movwf	___wmul@multiplicand+1
   831  0086  120A  118A  2548  120A  118A  	fcall	___wmul
   832  008B  0874               	movf	?___wmul+1,w
   833  008C  1283               	bcf	3,5	;RP0=0, select bank0
   834  008D  1303               	bcf	3,6	;RP1=0, select bank0
   835  008E  00A5               	movwf	___awdiv@dividend+1
   836  008F  0873               	movf	?___wmul,w
   837  0090  00A4               	movwf	___awdiv@dividend
   838  0091  120A  118A  23F1  120A  118A  	fcall	___awdiv
   839  0096  1283               	bcf	3,5	;RP0=0, select bank0
   840  0097  1303               	bcf	3,6	;RP1=0, select bank0
   841  0098  0822               	movf	?___awdiv,w
   842  0099  00AC               	movwf	??_main+2
   843  009A  0823               	movf	?___awdiv+1,w
   844  009B  00AD               	movwf	??_main+3
   845  009C  309C               	movlw	156
   846  009D  00AE               	movwf	??_main+4
   847  009E  082E               	movf	??_main+4,w
   848  009F  00F3               	movwf	___bmul@multiplicand
   849  00A0  083D               	movf	_unit0,w
   850  00A1  120A  118A  2608  120A  118A  	fcall	___bmul
   851  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   852  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   853  00A8  00AF               	movwf	??_main+5
   854  00A9  30F6               	movlw	246
   855  00AA  00B0               	movwf	??_main+6
   856  00AB  0830               	movf	??_main+6,w
   857  00AC  00F3               	movwf	___bmul@multiplicand
   858  00AD  083B               	movf	_dec0,w
   859  00AE  120A  118A  2608  120A  118A  	fcall	___bmul
   860  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   861  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   862  00B5  072F               	addwf	??_main+5,w
   863  00B6  072C               	addwf	??_main+2,w
   864  00B7  00B1               	movwf	??_main+7
   865  00B8  0831               	movf	??_main+7,w
   866  00B9  00BA               	movwf	_dec1
   867  00BA                     l1820:
   868                           
   869                           ;newmain.c: 62:         unit1 = ADC_read1/51;
   870  00BA  3033               	movlw	51
   871  00BB  00A2               	movwf	___awdiv@divisor
   872  00BC  3000               	movlw	0
   873  00BD  00A3               	movwf	___awdiv@divisor+1
   874  00BE  083F               	movf	_ADC_read1,w
   875  00BF  00AA               	movwf	??_main
   876  00C0  01AB               	clrf	??_main+1
   877  00C1  082A               	movf	??_main,w
   878  00C2  00A4               	movwf	___awdiv@dividend
   879  00C3  082B               	movf	??_main+1,w
   880  00C4  00A5               	movwf	___awdiv@dividend+1
   881  00C5  120A  118A  23F1  120A  118A  	fcall	___awdiv
   882  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   883  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   884  00CC  0822               	movf	?___awdiv,w
   885  00CD  00AC               	movwf	??_main+2
   886  00CE  082C               	movf	??_main+2,w
   887  00CF  00BC               	movwf	_unit1
   888  00D0                     l1822:
   889                           
   890                           ;newmain.c: 63:         k0 = (((ADC_read1*100)/51) -(unit1*100))/10;
   891  00D0  3033               	movlw	51
   892  00D1  00A2               	movwf	___awdiv@divisor
   893  00D2  3000               	movlw	0
   894  00D3  00A3               	movwf	___awdiv@divisor+1
   895  00D4  083F               	movf	_ADC_read1,w
   896  00D5  00AA               	movwf	??_main
   897  00D6  01AB               	clrf	??_main+1
   898  00D7  082A               	movf	??_main,w
   899  00D8  00F3               	movwf	___wmul@multiplier
   900  00D9  082B               	movf	??_main+1,w
   901  00DA  00F4               	movwf	___wmul@multiplier+1
   902  00DB  3064               	movlw	100
   903  00DC  00F5               	movwf	___wmul@multiplicand
   904  00DD  3000               	movlw	0
   905  00DE  00F6               	movwf	___wmul@multiplicand+1
   906  00DF  120A  118A  2548  120A  118A  	fcall	___wmul
   907  00E4  0874               	movf	?___wmul+1,w
   908  00E5  1283               	bcf	3,5	;RP0=0, select bank0
   909  00E6  1303               	bcf	3,6	;RP1=0, select bank0
   910  00E7  00A5               	movwf	___awdiv@dividend+1
   911  00E8  0873               	movf	?___wmul,w
   912  00E9  00A4               	movwf	___awdiv@dividend
   913  00EA  120A  118A  23F1  120A  118A  	fcall	___awdiv
   914  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   915  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   916  00F1  0822               	movf	?___awdiv,w
   917  00F2  00AC               	movwf	??_main+2
   918  00F3  0823               	movf	?___awdiv+1,w
   919  00F4  00AD               	movwf	??_main+3
   920  00F5  083C               	movf	_unit1,w
   921  00F6  00AE               	movwf	??_main+4
   922  00F7  01AF               	clrf	??_main+5
   923  00F8  082E               	movf	??_main+4,w
   924  00F9  00F3               	movwf	___wmul@multiplier
   925  00FA  082F               	movf	??_main+5,w
   926  00FB  00F4               	movwf	___wmul@multiplier+1
   927  00FC  309C               	movlw	156
   928  00FD  00F5               	movwf	___wmul@multiplicand
   929  00FE  30FF               	movlw	255
   930  00FF  00F6               	movwf	___wmul@multiplicand+1
   931  0100  120A  118A  2548  120A  118A  	fcall	___wmul
   932  0105  0873               	movf	?___wmul,w
   933  0106  1283               	bcf	3,5	;RP0=0, select bank0
   934  0107  1303               	bcf	3,6	;RP1=0, select bank0
   935  0108  072C               	addwf	??_main+2,w
   936  0109  00B2               	movwf	_main$990
   937  010A  0874               	movf	?___wmul+1,w
   938  010B  1803               	skipnc
   939  010C  0A74               	incf	?___wmul+1,w
   940  010D  072D               	addwf	??_main+3,w
   941  010E  00B3               	movwf	_main$990+1
   942  010F                     l1824:
   943                           
   944                           ;newmain.c: 63:         k0 = (((ADC_read1*100)/51) -(unit1*100))/10;
   945  010F  300A               	movlw	10
   946  0110  00A2               	movwf	___awdiv@divisor
   947  0111  3000               	movlw	0
   948  0112  00A3               	movwf	___awdiv@divisor+1
   949  0113  0833               	movf	_main$990+1,w
   950  0114  00A5               	movwf	___awdiv@dividend+1
   951  0115  0832               	movf	_main$990,w
   952  0116  00A4               	movwf	___awdiv@dividend
   953  0117  120A  118A  23F1  120A  118A  	fcall	___awdiv
   954  011C  1283               	bcf	3,5	;RP0=0, select bank0
   955  011D  1303               	bcf	3,6	;RP1=0, select bank0
   956  011E  0822               	movf	?___awdiv,w
   957  011F  00AA               	movwf	??_main
   958  0120  082A               	movf	??_main,w
   959  0121  00B9               	movwf	_k0
   960  0122                     l1826:
   961                           
   962                           ;newmain.c: 64:         k1 = (((ADC_read1*100)/51) - (unit1*100) - (k0*10));
   963  0122  3033               	movlw	51
   964  0123  00A2               	movwf	___awdiv@divisor
   965  0124  3000               	movlw	0
   966  0125  00A3               	movwf	___awdiv@divisor+1
   967  0126  083F               	movf	_ADC_read1,w
   968  0127  00AA               	movwf	??_main
   969  0128  01AB               	clrf	??_main+1
   970  0129  082A               	movf	??_main,w
   971  012A  00F3               	movwf	___wmul@multiplier
   972  012B  082B               	movf	??_main+1,w
   973  012C  00F4               	movwf	___wmul@multiplier+1
   974  012D  3064               	movlw	100
   975  012E  00F5               	movwf	___wmul@multiplicand
   976  012F  3000               	movlw	0
   977  0130  00F6               	movwf	___wmul@multiplicand+1
   978  0131  120A  118A  2548  120A  118A  	fcall	___wmul
   979  0136  0874               	movf	?___wmul+1,w
   980  0137  1283               	bcf	3,5	;RP0=0, select bank0
   981  0138  1303               	bcf	3,6	;RP1=0, select bank0
   982  0139  00A5               	movwf	___awdiv@dividend+1
   983  013A  0873               	movf	?___wmul,w
   984  013B  00A4               	movwf	___awdiv@dividend
   985  013C  120A  118A  23F1  120A  118A  	fcall	___awdiv
   986  0141  1283               	bcf	3,5	;RP0=0, select bank0
   987  0142  1303               	bcf	3,6	;RP1=0, select bank0
   988  0143  0822               	movf	?___awdiv,w
   989  0144  00AC               	movwf	??_main+2
   990  0145  0823               	movf	?___awdiv+1,w
   991  0146  00AD               	movwf	??_main+3
   992  0147  309C               	movlw	156
   993  0148  00AE               	movwf	??_main+4
   994  0149  082E               	movf	??_main+4,w
   995  014A  00F3               	movwf	___bmul@multiplicand
   996  014B  083C               	movf	_unit1,w
   997  014C  120A  118A  2608  120A  118A  	fcall	___bmul
   998  0151  1283               	bcf	3,5	;RP0=0, select bank0
   999  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0153  00AF               	movwf	??_main+5
  1001  0154  30F6               	movlw	246
  1002  0155  00B0               	movwf	??_main+6
  1003  0156  0830               	movf	??_main+6,w
  1004  0157  00F3               	movwf	___bmul@multiplicand
  1005  0158  0839               	movf	_k0,w
  1006  0159  120A  118A  2608  120A  118A  	fcall	___bmul
  1007  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1008  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0160  072F               	addwf	??_main+5,w
  1010  0161  072C               	addwf	??_main+2,w
  1011  0162  00B1               	movwf	??_main+7
  1012  0163  0831               	movf	??_main+7,w
  1013  0164  00B8               	movwf	_k1
  1014  0165                     l1828:
  1015                           
  1016                           ;newmain.c: 65:         cents = counter/100;
  1017  0165  3064               	movlw	100
  1018  0166  00A2               	movwf	___awdiv@divisor
  1019  0167  3000               	movlw	0
  1020  0168  00A3               	movwf	___awdiv@divisor+1
  1021  0169  083E               	movf	_counter,w
  1022  016A  00AA               	movwf	??_main
  1023  016B  01AB               	clrf	??_main+1
  1024  016C  082A               	movf	??_main,w
  1025  016D  00A4               	movwf	___awdiv@dividend
  1026  016E  082B               	movf	??_main+1,w
  1027  016F  00A5               	movwf	___awdiv@dividend+1
  1028  0170  120A  118A  23F1  120A  118A  	fcall	___awdiv
  1029  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0177  0822               	movf	?___awdiv,w
  1032  0178  00AC               	movwf	??_main+2
  1033  0179  082C               	movf	??_main+2,w
  1034  017A  00B7               	movwf	_cents
  1035  017B                     l1830:
  1036                           
  1037                           ;newmain.c: 66:         temp1 = counter%100;
  1038  017B  3064               	movlw	100
  1039  017C  00F3               	movwf	___awmod@divisor
  1040  017D  3000               	movlw	0
  1041  017E  00F4               	movwf	___awmod@divisor+1
  1042  017F  083E               	movf	_counter,w
  1043  0180  00AA               	movwf	??_main
  1044  0181  01AB               	clrf	??_main+1
  1045  0182  082A               	movf	??_main,w
  1046  0183  00F5               	movwf	___awmod@dividend
  1047  0184  082B               	movf	??_main+1,w
  1048  0185  00F6               	movwf	___awmod@dividend+1
  1049  0186  120A  118A  245A  120A  118A  	fcall	___awmod
  1050  018B  0873               	movf	?___awmod,w
  1051  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1052  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1053  018E  00AC               	movwf	??_main+2
  1054  018F  082C               	movf	??_main+2,w
  1055  0190  00B6               	movwf	_temp1
  1056  0191                     l1832:
  1057                           
  1058                           ;newmain.c: 67:         dozen = temp1/10;
  1059  0191  300A               	movlw	10
  1060  0192  00A2               	movwf	___awdiv@divisor
  1061  0193  3000               	movlw	0
  1062  0194  00A3               	movwf	___awdiv@divisor+1
  1063  0195  0836               	movf	_temp1,w
  1064  0196  00AA               	movwf	??_main
  1065  0197  01AB               	clrf	??_main+1
  1066  0198  082A               	movf	??_main,w
  1067  0199  00A4               	movwf	___awdiv@dividend
  1068  019A  082B               	movf	??_main+1,w
  1069  019B  00A5               	movwf	___awdiv@dividend+1
  1070  019C  120A  118A  23F1  120A  118A  	fcall	___awdiv
  1071  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1072  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1073  01A3  0822               	movf	?___awdiv,w
  1074  01A4  00AC               	movwf	??_main+2
  1075  01A5  082C               	movf	??_main+2,w
  1076  01A6  00B5               	movwf	_dozen
  1077  01A7                     l1834:
  1078                           
  1079                           ;newmain.c: 68:         unity = counter%10;
  1080  01A7  300A               	movlw	10
  1081  01A8  00F3               	movwf	___awmod@divisor
  1082  01A9  3000               	movlw	0
  1083  01AA  00F4               	movwf	___awmod@divisor+1
  1084  01AB  083E               	movf	_counter,w
  1085  01AC  00AA               	movwf	??_main
  1086  01AD  01AB               	clrf	??_main+1
  1087  01AE  082A               	movf	??_main,w
  1088  01AF  00F5               	movwf	___awmod@dividend
  1089  01B0  082B               	movf	??_main+1,w
  1090  01B1  00F6               	movwf	___awmod@dividend+1
  1091  01B2  120A  118A  245A  120A  118A  	fcall	___awmod
  1092  01B7  0873               	movf	?___awmod,w
  1093  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1094  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1095  01BA  00AC               	movwf	??_main+2
  1096  01BB  082C               	movf	??_main+2,w
  1097  01BC  00B4               	movwf	_unity
  1098  01BD                     l1836:
  1099                           
  1100                           ;newmain.c: 70:         if (dec0>9){
  1101  01BD  300A               	movlw	10
  1102  01BE  023B               	subwf	_dec0,w
  1103  01BF  1C03               	skipc
  1104  01C0  29C2               	goto	u1171
  1105  01C1  29C3               	goto	u1170
  1106  01C2                     u1171:
  1107  01C2  29C7               	goto	l104
  1108  01C3                     u1170:
  1109  01C3                     l1838:
  1110                           
  1111                           ;newmain.c: 71:             dec0 = 9;
  1112  01C3  3009               	movlw	9
  1113  01C4  00AA               	movwf	??_main
  1114  01C5  082A               	movf	??_main,w
  1115  01C6  00BB               	movwf	_dec0
  1116  01C7                     l104:	
  1117                           ;newmain.c: 72:         }
  1118                           
  1119                           
  1120                           ;newmain.c: 73:         if (dec1>9){
  1121  01C7  300A               	movlw	10
  1122  01C8  023A               	subwf	_dec1,w
  1123  01C9  1C03               	skipc
  1124  01CA  29CC               	goto	u1181
  1125  01CB  29CD               	goto	u1180
  1126  01CC                     u1181:
  1127  01CC  29D1               	goto	l105
  1128  01CD                     u1180:
  1129  01CD                     l1840:
  1130                           
  1131                           ;newmain.c: 74:             dec1 = 9;
  1132  01CD  3009               	movlw	9
  1133  01CE  00AA               	movwf	??_main
  1134  01CF  082A               	movf	??_main,w
  1135  01D0  00BA               	movwf	_dec1
  1136  01D1                     l105:	
  1137                           ;newmain.c: 75:         }
  1138                           
  1139                           
  1140                           ;newmain.c: 76:         if (k0>9){
  1141  01D1  300A               	movlw	10
  1142  01D2  0239               	subwf	_k0,w
  1143  01D3  1C03               	skipc
  1144  01D4  29D6               	goto	u1191
  1145  01D5  29D7               	goto	u1190
  1146  01D6                     u1191:
  1147  01D6  29DB               	goto	l106
  1148  01D7                     u1190:
  1149  01D7                     l1842:
  1150                           
  1151                           ;newmain.c: 77:             k0 = 9;
  1152  01D7  3009               	movlw	9
  1153  01D8  00AA               	movwf	??_main
  1154  01D9  082A               	movf	??_main,w
  1155  01DA  00B9               	movwf	_k0
  1156  01DB                     l106:	
  1157                           ;newmain.c: 78:         }
  1158                           
  1159                           
  1160                           ;newmain.c: 79:         if (k1>9){
  1161  01DB  300A               	movlw	10
  1162  01DC  0238               	subwf	_k1,w
  1163  01DD  1C03               	skipc
  1164  01DE  29E0               	goto	u1201
  1165  01DF  29E1               	goto	u1200
  1166  01E0                     u1201:
  1167  01E0  29E5               	goto	l107
  1168  01E1                     u1200:
  1169  01E1                     l1844:
  1170                           
  1171                           ;newmain.c: 80:             k1 = 9;
  1172  01E1  3009               	movlw	9
  1173  01E2  00AA               	movwf	??_main
  1174  01E3  082A               	movf	??_main,w
  1175  01E4  00B8               	movwf	_k1
  1176  01E5                     l107:	
  1177                           ;newmain.c: 81:         }
  1178                           
  1179                           
  1180                           ;newmain.c: 82:         if (unit0>5){
  1181  01E5  3006               	movlw	6
  1182  01E6  023D               	subwf	_unit0,w
  1183  01E7  1C03               	skipc
  1184  01E8  29EA               	goto	u1211
  1185  01E9  29EB               	goto	u1210
  1186  01EA                     u1211:
  1187  01EA  29EF               	goto	l108
  1188  01EB                     u1210:
  1189  01EB                     l1846:
  1190                           
  1191                           ;newmain.c: 83:             unit0=5;
  1192  01EB  3005               	movlw	5
  1193  01EC  00AA               	movwf	??_main
  1194  01ED  082A               	movf	??_main,w
  1195  01EE  00BD               	movwf	_unit0
  1196  01EF                     l108:	
  1197                           ;newmain.c: 84:         }
  1198                           
  1199                           
  1200                           ;newmain.c: 85:         if (unit1>5){
  1201  01EF  3006               	movlw	6
  1202  01F0  023C               	subwf	_unit1,w
  1203  01F1  1C03               	skipc
  1204  01F2  29F4               	goto	u1221
  1205  01F3  29F5               	goto	u1220
  1206  01F4                     u1221:
  1207  01F4  29F9               	goto	l109
  1208  01F5                     u1220:
  1209  01F5                     l1848:
  1210                           
  1211                           ;newmain.c: 86:             unit0 = 5;
  1212  01F5  3005               	movlw	5
  1213  01F6  00AA               	movwf	??_main
  1214  01F7  082A               	movf	??_main,w
  1215  01F8  00BD               	movwf	_unit0
  1216  01F9                     l109:	
  1217                           ;newmain.c: 87:         }
  1218                           
  1219                           
  1220                           ;newmain.c: 88:         if (counter>5){
  1221  01F9  3006               	movlw	6
  1222  01FA  023E               	subwf	_counter,w
  1223  01FB  1C03               	skipc
  1224  01FC  29FE               	goto	u1231
  1225  01FD  29FF               	goto	u1230
  1226  01FE                     u1231:
  1227  01FE  2A03               	goto	l1852
  1228  01FF                     u1230:
  1229  01FF                     l1850:
  1230                           
  1231                           ;newmain.c: 89:             unit0 =5;
  1232  01FF  3005               	movlw	5
  1233  0200  00AA               	movwf	??_main
  1234  0201  082A               	movf	??_main,w
  1235  0202  00BD               	movwf	_unit0
  1236  0203                     l1852:
  1237                           
  1238                           ;newmain.c: 91:         LCD_cursor(2,1);
  1239  0203  01F7               	clrf	LCD_cursor@y
  1240  0204  0AF7               	incf	LCD_cursor@y,f
  1241  0205  3002               	movlw	2
  1242  0206  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1243  020B                     l1854:
  1244                           
  1245                           ;newmain.c: 92:         wLCD(unit0 + 48);
  1246  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1247  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1248  020D  083D               	movf	_unit0,w
  1249  020E  3E30               	addlw	48
  1250  020F  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1251  0214                     l1856:
  1252                           
  1253                           ;newmain.c: 93:         LCD_cursor(2,3);
  1254  0214  3003               	movlw	3
  1255  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0217  00AA               	movwf	??_main
  1258  0218  082A               	movf	??_main,w
  1259  0219  00F7               	movwf	LCD_cursor@y
  1260  021A  3002               	movlw	2
  1261  021B  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1262  0220                     l1858:
  1263                           
  1264                           ;newmain.c: 94:         wLCD(dec0 + 48);
  1265  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0222  083B               	movf	_dec0,w
  1268  0223  3E30               	addlw	48
  1269  0224  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1270  0229                     l1860:
  1271                           
  1272                           ;newmain.c: 95:         LCD_cursor(2,4);
  1273  0229  3004               	movlw	4
  1274  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1275  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1276  022C  00AA               	movwf	??_main
  1277  022D  082A               	movf	??_main,w
  1278  022E  00F7               	movwf	LCD_cursor@y
  1279  022F  3002               	movlw	2
  1280  0230  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1281  0235                     l1862:
  1282                           
  1283                           ;newmain.c: 96:         wLCD(dec1 +48);
  1284  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0237  083A               	movf	_dec1,w
  1287  0238  3E30               	addlw	48
  1288  0239  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1289  023E                     l1864:
  1290                           
  1291                           ;newmain.c: 98:         LCD_cursor (2,7);
  1292  023E  3007               	movlw	7
  1293  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0241  00AA               	movwf	??_main
  1296  0242  082A               	movf	??_main,w
  1297  0243  00F7               	movwf	LCD_cursor@y
  1298  0244  3002               	movlw	2
  1299  0245  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1300  024A                     l1866:
  1301                           
  1302                           ;newmain.c: 99:         wLCD(unit1 +48);
  1303  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1304  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1305  024C  083C               	movf	_unit1,w
  1306  024D  3E30               	addlw	48
  1307  024E  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1308  0253                     l1868:
  1309                           
  1310                           ;newmain.c: 100:         LCD_cursor (2,9);
  1311  0253  3009               	movlw	9
  1312  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0256  00AA               	movwf	??_main
  1315  0257  082A               	movf	??_main,w
  1316  0258  00F7               	movwf	LCD_cursor@y
  1317  0259  3002               	movlw	2
  1318  025A  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1319  025F                     l1870:
  1320                           
  1321                           ;newmain.c: 101:         wLCD(k0+48);
  1322  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0261  0839               	movf	_k0,w
  1325  0262  3E30               	addlw	48
  1326  0263  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1327  0268                     l1872:
  1328                           
  1329                           ;newmain.c: 102:         LCD_cursor(2,10);
  1330  0268  300A               	movlw	10
  1331  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1332  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1333  026B  00AA               	movwf	??_main
  1334  026C  082A               	movf	??_main,w
  1335  026D  00F7               	movwf	LCD_cursor@y
  1336  026E  3002               	movlw	2
  1337  026F  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1338  0274                     l1874:
  1339                           
  1340                           ;newmain.c: 103:         wLCD(k1+48);
  1341  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0276  0838               	movf	_k1,w
  1344  0277  3E30               	addlw	48
  1345  0278  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1346  027D                     l1876:
  1347                           
  1348                           ;newmain.c: 105:         LCD_cursor(2,13);
  1349  027D  300D               	movlw	13
  1350  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1351  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0280  00AA               	movwf	??_main
  1353  0281  082A               	movf	??_main,w
  1354  0282  00F7               	movwf	LCD_cursor@y
  1355  0283  3002               	movlw	2
  1356  0284  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1357  0289                     l1878:
  1358                           
  1359                           ;newmain.c: 106:         wLCD(cents +48);
  1360  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1361  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1362  028B  0837               	movf	_cents,w
  1363  028C  3E30               	addlw	48
  1364  028D  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1365  0292                     l1880:
  1366                           
  1367                           ;newmain.c: 107:         LCD_cursor(2,14);
  1368  0292  300E               	movlw	14
  1369  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0295  00AA               	movwf	??_main
  1372  0296  082A               	movf	??_main,w
  1373  0297  00F7               	movwf	LCD_cursor@y
  1374  0298  3002               	movlw	2
  1375  0299  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1376  029E                     l1882:
  1377                           
  1378                           ;newmain.c: 108:         wLCD(dozen +48);
  1379  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1380  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1381  02A0  0835               	movf	_dozen,w
  1382  02A1  3E30               	addlw	48
  1383  02A2  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1384  02A7                     l1884:
  1385                           
  1386                           ;newmain.c: 109:         LCD_cursor(2,15);
  1387  02A7  300F               	movlw	15
  1388  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1389  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1390  02AA  00AA               	movwf	??_main
  1391  02AB  082A               	movf	??_main,w
  1392  02AC  00F7               	movwf	LCD_cursor@y
  1393  02AD  3002               	movlw	2
  1394  02AE  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1395  02B3                     l1886:
  1396                           
  1397                           ;newmain.c: 110:         wLCD(unity +48);
  1398  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1399  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1400  02B5  0834               	movf	_unity,w
  1401  02B6  3E30               	addlw	48
  1402  02B7  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1403  02BC  282A               	goto	l1814
  1404  02BD  120A  118A  280C   	ljmp	start
  1405  02C0                     __end_of_main:
  1406                           
  1407                           	psect	text1
  1408  050E                     __ptext1:	
  1409 ;; *************** function _initCONFIG *****************
  1410 ;; Defined at:
  1411 ;;		line 202 in file "newmain.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 5
  1432 ;; This function calls:
  1433 ;;		_ADC_START
  1434 ;;		_LCDconfig
  1435 ;;		_initLCD
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _initCONFIG
  1443  050E                     _initCONFIG:
  1444  050E                     l1718:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _initCONFIG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1447                           
  1448                           
  1449                           ;newmain.c: 205:     OSCCONbits.IRCF2 = 1;
  1450  050E  1683               	bsf	3,5	;RP0=1, select bank1
  1451  050F  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0510  170F               	bsf	15,6	;volatile
  1453                           
  1454                           ;newmain.c: 206:     OSCCONbits.IRCF1 = 1;
  1455  0511  168F               	bsf	15,5	;volatile
  1456                           
  1457                           ;newmain.c: 207:     OSCCONbits.IRCF0 = 0;
  1458  0512  120F               	bcf	15,4	;volatile
  1459                           
  1460                           ;newmain.c: 208:     OSCCONbits.SCS = 1;
  1461  0513  140F               	bsf	15,0	;volatile
  1462                           
  1463                           ;newmain.c: 212:     INTCONbits.GIE = 1;
  1464  0514  178B               	bsf	11,7	;volatile
  1465                           
  1466                           ;newmain.c: 213:     INTCONbits.PEIE =1;
  1467  0515  170B               	bsf	11,6	;volatile
  1468                           
  1469                           ;newmain.c: 214:     INTCONbits.T0IE = 1;
  1470  0516  168B               	bsf	11,5	;volatile
  1471                           
  1472                           ;newmain.c: 215:     INTCONbits.T0IF =0;
  1473  0517  110B               	bcf	11,2	;volatile
  1474                           
  1475                           ;newmain.c: 218:     PIE1bits.ADIE=1;
  1476  0518  170C               	bsf	12,6	;volatile
  1477                           
  1478                           ;newmain.c: 219:     PIR1bits.ADIF=0;
  1479  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1480  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1481  051B  130C               	bcf	12,6	;volatile
  1482  051C                     l1720:
  1483                           
  1484                           ;newmain.c: 220:     ADC_START();
  1485  051C  120A  118A  25DC  120A  118A  	fcall	_ADC_START
  1486                           
  1487                           ;newmain.c: 221:     initLCD();
  1488  0521  120A  118A  24B5  120A  118A  	fcall	_initLCD
  1489  0526                     l1722:
  1490                           
  1491                           ;newmain.c: 222:     LCDconfig();
  1492  0526  120A  118A  2388  120A  118A  	fcall	_LCDconfig
  1493  052B                     l1724:
  1494                           
  1495                           ;newmain.c: 225:     INTCONbits.RBIE = 1;
  1496  052B  158B               	bsf	11,3	;volatile
  1497  052C                     l1726:
  1498                           
  1499                           ;newmain.c: 226:     INTCONbits.RBIF = 0;
  1500  052C  100B               	bcf	11,0	;volatile
  1501  052D                     l1728:
  1502                           
  1503                           ;newmain.c: 227:     IOCB = 0b01100000;
  1504  052D  3060               	movlw	96
  1505  052E  1683               	bsf	3,5	;RP0=1, select bank1
  1506  052F  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0530  0096               	movwf	22	;volatile
  1508  0531                     l1730:
  1509                           
  1510                           ;newmain.c: 230:     TRISA = 0b00000011;
  1511  0531  3003               	movlw	3
  1512  0532  0085               	movwf	5	;volatile
  1513  0533                     l1732:
  1514                           
  1515                           ;newmain.c: 231:     TRISB = 0b00000000;
  1516  0533  0186               	clrf	6	;volatile
  1517  0534                     l1734:
  1518                           
  1519                           ;newmain.c: 232:     TRISC = 0;
  1520  0534  0187               	clrf	7	;volatile
  1521  0535                     l1736:
  1522                           
  1523                           ;newmain.c: 233:     TRISD = 0;
  1524  0535  0188               	clrf	8	;volatile
  1525  0536                     l1738:
  1526                           
  1527                           ;newmain.c: 234:     TRISE = 0;
  1528  0536  0189               	clrf	9	;volatile
  1529  0537                     l1740:
  1530                           
  1531                           ;newmain.c: 236:     PORTA = 0;
  1532  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0539  0185               	clrf	5	;volatile
  1535  053A                     l1742:
  1536                           
  1537                           ;newmain.c: 237:     PORTB = 0b00000000;
  1538  053A  0186               	clrf	6	;volatile
  1539  053B                     l1744:
  1540                           
  1541                           ;newmain.c: 238:     PORTC = 0;
  1542  053B  0187               	clrf	7	;volatile
  1543  053C                     l1746:
  1544                           
  1545                           ;newmain.c: 239:     PORTD = 0;
  1546  053C  0188               	clrf	8	;volatile
  1547  053D                     l1748:
  1548                           
  1549                           ;newmain.c: 240:     PORTE = 0;
  1550  053D  0189               	clrf	9	;volatile
  1551  053E                     l1750:
  1552                           
  1553                           ;newmain.c: 241:     ANSELH = 0;
  1554  053E  1683               	bsf	3,5	;RP0=1, select bank3
  1555  053F  1703               	bsf	3,6	;RP1=1, select bank3
  1556  0540  0189               	clrf	9	;volatile
  1557  0541                     l1752:
  1558                           
  1559                           ;newmain.c: 242:     ANSEL = 0b00000011;
  1560  0541  3003               	movlw	3
  1561  0542  0088               	movwf	8	;volatile
  1562  0543                     l1754:
  1563                           
  1564                           ;newmain.c: 245:     OPTION_REGbits.nRBPU = 0;
  1565  0543  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0544  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0545  1381               	bcf	1,7	;volatile
  1568  0546                     l1756:
  1569                           
  1570                           ;newmain.c: 246:     WPUB = 0b00000000;
  1571  0546  0195               	clrf	21	;volatile
  1572  0547                     l155:
  1573  0547  0008               	return
  1574  0548                     __end_of_initCONFIG:
  1575                           
  1576                           	psect	text2
  1577  04B5                     __ptext2:	
  1578 ;; *************** function _initLCD *****************
  1579 ;; Defined at:
  1580 ;;		line 16 in file "8bit_LCD.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          3       0       0       0       0
  1597 ;;      Totals:         3       0       0       0       0
  1598 ;;Total ram usage:        3 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 2
  1601 ;; This function calls:
  1602 ;;		_LCDsetup
  1603 ;; This function is called by:
  1604 ;;		_initCONFIG
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _initLCD
  1610  04B5                     _initLCD:
  1611  04B5                     l1698:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1614                           
  1615  04B5  3041               	movlw	65
  1616  04B6  00F5               	movwf	??_initLCD+1
  1617  04B7  30EE               	movlw	238
  1618  04B8  00F4               	movwf	??_initLCD
  1619  04B9                     u1247:
  1620  04B9  0BF4               	decfsz	??_initLCD,f
  1621  04BA  2CB9               	goto	u1247
  1622  04BB  0BF5               	decfsz	??_initLCD+1,f
  1623  04BC  2CB9               	goto	u1247
  1624  04BD  0000               	nop
  1625  04BE                     l1700:
  1626  04BE  3000               	movlw	0
  1627  04BF  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1628  04C4                     l1702:
  1629  04C4  3041               	movlw	65
  1630  04C5  00F5               	movwf	??_initLCD+1
  1631  04C6  30EE               	movlw	238
  1632  04C7  00F4               	movwf	??_initLCD
  1633  04C8                     u1257:
  1634  04C8  0BF4               	decfsz	??_initLCD,f
  1635  04C9  2CC8               	goto	u1257
  1636  04CA  0BF5               	decfsz	??_initLCD+1,f
  1637  04CB  2CC8               	goto	u1257
  1638  04CC  0000               	nop
  1639  04CD  3030               	movlw	48
  1640  04CE  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1641  04D3                     l1704:
  1642  04D3  3041               	movlw	65
  1643  04D4  00F5               	movwf	??_initLCD+1
  1644  04D5  30EE               	movlw	238
  1645  04D6  00F4               	movwf	??_initLCD
  1646  04D7                     u1267:
  1647  04D7  0BF4               	decfsz	??_initLCD,f
  1648  04D8  2CD7               	goto	u1267
  1649  04D9  0BF5               	decfsz	??_initLCD+1,f
  1650  04DA  2CD7               	goto	u1267
  1651  04DB  0000               	nop
  1652  04DC                     l1706:
  1653  04DC  3030               	movlw	48
  1654  04DD  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1655  04E2  3002               	movlw	2
  1656  04E3  00F6               	movwf	??_initLCD+2
  1657  04E4  3004               	movlw	4
  1658  04E5  00F5               	movwf	??_initLCD+1
  1659  04E6  30BA               	movlw	186
  1660  04E7  00F4               	movwf	??_initLCD
  1661  04E8                     u1277:
  1662  04E8  0BF4               	decfsz	??_initLCD,f
  1663  04E9  2CE8               	goto	u1277
  1664  04EA  0BF5               	decfsz	??_initLCD+1,f
  1665  04EB  2CE8               	goto	u1277
  1666  04EC  0BF6               	decfsz	??_initLCD+2,f
  1667  04ED  2CE8               	goto	u1277
  1668  04EE  0000               	nop
  1669  04EF                     l1708:
  1670  04EF  3030               	movlw	48
  1671  04F0  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1672  04F5                     l1710:
  1673  04F5  3010               	movlw	16
  1674  04F6  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1675  04FB                     l1712:
  1676  04FB  3001               	movlw	1
  1677  04FC  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1678  0501                     l1714:
  1679  0501  3006               	movlw	6
  1680  0502  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1681  0507                     l1716:
  1682  0507  300C               	movlw	12
  1683  0508  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1684  050D                     l179:
  1685  050D  0008               	return
  1686  050E                     __end_of_initLCD:
  1687                           
  1688                           	psect	text3
  1689  0388                     __ptext3:	
  1690 ;; *************** function _LCDconfig *****************
  1691 ;; Defined at:
  1692 ;;		line 186 in file "newmain.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0
  1708 ;;      Temps:          0       1       0       0       0
  1709 ;;      Totals:         0       1       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; Hardware stack levels required when called: 4
  1713 ;; This function calls:
  1714 ;;		_LCD_cursor
  1715 ;;		_wsLCD
  1716 ;; This function is called by:
  1717 ;;		_initCONFIG
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _LCDconfig
  1723  0388                     _LCDconfig:
  1724  0388                     l1678:	
  1725                           ;incstack = 0
  1726                           ; Regs used in _LCDconfig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1727                           
  1728                           
  1729                           ;newmain.c: 187:     LCD_cursor (1,3);
  1730  0388  3003               	movlw	3
  1731  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1732  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1733  038B  00A3               	movwf	??_LCDconfig
  1734  038C  0823               	movf	??_LCDconfig,w
  1735  038D  00F7               	movwf	LCD_cursor@y
  1736  038E  3001               	movlw	1
  1737  038F  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1738  0394                     l1680:
  1739                           
  1740                           ;newmain.c: 188:     wsLCD ("S1");
  1741  0394  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1742  0395  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1743  039A                     l1682:
  1744                           
  1745                           ;newmain.c: 189:     LCD_cursor(2,1);
  1746  039A  01F7               	clrf	LCD_cursor@y
  1747  039B  0AF7               	incf	LCD_cursor@y,f
  1748  039C  3002               	movlw	2
  1749  039D  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1750                           
  1751                           ;newmain.c: 190:     wsLCD ("0.00");
  1752  03A2  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1753  03A3  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1754  03A8                     l1684:
  1755                           
  1756                           ;newmain.c: 191:     LCD_cursor(1,8);
  1757  03A8  3008               	movlw	8
  1758  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  1759  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  1760  03AB  00A3               	movwf	??_LCDconfig
  1761  03AC  0823               	movf	??_LCDconfig,w
  1762  03AD  00F7               	movwf	LCD_cursor@y
  1763  03AE  3001               	movlw	1
  1764  03AF  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1765  03B4                     l1686:
  1766                           
  1767                           ;newmain.c: 192:     wsLCD("S2");
  1768  03B4  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1769  03B5  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1770                           
  1771                           ;newmain.c: 193:     LCD_cursor(2,7);
  1772  03BA  3007               	movlw	7
  1773  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1774  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1775  03BD  00A3               	movwf	??_LCDconfig
  1776  03BE  0823               	movf	??_LCDconfig,w
  1777  03BF  00F7               	movwf	LCD_cursor@y
  1778  03C0  3002               	movlw	2
  1779  03C1  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1780  03C6                     l1688:
  1781                           
  1782                           ;newmain.c: 194:     wsLCD ("0.00");
  1783  03C6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1784  03C7  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1785  03CC                     l1690:
  1786                           
  1787                           ;newmain.c: 195:     LCD_cursor(1,13);
  1788  03CC  300D               	movlw	13
  1789  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1790  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1791  03CF  00A3               	movwf	??_LCDconfig
  1792  03D0  0823               	movf	??_LCDconfig,w
  1793  03D1  00F7               	movwf	LCD_cursor@y
  1794  03D2  3001               	movlw	1
  1795  03D3  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1796                           
  1797                           ;newmain.c: 196:     wsLCD("S3");
  1798  03D8  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1799  03D9  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1800  03DE                     l1692:
  1801                           
  1802                           ;newmain.c: 197:     LCD_cursor(2,13);
  1803  03DE  300D               	movlw	13
  1804  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1805  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1806  03E1  00A3               	movwf	??_LCDconfig
  1807  03E2  0823               	movf	??_LCDconfig,w
  1808  03E3  00F7               	movwf	LCD_cursor@y
  1809  03E4  3002               	movlw	2
  1810  03E5  120A  118A  259C  120A  118A  	fcall	_LCD_cursor
  1811  03EA                     l1694:
  1812                           
  1813                           ;newmain.c: 198:     wsLCD ("0.00");
  1814  03EA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1815  03EB  120A  118A  2573  120A  118A  	fcall	_wsLCD
  1816  03F0                     l152:
  1817  03F0  0008               	return
  1818  03F1                     __end_of_LCDconfig:
  1819                           
  1820                           	psect	text4
  1821  0573                     __ptext4:	
  1822 ;; *************** function _wsLCD *****************
  1823 ;; Defined at:
  1824 ;;		line 32 in file "8bit_LCD.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  x               1    wreg     PTR unsigned char 
  1827 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  1828 ;;		 -> STR_2(5), STR_1(3), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  x               1    2[BANK0 ] PTR unsigned char 
  1831 ;;		 -> STR_6(5), STR_5(3), STR_4(5), STR_3(3), 
  1832 ;;		 -> STR_2(5), STR_1(3), 
  1833 ;;  i               2    0[BANK0 ] int 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       3       0       0       0
  1845 ;;      Temps:          0       0       0       0       0
  1846 ;;      Totals:         0       3       0       0       0
  1847 ;;Total ram usage:        3 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 3
  1850 ;; This function calls:
  1851 ;;		_wLCD
  1852 ;; This function is called by:
  1853 ;;		_LCDconfig
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _wsLCD
  1859  0573                     _wsLCD:
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _wsLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1863                           ;wsLCD@x stored from wreg
  1864  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0575  00A2               	movwf	wsLCD@x
  1867  0576                     l1670:
  1868  0576  01A0               	clrf	wsLCD@i
  1869  0577  01A1               	clrf	wsLCD@i+1
  1870  0578  2D8E               	goto	l1676
  1871  0579                     l1672:
  1872  0579  0820               	movf	wsLCD@i,w
  1873  057A  0722               	addwf	wsLCD@x,w
  1874  057B  0084               	movwf	4
  1875  057C  120A  118A  261D  120A  118A  	fcall	stringdir
  1876  0581  120A  118A  25F3  120A  118A  	fcall	_wLCD
  1877  0586                     l1674:
  1878  0586  3001               	movlw	1
  1879  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0589  07A0               	addwf	wsLCD@i,f
  1882  058A  1803               	skipnc
  1883  058B  0AA1               	incf	wsLCD@i+1,f
  1884  058C  3000               	movlw	0
  1885  058D  07A1               	addwf	wsLCD@i+1,f
  1886  058E                     l1676:
  1887  058E  0820               	movf	wsLCD@i,w
  1888  058F  0722               	addwf	wsLCD@x,w
  1889  0590  0084               	movwf	4
  1890  0591  120A  118A  261D  120A  118A  	fcall	stringdir
  1891  0596  3A00               	xorlw	0
  1892  0597  1D03               	skipz
  1893  0598  2D9A               	goto	u1031
  1894  0599  2D9B               	goto	u1030
  1895  059A                     u1031:
  1896  059A  2D79               	goto	l1672
  1897  059B                     u1030:
  1898  059B                     l185:
  1899  059B  0008               	return
  1900  059C                     __end_of_wsLCD:
  1901                           
  1902                           	psect	text5
  1903  05F3                     __ptext5:	
  1904 ;; *************** function _wLCD *****************
  1905 ;; Defined at:
  1906 ;;		line 37 in file "8bit_LCD.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  x               1    wreg     unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  x               1    5[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 2
  1927 ;; This function calls:
  1928 ;;		_LCDsetup
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;;		_wsLCD
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _wLCD
  1937  05F3                     _wLCD:
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _wLCD: [wreg+status,2+status,0+pclath+cstack]
  1941                           ;wLCD@x stored from wreg
  1942  05F3  00F5               	movwf	wLCD@x
  1943  05F4                     l1638:
  1944  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1945  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1946  05F6  1409               	bsf	9,0	;volatile
  1947  05F7                     l1640:
  1948  05F7  0875               	movf	wLCD@x,w
  1949  05F8  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  1950  05FD                     l1642:
  1951  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1952  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1953  05FF  1489               	bsf	9,1	;volatile
  1954  0600                     l1644:
  1955  0600  3021               	movlw	33
  1956  0601  00F4               	movwf	??_wLCD
  1957  0602                     u1287:
  1958  0602  0BF4               	decfsz	??_wLCD,f
  1959  0603  2E02               	goto	u1287
  1960  0604                     l1646:
  1961  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0606  1089               	bcf	9,1	;volatile
  1964  0607                     l188:
  1965  0607  0008               	return
  1966  0608                     __end_of_wLCD:
  1967                           
  1968                           	psect	text6
  1969  059C                     __ptext6:	
  1970 ;; *************** function _LCD_cursor *****************
  1971 ;; Defined at:
  1972 ;;		line 51 in file "8bit_LCD.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  x               1    wreg     unsigned char 
  1975 ;;  y               1    7[COMMON] unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  x               1    1[BANK0 ] unsigned char 
  1978 ;;  a               1    2[BANK0 ] unsigned char 
  1979 ;;  c               1    0        unsigned char 
  1980 ;;  b               1    0        unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         1       0       0       0       0
  1991 ;;      Locals:         0       2       0       0       0
  1992 ;;      Temps:          0       1       0       0       0
  1993 ;;      Totals:         1       3       0       0       0
  1994 ;;Total ram usage:        4 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 3
  1997 ;; This function calls:
  1998 ;;		_LCD_set
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;;		_LCDconfig
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _LCD_cursor
  2007  059C                     _LCD_cursor:
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
  2011                           ;LCD_cursor@x stored from wreg
  2012  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2013  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2014  059E  00A1               	movwf	LCD_cursor@x
  2015  059F                     l1658:
  2016  059F  0321               	decf	LCD_cursor@x,w
  2017  05A0  1D03               	btfss	3,2
  2018  05A1  2DA3               	goto	u1011
  2019  05A2  2DA4               	goto	u1010
  2020  05A3                     u1011:
  2021  05A3  2DB0               	goto	l1664
  2022  05A4                     u1010:
  2023  05A4                     l1660:
  2024  05A4  0877               	movf	LCD_cursor@y,w
  2025  05A5  3E7F               	addlw	127
  2026  05A6  00A0               	movwf	??_LCD_cursor
  2027  05A7  0820               	movf	??_LCD_cursor,w
  2028  05A8  00A2               	movwf	LCD_cursor@a
  2029  05A9                     l1662:
  2030  05A9  0822               	movf	LCD_cursor@a,w
  2031  05AA  120A  118A  25C2  120A  118A  	fcall	_LCD_set
  2032  05AF  2DC1               	goto	l197
  2033  05B0                     l1664:
  2034  05B0  3002               	movlw	2
  2035  05B1  0621               	xorwf	LCD_cursor@x,w
  2036  05B2  1D03               	btfss	3,2
  2037  05B3  2DB5               	goto	u1021
  2038  05B4  2DB6               	goto	u1020
  2039  05B5                     u1021:
  2040  05B5  2DC1               	goto	l197
  2041  05B6                     u1020:
  2042  05B6                     l1666:
  2043  05B6  0877               	movf	LCD_cursor@y,w
  2044  05B7  3EBF               	addlw	191
  2045  05B8  00A0               	movwf	??_LCD_cursor
  2046  05B9  0820               	movf	??_LCD_cursor,w
  2047  05BA  00A2               	movwf	LCD_cursor@a
  2048  05BB                     l1668:
  2049  05BB  0822               	movf	LCD_cursor@a,w
  2050  05BC  120A  118A  25C2  120A  118A  	fcall	_LCD_set
  2051  05C1                     l197:
  2052  05C1  0008               	return
  2053  05C2                     __end_of_LCD_cursor:
  2054                           
  2055                           	psect	text7
  2056  05C2                     __ptext7:	
  2057 ;; *************** function _LCD_set *****************
  2058 ;; Defined at:
  2059 ;;		line 44 in file "8bit_LCD.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  x               1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  x               1    6[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0
  2075 ;;      Temps:          2       0       0       0       0
  2076 ;;      Totals:         3       0       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 2
  2080 ;; This function calls:
  2081 ;;		_LCDsetup
  2082 ;; This function is called by:
  2083 ;;		_LCD_cursor
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _LCD_set
  2089  05C2                     _LCD_set:
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _LCD_set: [wreg+status,2+status,0+pclath+cstack]
  2093                           ;LCD_set@x stored from wreg
  2094  05C2  00F6               	movwf	LCD_set@x
  2095  05C3                     l1648:
  2096  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2097  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2098  05C5  1009               	bcf	9,0	;volatile
  2099  05C6                     l1650:
  2100  05C6  0876               	movf	LCD_set@x,w
  2101  05C7  120A  118A  2631  120A  118A  	fcall	_LCDsetup
  2102  05CC                     l1652:
  2103  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2104  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2105  05CE  1489               	bsf	9,1	;volatile
  2106  05CF                     l1654:
  2107  05CF  3068               	movlw	104
  2108  05D0  00F5               	movwf	??_LCD_set+1
  2109  05D1  30E4               	movlw	228
  2110  05D2  00F4               	movwf	??_LCD_set
  2111  05D3                     u1297:
  2112  05D3  0BF4               	decfsz	??_LCD_set,f
  2113  05D4  2DD3               	goto	u1297
  2114  05D5  0BF5               	decfsz	??_LCD_set+1,f
  2115  05D6  2DD3               	goto	u1297
  2116  05D7  0000               	nop
  2117  05D8                     l1656:
  2118  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2119  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2120  05DA  1089               	bcf	9,1	;volatile
  2121  05DB                     l191:
  2122  05DB  0008               	return
  2123  05DC                     __end_of_LCD_set:
  2124                           
  2125                           	psect	text8
  2126  0631                     __ptext8:	
  2127 ;; *************** function _LCDsetup *****************
  2128 ;; Defined at:
  2129 ;;		line 62 in file "8bit_LCD.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  x               1    wreg     unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  x               1    3[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         1       0       0       0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_initLCD
  2154 ;;		_wLCD
  2155 ;;		_LCD_set
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _LCDsetup
  2161  0631                     _LCDsetup:
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _LCDsetup: [wreg]
  2165                           ;LCDsetup@x stored from wreg
  2166  0631  00F3               	movwf	LCDsetup@x
  2167  0632                     l1636:
  2168  0632  0873               	movf	LCDsetup@x,w
  2169  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0635  0088               	movwf	8	;volatile
  2172  0636                     l200:
  2173  0636  0008               	return
  2174  0637                     __end_of_LCDsetup:
  2175                           
  2176                           	psect	text9
  2177  05DC                     __ptext9:	
  2178 ;; *************** function _ADC_START *****************
  2179 ;; Defined at:
  2180 ;;		line 15 in file "adc.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0
  2196 ;;      Temps:          1       0       0       0       0
  2197 ;;      Totals:         1       0       0       0       0
  2198 ;;Total ram usage:        1 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_initCONFIG
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _ADC_START
  2210  05DC                     _ADC_START:
  2211  05DC                     l1276:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _ADC_START: [wreg+status,2+status,0]
  2214                           
  2215                           
  2216                           ;adc.c: 16:         ADCON1bits.ADFM = 0;
  2217  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2218  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2219  05DE  139F               	bcf	31,7	;volatile
  2220                           
  2221                           ;adc.c: 17:         ADCON1bits.VCFG0 = 0;
  2222  05DF  121F               	bcf	31,4	;volatile
  2223                           
  2224                           ;adc.c: 18:         ADCON1bits.VCFG1 = 0;
  2225  05E0  129F               	bcf	31,5	;volatile
  2226  05E1                     l1278:
  2227                           
  2228                           ;adc.c: 19:         ADCON0bits.ADCS = 0b10;
  2229  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  2230  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  2231  05E3  081F               	movf	31,w	;volatile
  2232  05E4  393F               	andlw	-193
  2233  05E5  3880               	iorlw	128
  2234  05E6  009F               	movwf	31	;volatile
  2235                           
  2236                           ;adc.c: 20:         ADCON0bits.CHS = 0;
  2237  05E7  30C3               	movlw	-61
  2238  05E8  059F               	andwf	31,f	;volatile
  2239  05E9                     l1280:
  2240                           
  2241                           ;adc.c: 21:         ADCON0bits.ADON = 1;
  2242  05E9  141F               	bsf	31,0	;volatile
  2243  05EA                     l1282:
  2244                           
  2245                           ;adc.c: 22:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  2246  05EA  3010               	movlw	16
  2247  05EB  00F3               	movwf	??_ADC_START
  2248  05EC                     u1307:
  2249  05EC  0BF3               	decfsz	??_ADC_START,f
  2250  05ED  2DEC               	goto	u1307
  2251  05EE  0000               	nop
  2252  05EF                     l1284:
  2253                           
  2254                           ;adc.c: 23:         ADCON0bits.GO = 1;
  2255  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2256  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2257  05F1  149F               	bsf	31,1	;volatile
  2258  05F2                     l164:
  2259  05F2  0008               	return
  2260  05F3                     __end_of_ADC_START:
  2261                           
  2262                           	psect	text10
  2263  0548                     __ptext10:	
  2264 ;; *************** function ___wmul *****************
  2265 ;; Defined at:
  2266 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  multiplier      2    3[COMMON] unsigned int 
  2269 ;;  multiplicand    2    5[COMMON] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  product         2    0[BANK0 ] unsigned int 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    3[COMMON] unsigned int 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         4       0       0       0       0
  2282 ;;      Locals:         0       2       0       0       0
  2283 ;;      Temps:          0       0       0       0       0
  2284 ;;      Totals:         4       2       0       0       0
  2285 ;;Total ram usage:        6 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 1
  2288 ;; This function calls:
  2289 ;;		Nothing
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function ___wmul
  2297  0548                     ___wmul:
  2298  0548                     l1760:	
  2299                           ;incstack = 0
  2300                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2301                           
  2302  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2304  054A  01A0               	clrf	___wmul@product
  2305  054B  01A1               	clrf	___wmul@product+1
  2306  054C                     l1762:
  2307  054C  1C73               	btfss	___wmul@multiplier,0
  2308  054D  2D4F               	goto	u1041
  2309  054E  2D50               	goto	u1040
  2310  054F                     u1041:
  2311  054F  2D58               	goto	l286
  2312  0550                     u1040:
  2313  0550                     l1764:
  2314  0550  0875               	movf	___wmul@multiplicand,w
  2315  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0553  07A0               	addwf	___wmul@product,f
  2318  0554  1803               	skipnc
  2319  0555  0AA1               	incf	___wmul@product+1,f
  2320  0556  0876               	movf	___wmul@multiplicand+1,w
  2321  0557  07A1               	addwf	___wmul@product+1,f
  2322  0558                     l286:
  2323  0558  3001               	movlw	1
  2324  0559                     u1055:
  2325  0559  1003               	clrc
  2326  055A  0DF5               	rlf	___wmul@multiplicand,f
  2327  055B  0DF6               	rlf	___wmul@multiplicand+1,f
  2328  055C  3EFF               	addlw	-1
  2329  055D  1D03               	skipz
  2330  055E  2D59               	goto	u1055
  2331  055F                     l1766:
  2332  055F  3001               	movlw	1
  2333  0560                     u1065:
  2334  0560  1003               	clrc
  2335  0561  0CF4               	rrf	___wmul@multiplier+1,f
  2336  0562  0CF3               	rrf	___wmul@multiplier,f
  2337  0563  3EFF               	addlw	-1
  2338  0564  1D03               	skipz
  2339  0565  2D60               	goto	u1065
  2340  0566                     l1768:
  2341  0566  0873               	movf	___wmul@multiplier,w
  2342  0567  0474               	iorwf	___wmul@multiplier+1,w
  2343  0568  1D03               	btfss	3,2
  2344  0569  2D6B               	goto	u1071
  2345  056A  2D6C               	goto	u1070
  2346  056B                     u1071:
  2347  056B  2D4C               	goto	l1762
  2348  056C                     u1070:
  2349  056C                     l1770:
  2350  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2351  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2352  056E  0821               	movf	___wmul@product+1,w
  2353  056F  00F4               	movwf	?___wmul+1
  2354  0570  0820               	movf	___wmul@product,w
  2355  0571  00F3               	movwf	?___wmul
  2356  0572                     l288:
  2357  0572  0008               	return
  2358  0573                     __end_of___wmul:
  2359                           
  2360                           	psect	text11
  2361  0608                     __ptext11:	
  2362 ;; *************** function ___bmul *****************
  2363 ;; Defined at:
  2364 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  multiplier      1    wreg     unsigned char 
  2367 ;;  multiplicand    1    3[COMMON] unsigned char 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  multiplier      1    6[COMMON] unsigned char 
  2370 ;;  product         1    5[COMMON] unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      unsigned char 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         1       0       0       0       0
  2381 ;;      Locals:         2       0       0       0       0
  2382 ;;      Temps:          1       0       0       0       0
  2383 ;;      Totals:         4       0       0       0       0
  2384 ;;Total ram usage:        4 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function ___bmul
  2396  0608                     ___bmul:
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2400                           ;___bmul@multiplier stored from wreg
  2401  0608  00F6               	movwf	___bmul@multiplier
  2402  0609                     l1364:
  2403  0609  01F5               	clrf	___bmul@product
  2404  060A                     l1366:
  2405  060A  1C76               	btfss	___bmul@multiplier,0
  2406  060B  2E0D               	goto	u581
  2407  060C  2E0E               	goto	u580
  2408  060D                     u581:
  2409  060D  2E12               	goto	l1370
  2410  060E                     u580:
  2411  060E                     l1368:
  2412  060E  0873               	movf	___bmul@multiplicand,w
  2413  060F  00F4               	movwf	??___bmul
  2414  0610  0874               	movf	??___bmul,w
  2415  0611  07F5               	addwf	___bmul@product,f
  2416  0612                     l1370:
  2417  0612  1003               	clrc
  2418  0613  0DF3               	rlf	___bmul@multiplicand,f
  2419  0614                     l1372:
  2420  0614  1003               	clrc
  2421  0615  0CF6               	rrf	___bmul@multiplier,f
  2422  0616  0876               	movf	___bmul@multiplier,w
  2423  0617  1D03               	btfss	3,2
  2424  0618  2E1A               	goto	u591
  2425  0619  2E1B               	goto	u590
  2426  061A                     u591:
  2427  061A  2E0A               	goto	l1366
  2428  061B                     u590:
  2429  061B                     l1374:
  2430  061B  0875               	movf	___bmul@product,w
  2431  061C                     l312:
  2432  061C  0008               	return
  2433  061D                     __end_of___bmul:
  2434                           
  2435                           	psect	text12
  2436  045A                     __ptext12:	
  2437 ;; *************** function ___awmod *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         2    3[COMMON] int 
  2442 ;;  dividend        2    5[COMMON] int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  sign            1    1[BANK0 ] unsigned char 
  2445 ;;  counter         1    0[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    3[COMMON] int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         4       0       0       0       0
  2456 ;;      Locals:         0       2       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         5       2       0       0       0
  2459 ;;Total ram usage:        7 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function ___awmod
  2471  045A                     ___awmod:
  2472  045A                     l1774:	
  2473                           ;incstack = 0
  2474                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2475                           
  2476  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2477  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2478  045C  01A1               	clrf	___awmod@sign
  2479  045D                     l1776:
  2480  045D  1FF6               	btfss	___awmod@dividend+1,7
  2481  045E  2C60               	goto	u1081
  2482  045F  2C61               	goto	u1080
  2483  0460                     u1081:
  2484  0460  2C68               	goto	l1782
  2485  0461                     u1080:
  2486  0461                     l1778:
  2487  0461  09F5               	comf	___awmod@dividend,f
  2488  0462  09F6               	comf	___awmod@dividend+1,f
  2489  0463  0AF5               	incf	___awmod@dividend,f
  2490  0464  1903               	skipnz
  2491  0465  0AF6               	incf	___awmod@dividend+1,f
  2492  0466                     l1780:
  2493  0466  01A1               	clrf	___awmod@sign
  2494  0467  0AA1               	incf	___awmod@sign,f
  2495  0468                     l1782:
  2496  0468  1FF4               	btfss	___awmod@divisor+1,7
  2497  0469  2C6B               	goto	u1091
  2498  046A  2C6C               	goto	u1090
  2499  046B                     u1091:
  2500  046B  2C71               	goto	l1786
  2501  046C                     u1090:
  2502  046C                     l1784:
  2503  046C  09F3               	comf	___awmod@divisor,f
  2504  046D  09F4               	comf	___awmod@divisor+1,f
  2505  046E  0AF3               	incf	___awmod@divisor,f
  2506  046F  1903               	skipnz
  2507  0470  0AF4               	incf	___awmod@divisor+1,f
  2508  0471                     l1786:
  2509  0471  0873               	movf	___awmod@divisor,w
  2510  0472  0474               	iorwf	___awmod@divisor+1,w
  2511  0473  1903               	btfsc	3,2
  2512  0474  2C76               	goto	u1101
  2513  0475  2C77               	goto	u1100
  2514  0476                     u1101:
  2515  0476  2CA6               	goto	l1804
  2516  0477                     u1100:
  2517  0477                     l1788:
  2518  0477  01A0               	clrf	___awmod@counter
  2519  0478  0AA0               	incf	___awmod@counter,f
  2520  0479  2C85               	goto	l1794
  2521  047A                     l1790:
  2522  047A  3001               	movlw	1
  2523  047B                     u1115:
  2524  047B  1003               	clrc
  2525  047C  0DF3               	rlf	___awmod@divisor,f
  2526  047D  0DF4               	rlf	___awmod@divisor+1,f
  2527  047E  3EFF               	addlw	-1
  2528  047F  1D03               	skipz
  2529  0480  2C7B               	goto	u1115
  2530  0481                     l1792:
  2531  0481  3001               	movlw	1
  2532  0482  00F7               	movwf	??___awmod
  2533  0483  0877               	movf	??___awmod,w
  2534  0484  07A0               	addwf	___awmod@counter,f
  2535  0485                     l1794:
  2536  0485  1FF4               	btfss	___awmod@divisor+1,7
  2537  0486  2C88               	goto	u1121
  2538  0487  2C89               	goto	u1120
  2539  0488                     u1121:
  2540  0488  2C7A               	goto	l1790
  2541  0489                     u1120:
  2542  0489                     l1796:
  2543  0489  0874               	movf	___awmod@divisor+1,w
  2544  048A  0276               	subwf	___awmod@dividend+1,w
  2545  048B  1D03               	skipz
  2546  048C  2C8F               	goto	u1135
  2547  048D  0873               	movf	___awmod@divisor,w
  2548  048E  0275               	subwf	___awmod@dividend,w
  2549  048F                     u1135:
  2550  048F  1C03               	skipc
  2551  0490  2C92               	goto	u1131
  2552  0491  2C93               	goto	u1130
  2553  0492                     u1131:
  2554  0492  2C99               	goto	l1800
  2555  0493                     u1130:
  2556  0493                     l1798:
  2557  0493  0873               	movf	___awmod@divisor,w
  2558  0494  02F5               	subwf	___awmod@dividend,f
  2559  0495  0874               	movf	___awmod@divisor+1,w
  2560  0496  1C03               	skipc
  2561  0497  03F6               	decf	___awmod@dividend+1,f
  2562  0498  02F6               	subwf	___awmod@dividend+1,f
  2563  0499                     l1800:
  2564  0499  3001               	movlw	1
  2565  049A                     u1145:
  2566  049A  1003               	clrc
  2567  049B  0CF4               	rrf	___awmod@divisor+1,f
  2568  049C  0CF3               	rrf	___awmod@divisor,f
  2569  049D  3EFF               	addlw	-1
  2570  049E  1D03               	skipz
  2571  049F  2C9A               	goto	u1145
  2572  04A0                     l1802:
  2573  04A0  3001               	movlw	1
  2574  04A1  02A0               	subwf	___awmod@counter,f
  2575  04A2  1D03               	btfss	3,2
  2576  04A3  2CA5               	goto	u1151
  2577  04A4  2CA6               	goto	u1150
  2578  04A5                     u1151:
  2579  04A5  2C89               	goto	l1796
  2580  04A6                     u1150:
  2581  04A6                     l1804:
  2582  04A6  0821               	movf	___awmod@sign,w
  2583  04A7  1903               	btfsc	3,2
  2584  04A8  2CAA               	goto	u1161
  2585  04A9  2CAB               	goto	u1160
  2586  04AA                     u1161:
  2587  04AA  2CB0               	goto	l1808
  2588  04AB                     u1160:
  2589  04AB                     l1806:
  2590  04AB  09F5               	comf	___awmod@dividend,f
  2591  04AC  09F6               	comf	___awmod@dividend+1,f
  2592  04AD  0AF5               	incf	___awmod@dividend,f
  2593  04AE  1903               	skipnz
  2594  04AF  0AF6               	incf	___awmod@dividend+1,f
  2595  04B0                     l1808:
  2596  04B0  0876               	movf	___awmod@dividend+1,w
  2597  04B1  00F4               	movwf	?___awmod+1
  2598  04B2  0875               	movf	___awmod@dividend,w
  2599  04B3  00F3               	movwf	?___awmod
  2600  04B4                     l452:
  2601  04B4  0008               	return
  2602  04B5                     __end_of___awmod:
  2603                           
  2604                           	psect	text13
  2605  03F1                     __ptext13:	
  2606 ;; *************** function ___awdiv *****************
  2607 ;; Defined at:
  2608 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  divisor         2    2[BANK0 ] int 
  2611 ;;  dividend        2    4[BANK0 ] int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  quotient        2    8[BANK0 ] int 
  2614 ;;  sign            1    7[BANK0 ] unsigned char 
  2615 ;;  counter         1    6[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2    2[BANK0 ] int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       4       0       0       0
  2626 ;;      Locals:         0       4       0       0       0
  2627 ;;      Temps:          1       0       0       0       0
  2628 ;;      Totals:         1       8       0       0       0
  2629 ;;Total ram usage:        9 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function ___awdiv
  2641  03F1                     ___awdiv:
  2642  03F1                     l1378:	
  2643                           ;incstack = 0
  2644                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2645                           
  2646  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2647  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2648  03F3  01A7               	clrf	___awdiv@sign
  2649  03F4                     l1380:
  2650  03F4  1FA3               	btfss	___awdiv@divisor+1,7
  2651  03F5  2BF7               	goto	u601
  2652  03F6  2BF8               	goto	u600
  2653  03F7                     u601:
  2654  03F7  2BFF               	goto	l1386
  2655  03F8                     u600:
  2656  03F8                     l1382:
  2657  03F8  09A2               	comf	___awdiv@divisor,f
  2658  03F9  09A3               	comf	___awdiv@divisor+1,f
  2659  03FA  0AA2               	incf	___awdiv@divisor,f
  2660  03FB  1903               	skipnz
  2661  03FC  0AA3               	incf	___awdiv@divisor+1,f
  2662  03FD                     l1384:
  2663  03FD  01A7               	clrf	___awdiv@sign
  2664  03FE  0AA7               	incf	___awdiv@sign,f
  2665  03FF                     l1386:
  2666  03FF  1FA5               	btfss	___awdiv@dividend+1,7
  2667  0400  2C02               	goto	u611
  2668  0401  2C03               	goto	u610
  2669  0402                     u611:
  2670  0402  2C0C               	goto	l1392
  2671  0403                     u610:
  2672  0403                     l1388:
  2673  0403  09A4               	comf	___awdiv@dividend,f
  2674  0404  09A5               	comf	___awdiv@dividend+1,f
  2675  0405  0AA4               	incf	___awdiv@dividend,f
  2676  0406  1903               	skipnz
  2677  0407  0AA5               	incf	___awdiv@dividend+1,f
  2678  0408                     l1390:
  2679  0408  3001               	movlw	1
  2680  0409  00F7               	movwf	??___awdiv
  2681  040A  0877               	movf	??___awdiv,w
  2682  040B  06A7               	xorwf	___awdiv@sign,f
  2683  040C                     l1392:
  2684  040C  01A8               	clrf	___awdiv@quotient
  2685  040D  01A9               	clrf	___awdiv@quotient+1
  2686  040E                     l1394:
  2687  040E  0822               	movf	___awdiv@divisor,w
  2688  040F  0423               	iorwf	___awdiv@divisor+1,w
  2689  0410  1903               	btfsc	3,2
  2690  0411  2C13               	goto	u621
  2691  0412  2C14               	goto	u620
  2692  0413                     u621:
  2693  0413  2C4B               	goto	l1414
  2694  0414                     u620:
  2695  0414                     l1396:
  2696  0414  01A6               	clrf	___awdiv@counter
  2697  0415  0AA6               	incf	___awdiv@counter,f
  2698  0416  2C22               	goto	l1402
  2699  0417                     l1398:
  2700  0417  3001               	movlw	1
  2701  0418                     u635:
  2702  0418  1003               	clrc
  2703  0419  0DA2               	rlf	___awdiv@divisor,f
  2704  041A  0DA3               	rlf	___awdiv@divisor+1,f
  2705  041B  3EFF               	addlw	-1
  2706  041C  1D03               	skipz
  2707  041D  2C18               	goto	u635
  2708  041E                     l1400:
  2709  041E  3001               	movlw	1
  2710  041F  00F7               	movwf	??___awdiv
  2711  0420  0877               	movf	??___awdiv,w
  2712  0421  07A6               	addwf	___awdiv@counter,f
  2713  0422                     l1402:
  2714  0422  1FA3               	btfss	___awdiv@divisor+1,7
  2715  0423  2C25               	goto	u641
  2716  0424  2C26               	goto	u640
  2717  0425                     u641:
  2718  0425  2C17               	goto	l1398
  2719  0426                     u640:
  2720  0426                     l1404:
  2721  0426  3001               	movlw	1
  2722  0427                     u655:
  2723  0427  1003               	clrc
  2724  0428  0DA8               	rlf	___awdiv@quotient,f
  2725  0429  0DA9               	rlf	___awdiv@quotient+1,f
  2726  042A  3EFF               	addlw	-1
  2727  042B  1D03               	skipz
  2728  042C  2C27               	goto	u655
  2729  042D  0823               	movf	___awdiv@divisor+1,w
  2730  042E  0225               	subwf	___awdiv@dividend+1,w
  2731  042F  1D03               	skipz
  2732  0430  2C33               	goto	u665
  2733  0431  0822               	movf	___awdiv@divisor,w
  2734  0432  0224               	subwf	___awdiv@dividend,w
  2735  0433                     u665:
  2736  0433  1C03               	skipc
  2737  0434  2C36               	goto	u661
  2738  0435  2C37               	goto	u660
  2739  0436                     u661:
  2740  0436  2C3E               	goto	l1410
  2741  0437                     u660:
  2742  0437                     l1406:
  2743  0437  0822               	movf	___awdiv@divisor,w
  2744  0438  02A4               	subwf	___awdiv@dividend,f
  2745  0439  0823               	movf	___awdiv@divisor+1,w
  2746  043A  1C03               	skipc
  2747  043B  03A5               	decf	___awdiv@dividend+1,f
  2748  043C  02A5               	subwf	___awdiv@dividend+1,f
  2749  043D                     l1408:
  2750  043D  1428               	bsf	___awdiv@quotient,0
  2751  043E                     l1410:
  2752  043E  3001               	movlw	1
  2753  043F                     u675:
  2754  043F  1003               	clrc
  2755  0440  0CA3               	rrf	___awdiv@divisor+1,f
  2756  0441  0CA2               	rrf	___awdiv@divisor,f
  2757  0442  3EFF               	addlw	-1
  2758  0443  1D03               	skipz
  2759  0444  2C3F               	goto	u675
  2760  0445                     l1412:
  2761  0445  3001               	movlw	1
  2762  0446  02A6               	subwf	___awdiv@counter,f
  2763  0447  1D03               	btfss	3,2
  2764  0448  2C4A               	goto	u681
  2765  0449  2C4B               	goto	u680
  2766  044A                     u681:
  2767  044A  2C26               	goto	l1404
  2768  044B                     u680:
  2769  044B                     l1414:
  2770  044B  0827               	movf	___awdiv@sign,w
  2771  044C  1903               	btfsc	3,2
  2772  044D  2C4F               	goto	u691
  2773  044E  2C50               	goto	u690
  2774  044F                     u691:
  2775  044F  2C55               	goto	l1418
  2776  0450                     u690:
  2777  0450                     l1416:
  2778  0450  09A8               	comf	___awdiv@quotient,f
  2779  0451  09A9               	comf	___awdiv@quotient+1,f
  2780  0452  0AA8               	incf	___awdiv@quotient,f
  2781  0453  1903               	skipnz
  2782  0454  0AA9               	incf	___awdiv@quotient+1,f
  2783  0455                     l1418:
  2784  0455  0829               	movf	___awdiv@quotient+1,w
  2785  0456  00A3               	movwf	?___awdiv+1
  2786  0457  0828               	movf	___awdiv@quotient,w
  2787  0458  00A2               	movwf	?___awdiv
  2788  0459                     l439:
  2789  0459  0008               	return
  2790  045A                     __end_of___awdiv:
  2791                           
  2792                           	psect	text14
  2793  02C0                     __ptext14:	
  2794 ;; *************** function _ISR *****************
  2795 ;; Defined at:
  2796 ;;		line 113 in file "newmain.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0
  2812 ;;      Temps:          3       0       0       0       0
  2813 ;;      Totals:         3       0       0       0       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; This function calls:
  2817 ;;		Nothing
  2818 ;; This function is called by:
  2819 ;;		Interrupt level 1
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _ISR
  2825  02C0                     _ISR:
  2826  02C0                     i1l1536:
  2827                           
  2828                           ;newmain.c: 114:         if(PIR1bits.ADIF){
  2829  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2830  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2831  02C2  1F0C               	btfss	12,6	;volatile
  2832  02C3  2AC5               	goto	u86_21
  2833  02C4  2AC6               	goto	u86_20
  2834  02C5                     u86_21:
  2835  02C5  2AE2               	goto	i1l1556
  2836  02C6                     u86_20:
  2837  02C6                     i1l1538:
  2838                           
  2839                           ;newmain.c: 115:             if (F ==1){
  2840  02C6  0379               	decf	_F,w
  2841  02C7  1D03               	btfss	3,2
  2842  02C8  2ACA               	goto	u87_21
  2843  02C9  2ACB               	goto	u87_20
  2844  02CA                     u87_21:
  2845  02CA  2AD2               	goto	i1l1546
  2846  02CB                     u87_20:
  2847  02CB                     i1l1540:
  2848                           
  2849                           ;newmain.c: 116:             ADC_read0 = ADRESH;
  2850  02CB  081E               	movf	30,w	;volatile
  2851  02CC  00F0               	movwf	??_ISR
  2852  02CD  0870               	movf	??_ISR,w
  2853  02CE  00C0               	movwf	_ADC_read0
  2854  02CF                     i1l1542:
  2855                           
  2856                           ;newmain.c: 117:             ADCON0bits.CHS0 = 1;
  2857  02CF  151F               	bsf	31,2	;volatile
  2858  02D0                     i1l1544:
  2859                           
  2860                           ;newmain.c: 118:             F = 0;
  2861  02D0  01F9               	clrf	_F
  2862                           
  2863                           ;newmain.c: 119:         }else{
  2864  02D1  2AD9               	goto	i1l1552
  2865  02D2                     i1l1546:
  2866                           
  2867                           ;newmain.c: 120:             ADC_read1 = ADRESH;
  2868  02D2  081E               	movf	30,w	;volatile
  2869  02D3  00F0               	movwf	??_ISR
  2870  02D4  0870               	movf	??_ISR,w
  2871  02D5  00BF               	movwf	_ADC_read1
  2872  02D6                     i1l1548:
  2873                           
  2874                           ;newmain.c: 121:             ADCON0bits.CHS0 = 0;
  2875  02D6  111F               	bcf	31,2	;volatile
  2876  02D7                     i1l1550:
  2877                           
  2878                           ;newmain.c: 122:             F = 1;
  2879  02D7  01F9               	clrf	_F
  2880  02D8  0AF9               	incf	_F,f
  2881  02D9                     i1l1552:
  2882                           
  2883                           ;newmain.c: 125:         ADIF = 0;
  2884  02D9  130C               	bcf	12,6	;volatile
  2885                           
  2886                           ;newmain.c: 126:         _delay((unsigned long)((80)*(4000000/4000000.0)));
  2887  02DA  301A               	movlw	26
  2888  02DB  00F0               	movwf	??_ISR
  2889  02DC                     u131_27:
  2890  02DC  0BF0               	decfsz	??_ISR,f
  2891  02DD  2ADC               	goto	u131_27
  2892  02DE  0000               	nop
  2893  02DF                     i1l1554:
  2894                           
  2895                           ;newmain.c: 127:         ADCON0bits.GO = 1;
  2896  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2897  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2898  02E1  149F               	bsf	31,1	;volatile
  2899  02E2                     i1l1556:
  2900                           
  2901                           ;newmain.c: 129:         if(PIR1bits.RCIF ==1){
  2902  02E2  1E8C               	btfss	12,5	;volatile
  2903  02E3  2AE5               	goto	u88_21
  2904  02E4  2AE6               	goto	u88_20
  2905  02E5                     u88_21:
  2906  02E5  2AFB               	goto	i1l1578
  2907  02E6                     u88_20:
  2908  02E6                     i1l1558:
  2909                           
  2910                           ;newmain.c: 130:             RB5 = 1;
  2911  02E6  1686               	bsf	6,5	;volatile
  2912  02E7                     i1l1560:
  2913                           
  2914                           ;newmain.c: 131:          if (RCREG==0X0D) {
  2915  02E7  300D               	movlw	13
  2916  02E8  061A               	xorwf	26,w	;volatile
  2917  02E9  1D03               	btfss	3,2
  2918  02EA  2AEC               	goto	u89_21
  2919  02EB  2AED               	goto	u89_20
  2920  02EC                     u89_21:
  2921  02EC  2AF7               	goto	i1l1576
  2922  02ED                     u89_20:
  2923  02ED                     i1l1562:
  2924                           
  2925                           ;newmain.c: 132:             RB5 = 0;
  2926  02ED  1286               	bcf	6,5	;volatile
  2927  02EE                     i1l1564:
  2928                           
  2929                           ;newmain.c: 133:             if (temp =0x2B){
  2930  02EE  302B               	movlw	43
  2931  02EF  00F0               	movwf	??_ISR
  2932  02F0  0870               	movf	??_ISR,w
  2933  02F1  00FA               	movwf	_temp
  2934  02F2                     i1l1566:
  2935                           
  2936                           ;newmain.c: 134:                 counter++;
  2937  02F2  3001               	movlw	1
  2938  02F3  00F0               	movwf	??_ISR
  2939  02F4  0870               	movf	??_ISR,w
  2940  02F5  07BE               	addwf	_counter,f
  2941                           
  2942                           ;newmain.c: 135:                 if(counter >255){
  2943  02F6  2AFB               	goto	i1l1578
  2944  02F7                     i1l1576:
  2945                           
  2946                           ;newmain.c: 147:              temp = RCREG;
  2947  02F7  081A               	movf	26,w	;volatile
  2948  02F8  00F0               	movwf	??_ISR
  2949  02F9  0870               	movf	??_ISR,w
  2950  02FA  00FA               	movwf	_temp
  2951  02FB                     i1l1578:
  2952                           
  2953                           ;newmain.c: 150:         if (TXIF ==1){
  2954  02FB  1E0C               	btfss	12,4	;volatile
  2955  02FC  2AFE               	goto	u90_21
  2956  02FD  2AFF               	goto	u90_20
  2957  02FE                     u90_21:
  2958  02FE  2B81               	goto	i1l149
  2959  02FF                     u90_20:
  2960  02FF                     i1l1580:
  2961                           
  2962                           ;newmain.c: 151:             if(f == 0){
  2963  02FF  0878               	movf	_f,w
  2964  0300  1D03               	btfss	3,2
  2965  0301  2B03               	goto	u91_21
  2966  0302  2B04               	goto	u91_20
  2967  0303                     u91_21:
  2968  0303  2B0A               	goto	i1l1586
  2969  0304                     u91_20:
  2970  0304                     i1l1582:
  2971                           
  2972                           ;newmain.c: 152:                 TXREG = unit0 +48;
  2973  0304  083D               	movf	_unit0,w
  2974  0305  3E30               	addlw	48
  2975  0306  0099               	movwf	25	;volatile
  2976  0307                     i1l1584:
  2977                           
  2978                           ;newmain.c: 153:                 f = 1;
  2979  0307  01F8               	clrf	_f
  2980  0308  0AF8               	incf	_f,f
  2981                           
  2982                           ;newmain.c: 154:             }else if (f ==1){
  2983  0309  2B80               	goto	i1l1634
  2984  030A                     i1l1586:
  2985  030A  0378               	decf	_f,w
  2986  030B  1D03               	btfss	3,2
  2987  030C  2B0E               	goto	u92_21
  2988  030D  2B0F               	goto	u92_20
  2989  030E                     u92_21:
  2990  030E  2B16               	goto	i1l1590
  2991  030F                     u92_20:
  2992  030F                     i1l1588:
  2993                           
  2994                           ;newmain.c: 155:                 TXREG = 0x2E;
  2995  030F  302E               	movlw	46
  2996  0310  0099               	movwf	25	;volatile
  2997                           
  2998                           ;newmain.c: 156:                 f = 2;
  2999  0311  3002               	movlw	2
  3000  0312  00F0               	movwf	??_ISR
  3001  0313  0870               	movf	??_ISR,w
  3002  0314  00F8               	movwf	_f
  3003                           
  3004                           ;newmain.c: 157:             } else if (f ==2){
  3005  0315  2B80               	goto	i1l1634
  3006  0316                     i1l1590:
  3007  0316  3002               	movlw	2
  3008  0317  0678               	xorwf	_f,w
  3009  0318  1D03               	btfss	3,2
  3010  0319  2B1B               	goto	u93_21
  3011  031A  2B1C               	goto	u93_20
  3012  031B                     u93_21:
  3013  031B  2B24               	goto	i1l1596
  3014  031C                     u93_20:
  3015  031C                     i1l1592:
  3016                           
  3017                           ;newmain.c: 158:                 TXREG = dec0 +48;
  3018  031C  083B               	movf	_dec0,w
  3019  031D  3E30               	addlw	48
  3020  031E  0099               	movwf	25	;volatile
  3021  031F                     i1l1594:
  3022                           
  3023                           ;newmain.c: 159:                 f = 3;
  3024  031F  3003               	movlw	3
  3025  0320  00F0               	movwf	??_ISR
  3026  0321  0870               	movf	??_ISR,w
  3027  0322  00F8               	movwf	_f
  3028                           
  3029                           ;newmain.c: 160:             } else if (f == 3){
  3030  0323  2B80               	goto	i1l1634
  3031  0324                     i1l1596:
  3032  0324  3003               	movlw	3
  3033  0325  0678               	xorwf	_f,w
  3034  0326  1D03               	btfss	3,2
  3035  0327  2B29               	goto	u94_21
  3036  0328  2B2A               	goto	u94_20
  3037  0329                     u94_21:
  3038  0329  2B32               	goto	i1l1602
  3039  032A                     u94_20:
  3040  032A                     i1l1598:
  3041                           
  3042                           ;newmain.c: 161:                 TXREG = dec1 +48;
  3043  032A  083A               	movf	_dec1,w
  3044  032B  3E30               	addlw	48
  3045  032C  0099               	movwf	25	;volatile
  3046  032D                     i1l1600:
  3047                           
  3048                           ;newmain.c: 162:                 f = 4;
  3049  032D  3004               	movlw	4
  3050  032E  00F0               	movwf	??_ISR
  3051  032F  0870               	movf	??_ISR,w
  3052  0330  00F8               	movwf	_f
  3053                           
  3054                           ;newmain.c: 163:             } else if (f==4){
  3055  0331  2B80               	goto	i1l1634
  3056  0332                     i1l1602:
  3057  0332  3004               	movlw	4
  3058  0333  0678               	xorwf	_f,w
  3059  0334  1D03               	btfss	3,2
  3060  0335  2B37               	goto	u95_21
  3061  0336  2B38               	goto	u95_20
  3062  0337                     u95_21:
  3063  0337  2B3F               	goto	i1l1606
  3064  0338                     u95_20:
  3065  0338                     i1l1604:
  3066                           
  3067                           ;newmain.c: 164:                 TXREG = 0x2D;
  3068  0338  302D               	movlw	45
  3069  0339  0099               	movwf	25	;volatile
  3070                           
  3071                           ;newmain.c: 165:                 f = 5;
  3072  033A  3005               	movlw	5
  3073  033B  00F0               	movwf	??_ISR
  3074  033C  0870               	movf	??_ISR,w
  3075  033D  00F8               	movwf	_f
  3076                           
  3077                           ;newmain.c: 166:             } else if(f ==5){
  3078  033E  2B80               	goto	i1l1634
  3079  033F                     i1l1606:
  3080  033F  3005               	movlw	5
  3081  0340  0678               	xorwf	_f,w
  3082  0341  1D03               	btfss	3,2
  3083  0342  2B44               	goto	u96_21
  3084  0343  2B45               	goto	u96_20
  3085  0344                     u96_21:
  3086  0344  2B4D               	goto	i1l1612
  3087  0345                     u96_20:
  3088  0345                     i1l1608:
  3089                           
  3090                           ;newmain.c: 167:                 TXREG = unit1 +48;
  3091  0345  083C               	movf	_unit1,w
  3092  0346  3E30               	addlw	48
  3093  0347  0099               	movwf	25	;volatile
  3094  0348                     i1l1610:
  3095                           
  3096                           ;newmain.c: 168:                 f = 6;
  3097  0348  3006               	movlw	6
  3098  0349  00F0               	movwf	??_ISR
  3099  034A  0870               	movf	??_ISR,w
  3100  034B  00F8               	movwf	_f
  3101                           
  3102                           ;newmain.c: 169:             } else if(f==6){
  3103  034C  2B80               	goto	i1l1634
  3104  034D                     i1l1612:
  3105  034D  3006               	movlw	6
  3106  034E  0678               	xorwf	_f,w
  3107  034F  1D03               	btfss	3,2
  3108  0350  2B52               	goto	u97_21
  3109  0351  2B53               	goto	u97_20
  3110  0352                     u97_21:
  3111  0352  2B5A               	goto	i1l1616
  3112  0353                     u97_20:
  3113  0353                     i1l1614:
  3114                           
  3115                           ;newmain.c: 170:                 TXREG = 0x2E ;
  3116  0353  302E               	movlw	46
  3117  0354  0099               	movwf	25	;volatile
  3118                           
  3119                           ;newmain.c: 171:                 f = 7;
  3120  0355  3007               	movlw	7
  3121  0356  00F0               	movwf	??_ISR
  3122  0357  0870               	movf	??_ISR,w
  3123  0358  00F8               	movwf	_f
  3124                           
  3125                           ;newmain.c: 172:             } else if (f==7){
  3126  0359  2B80               	goto	i1l1634
  3127  035A                     i1l1616:
  3128  035A  3007               	movlw	7
  3129  035B  0678               	xorwf	_f,w
  3130  035C  1D03               	btfss	3,2
  3131  035D  2B5F               	goto	u98_21
  3132  035E  2B60               	goto	u98_20
  3133  035F                     u98_21:
  3134  035F  2B68               	goto	i1l1622
  3135  0360                     u98_20:
  3136  0360                     i1l1618:
  3137                           
  3138                           ;newmain.c: 173:                 TXREG = k0+48;
  3139  0360  0839               	movf	_k0,w
  3140  0361  3E30               	addlw	48
  3141  0362  0099               	movwf	25	;volatile
  3142  0363                     i1l1620:
  3143                           
  3144                           ;newmain.c: 174:                 f = 8;
  3145  0363  3008               	movlw	8
  3146  0364  00F0               	movwf	??_ISR
  3147  0365  0870               	movf	??_ISR,w
  3148  0366  00F8               	movwf	_f
  3149                           
  3150                           ;newmain.c: 175:             } else if (f==8){
  3151  0367  2B80               	goto	i1l1634
  3152  0368                     i1l1622:
  3153  0368  3008               	movlw	8
  3154  0369  0678               	xorwf	_f,w
  3155  036A  1D03               	btfss	3,2
  3156  036B  2B6D               	goto	u99_21
  3157  036C  2B6E               	goto	u99_20
  3158  036D                     u99_21:
  3159  036D  2B76               	goto	i1l1628
  3160  036E                     u99_20:
  3161  036E                     i1l1624:
  3162                           
  3163                           ;newmain.c: 176:                 TXREG = k1 +48;
  3164  036E  0838               	movf	_k1,w
  3165  036F  3E30               	addlw	48
  3166  0370  0099               	movwf	25	;volatile
  3167  0371                     i1l1626:
  3168                           
  3169                           ;newmain.c: 177:                 f = 9;
  3170  0371  3009               	movlw	9
  3171  0372  00F0               	movwf	??_ISR
  3172  0373  0870               	movf	??_ISR,w
  3173  0374  00F8               	movwf	_f
  3174                           
  3175                           ;newmain.c: 178:             } else if (f==9){
  3176  0375  2B80               	goto	i1l1634
  3177  0376                     i1l1628:
  3178  0376  3009               	movlw	9
  3179  0377  0678               	xorwf	_f,w
  3180  0378  1D03               	btfss	3,2
  3181  0379  2B7B               	goto	u100_21
  3182  037A  2B7C               	goto	u100_20
  3183  037B                     u100_21:
  3184  037B  2B80               	goto	i1l143
  3185  037C                     u100_20:
  3186  037C                     i1l1630:
  3187                           
  3188                           ;newmain.c: 179:                 TXREG = 0x0D;
  3189  037C  300D               	movlw	13
  3190  037D  0099               	movwf	25	;volatile
  3191  037E                     i1l1632:
  3192                           
  3193                           ;newmain.c: 180:                 f = 0;
  3194  037E  01F8               	clrf	_f
  3195  037F  2B80               	goto	i1l1634
  3196  0380                     i1l143:
  3197  0380                     i1l1634:
  3198                           
  3199                           ;newmain.c: 182:             TXIF =0;
  3200  0380  120C               	bcf	12,4	;volatile
  3201  0381                     i1l149:
  3202  0381  0872               	movf	??_ISR+2,w
  3203  0382  008A               	movwf	10
  3204  0383  0E71               	swapf	??_ISR+1,w
  3205  0384  0083               	movwf	3
  3206  0385  0EFE               	swapf	btemp,f
  3207  0386  0E7E               	swapf	btemp,w
  3208  0387  0009               	retfie
  3209  0388                     __end_of_ISR:
  3210  007E                     btemp	set	126	;btemp
  3211  007E                     wtemp0	set	126
  3212                           
  3213                           	psect	intentry
  3214  0004                     __pintentry:	
  3215                           ;incstack = 0
  3216                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3217                           
  3218  0004                     interrupt_function:
  3219  007E                     saved_w	set	btemp
  3220  0004  00FE               	movwf	btemp
  3221  0005  0E03               	swapf	3,w
  3222  0006  00F1               	movwf	??_ISR+1
  3223  0007  080A               	movf	10,w
  3224  0008  00F2               	movwf	??_ISR+2
  3225  0009  120A  118A  2AC0   	ljmp	_ISR
  3226                           
  3227                           	psect	config
  3228                           
  3229                           ;Config register CONFIG1 @ 0x2007
  3230                           ;	Oscillator Selection bits
  3231                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3232                           ;	Watchdog Timer Enable bit
  3233                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3234                           ;	Power-up Timer Enable bit
  3235                           ;	PWRTE = OFF, PWRT disabled
  3236                           ;	RE3/MCLR pin function select bit
  3237                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3238                           ;	Code Protection bit
  3239                           ;	CP = OFF, Program memory code protection is disabled
  3240                           ;	Data Code Protection bit
  3241                           ;	CPD = OFF, Data memory code protection is disabled
  3242                           ;	Brown Out Reset Selection bits
  3243                           ;	BOREN = OFF, BOR disabled
  3244                           ;	Internal External Switchover bit
  3245                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3246                           ;	Fail-Safe Clock Monitor Enabled bit
  3247                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3248                           ;	Low Voltage Programming Enable bit
  3249                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3250                           ;	In-Circuit Debugger Mode bit
  3251                           ;	DEBUG = 0x1, unprogrammed default
  3252  2007                     	org	8199
  3253  2007  20D4               	dw	8404
  3254                           
  3255                           ;Config register CONFIG2 @ 0x2008
  3256                           ;	Brown-out Reset Selection bit
  3257                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3258                           ;	Flash Program Memory Self Write Enable bits
  3259                           ;	WRT = OFF, Write protection off
  3260  2008                     	org	8200
  3261  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    wsLCD@x	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_LCD_cursor
    _main->___awdiv
    _main->___awmod
    _initLCD->_LCDsetup
    _LCDconfig->_LCD_cursor
    _wsLCD->_wLCD
    _wLCD->_LCDsetup
    _LCD_cursor->_LCD_set
    _LCD_set->_LCDsetup
    ___awdiv->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _initCONFIG->_LCDconfig
    _LCDconfig->_LCD_cursor
    _LCDconfig->_wsLCD
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    7712
                                             10 BANK0     10    10      0
                         _LCD_cursor
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
                         _initCONFIG
                               _wLCD
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0    2043
                          _ADC_START
                          _LCDconfig
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              3     3      0      31
                                              4 COMMON     3     3      0
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (2) _LCDconfig                                            1     1      0    2012
                                              3 BANK0      1     1      0
                         _LCD_cursor
                              _wsLCD
 ---------------------------------------------------------------------------------
 (3) _wsLCD                                                3     3      0     408
                                              0 BANK0      3     3      0
                               _wLCD
 ---------------------------------------------------------------------------------
 (1) _wLCD                                                 2     2      0      62
                                              4 COMMON     2     2      0
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           6     5      1    1604
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_set
 ---------------------------------------------------------------------------------
 (4) _LCD_set                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (2) _LCDsetup                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_START                                            1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1036
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     472
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1668
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cursor
     _LCD_set
       _LCDsetup
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___bmul
   ___wmul
   _initCONFIG
     _ADC_START
     _LCDconfig
       _LCD_cursor
       _wsLCD
         _wLCD
           _LCDsetup
     _initLCD
       _LCDsetup
   _wLCD

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jul 28 13:41:05 2021

                      _F 0079       __size_of_ADC_START 0017                        _f 0078  
                      pc 0002           ___bmul@product 0075                       _k0 0039  
                     _k1 0038             ___awdiv@sign 0027                       fsr 0004  
    ___wmul@multiplicand 0075                      l200 0636                      l104 01C7  
                    l105 01D1                      l106 01DB                      l107 01E5  
                    l108 01EF                      l109 01F9                      l312 061C  
                    l152 03F0                      l155 0547                      l164 05F2  
                    l191 05DB                      l185 059B                      l179 050D  
                    l452 04B4                      l188 0607                      l197 05C1  
                    l286 0558                      l439 0459                      l288 0572  
                    _RB5 0035                      _RE0 0048                      _RE1 0049  
                    u600 03F8                      u601 03F7                      u610 0403  
                    u611 0402                      u620 0414                      _ISR 02C0  
                    u621 0413                      u640 0426                      u641 0425  
                    u635 0418                      u660 0437                      u580 060E  
                    u661 0436                      u581 060D                      u590 061B  
                    u655 0427                      u591 061A                      u680 044B  
                    u681 044A                      u665 0433                      u690 0450  
                    u691 044F                      u675 043F              ?_LCD_cursor 0077  
                    fsr0 0004             ___awmod@sign 0021                     ?_ISR 0070  
        __end_of_LCD_set 05DC                     l1400 041E                     l1410 043E  
                   l1402 0422                     l1412 0445                     l1404 0426  
                   l1406 0437                     l1414 044B                     l1416 0450  
                   l1408 043D                     l1280 05E9                     l1418 0455  
                   l1370 0612                     l1282 05EA                     l1380 03F4  
                   l1372 0614                     l1364 0609                     l1284 05EF  
                   l1276 05DC                     l1700 04BE                     l1390 0408  
                   l1382 03F8                     l1374 061B                     l1366 060A  
                   l1278 05E1                     l1710 04F5                     l1702 04C4  
                   l1392 040C                     l1384 03FD                     l1800 0499  
                   l1368 060E                     l1640 05F7                     l1712 04FB  
                   l1704 04D3                     l1720 051C                     l1394 040E  
                   l1386 03FF                     l1378 03F1                     l1802 04A0  
                   l1650 05C6                     l1642 05FD                     l1714 0501  
                   l1706 04DC                     l1730 0531                     l1722 0526  
                   l1396 0414                     l1388 0403                     l1804 04A6  
                   l1636 0632                     l1652 05CC                     l1660 05A4  
                   l1644 0600                     l1716 0507                     l1708 04EF  
                   l1740 0537                     l1732 0533                     l1724 052B  
                   l1820 00BA                     l1812 0025                     l1398 0417  
                   l1806 04AB                     l1654 05CF                     l1662 05A9  
                   l1646 0604                     l1638 05F4                     l1670 0576  
                   l1750 053E                     l1742 053A                     l1734 0534  
                   l1726 052C                     l1718 050E                     l1830 017B  
                   l1822 00D0                     l1814 002A                     l1808 04B0  
                   l1760 0548                     l1656 05D8                     l1648 05C3  
                   l1664 05B0                     l1672 0579                     l1680 0394  
                   l1752 0541                     l1744 053B                     l1736 0535  
                   l1728 052D                     l1840 01CD                     l1832 0191  
                   l1824 010F                     l1816 0042                     l1770 056C  
                   l1762 054C                     l1666 05B6                     l1658 059F  
                   l1674 0586                     l1690 03CC                     l1682 039A  
                   l1754 0543                     l1746 053C                     l1738 0536  
                   l1850 01FF                     l1842 01D7                     l1834 01A7  
                   l1826 0122                     l1818 0077                     l1780 0466  
                   l1764 0550                     l1668 05BB                     l1676 058E  
                   l1692 03DE                     l1684 03A8                     l1756 0546  
                   l1748 053D                     l1860 0229                     l1852 0203  
                   l1844 01E1                     l1836 01BD                     l1828 0165  
                   l1790 047A                     l1782 0468                     l1774 045A  
                   l1766 055F                     l1694 03EA                     l1686 03B4  
                   l1678 0388                     l1870 025F                     l1862 0235  
                   l1854 020B                     l1846 01EB                     l1838 01C3  
                   l1792 0481                     l1784 046C                     l1776 045D  
                   l1768 0566                     l1688 03C6                     l1880 0292  
                   l1872 0268                     l1864 023E                     l1856 0214  
                   l1848 01F5                     l1794 0485                     l1786 0471  
                   l1778 0461                     l1698 04B5                     l1882 029E  
                   l1874 0274                     l1866 024A                     l1858 0220  
                   l1796 0489                     l1788 0477                     l1884 02A7  
                   l1876 027D                     l1868 0253                     l1798 0493  
                   l1886 02B3                     l1878 0289                     _ADIF 0066  
                   STR_1 0628                     STR_2 0623                     STR_3 062B  
                   STR_4 0623                     STR_5 062E                     STR_6 0623  
                   u1010 05A4                     u1011 05A3                     u1100 0477  
                   u1020 05B6                     u1101 0476                     u1021 05B5  
                   u1030 059B                     u1031 059A                     u1120 0489  
                   u1040 0550                     u1200 01E1                     u1121 0488  
                   u1041 054F                     u1201 01E0                     u1130 0493  
                   u1210 01EB                     u1131 0492                     u1115 047B  
                   u1211 01EA                     u1220 01F5                     u1221 01F4  
                   u1150 04A6                     u1070 056C                     u1230 01FF  
                   u1151 04A5                     u1135 048F                     u1071 056B  
                   u1055 0559                     u1231 01FE                     u1160 04AB  
                   u1080 0461                     u1161 04AA                     u1145 049A  
                   u1081 0460                     u1065 0560                     u1090 046C  
                   u1170 01C3                     u1091 046B                     u1307 05EC  
                   u1171 01C2                     u1180 01CD                     _IOCB 0096  
                   u1181 01CC                     u1190 01D7                     u1247 04B9  
                   u1191 01D6                     u1257 04C8                     u1267 04D7  
                   u1277 04E8                     u1287 0602                     u1297 05D3  
                   _TXIF 0064                     _WPUB 0095                     _dec0 003B  
                   _dec1 003A                     _wLCD 05F3                     _main 0025  
                   _temp 007A                     btemp 007E                     start 000C  
      ___bmul@multiplier 0076       __size_of_LCDconfig 0069                    ??_ISR 0070  
                  ?_wLCD 0070                    ?_main 0070          __end_of___awdiv 045A  
        __end_of___awmod 04B5                    _ANSEL 0188         __end_of_LCDsetup 0637  
        ___awdiv@divisor 0022                    i1l143 0380                    i1l149 0381  
        ___awdiv@counter 0026                    _RCREG 001A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u90_20 02FF                    u90_21 02FE                    u91_20 0304  
                  u91_21 0303                    u92_20 030F                    u92_21 030E  
                  u93_20 031C                    u93_21 031B                    u94_20 032A  
                  u86_20 02C6                    u94_21 0329                    u86_21 02C5  
                  u95_20 0338                    u87_20 02CB                    u95_21 0337  
                  u87_21 02CA                    u96_20 0345                    u88_20 02E6  
                  u96_21 0344                    u88_21 02E5                    u97_20 0353  
                  u89_20 02ED                    u97_21 0352                    u89_21 02EC  
                  _TXREG 0019                    u98_20 0360                    u98_21 035F  
                  u99_20 036E                    u99_21 036D                    wLCD@x 0075  
        __end_of_initLCD 050E                    _cents 0037                    _dozen 0035  
                  _wsLCD 0573                    _temp1 0036        __end_of_ADC_START 05F3  
                  _unit0 003D                    _unit1 003C                    _unity 0034  
                  pclath 000A                    status 0003                    wtemp0 007E  
    __size_of_LCD_cursor 0026          __initialization 000F             __end_of_wLCD 0608  
            LCD_cursor@a 0022              LCD_cursor@x 0021              LCD_cursor@y 0077  
           __end_of_main 02C0                   ??_wLCD 0074                   ??_main 002A  
              ??_LCD_set 0074        __end_of_LCDconfig 03F1                   ?_wsLCD 0070  
                 _ADRESH 001E         ___awdiv@dividend 0024                   _ANSELH 0189  
                 u100_20 037C                   u100_21 037B                   i1l1600 032D  
                 i1l1610 0348                   i1l1602 0332                   i1l1620 0363  
                 i1l1612 034D                   i1l1604 0338                   i1l1540 02CB  
                 i1l1630 037C                   i1l1622 0368                   i1l1614 0353  
                 i1l1606 033F                   i1l1550 02D7                   i1l1542 02CF  
                 i1l1632 037E                   i1l1624 036E                   i1l1616 035A  
                 i1l1608 0345                   i1l1560 02E7                   i1l1552 02D9  
                 i1l1544 02D0                   i1l1536 02C0                   i1l1626 0371  
                 i1l1618 0360                   i1l1634 0380                   i1l1562 02ED  
                 i1l1554 02DF                   i1l1546 02D2                   i1l1538 02C6  
                 i1l1628 0376                   i1l1580 02FF                   i1l1564 02EE  
                 i1l1548 02D6                   i1l1556 02E2                   i1l1590 0316  
                 i1l1582 0304                   i1l1566 02F2                   i1l1558 02E6  
                 i1l1592 031C                   i1l1584 0307                   i1l1576 02F7  
                 i1l1594 031F                   i1l1586 030A                   i1l1578 02FB  
                 i1l1596 0324                   i1l1588 030F                   i1l1598 032A  
                 u131_27 02DC                   ___bmul 0608                   ___wmul 0548  
              ??___awdiv 0077                ??___awmod 0077         ___awdiv@quotient 0028  
        ___awmod@divisor 0073          ___awmod@counter 0020                ??_initLCD 0074  
                 wsLCD@i 0020                   wsLCD@x 0022                   saved_w 007E  
__end_of__initialization 0021                ?_LCDsetup 0070      ___bmul@multiplicand 0073  
         __pcstackCOMMON 0070            __end_of_wsLCD 059C             ??_LCD_cursor 0020  
         _OPTION_REGbits 0081                LCDsetup@x 0073                  ??_wsLCD 0076  
             __pbssBANK0 0034               ??_LCDsetup 0073               __pmaintext 0025  
     __end_of_LCD_cursor 05C2                  ?___bmul 0073                  ?___wmul 0073  
             __pintentry 0004                  _LCD_set 05C2               __stringtab 061D  
             _initCONFIG 050E                _ADC_START 05DC                _ADC_read0 0040  
              _ADC_read1 003F          __size_of___bmul 0015                  ___awdiv 03F1  
                ___awmod 045A          __size_of___wmul 002B                  __ptext1 050E  
                __ptext2 04B5                  __ptext3 0388                  __ptext4 0573  
                __ptext5 05F3                  __ptext6 059C                  __ptext7 05C2  
                __ptext8 0631                  __ptext9 05DC                  _initLCD 04B5  
           __size_of_ISR 00C8                  _counter 003E         ___awmod@dividend 0075  
   end_of_initialization 0021                _LCDconfig 0388               ?_ADC_START 0070  
             ?_LCDconfig 0070              ?_initCONFIG 0070        __size_of_LCDsetup 0006  
         __end_of___bmul 061D           __end_of___wmul 0573      start_initialization 000F  
            __end_of_ISR 0388              ??_ADC_START 0073                 ??___bmul 0074  
               ??___wmul 0077      __size_of_initCONFIG 003A                 ?_LCD_set 0070  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
               LCD_set@x 0076              ??_LCDconfig 0023                 ?___awdiv 0022  
               ?___awmod 0073                __pstrings 061D                 ?_initLCD 0070  
         __size_of_wsLCD 0029        interrupt_function 0004           ___wmul@product 0020  
               _PIE1bits 008C                 _LCDsetup 0631                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 0622               _ADCON1bits 009F  
      ___wmul@multiplier 0073         __size_of_LCD_set 001A             ??_initCONFIG 0078  
       __size_of___awdiv 0069         __size_of___awmod 005B       __end_of__stringtab 0623  
     __end_of_initCONFIG 0548         __size_of_initLCD 0059                 _main$990 0032  
               __ptext10 0548                 __ptext11 0608                 __ptext12 045A  
               __ptext13 03F1                 __ptext14 02C0            __size_of_wLCD 0015  
          __size_of_main 029B               _LCD_cursor 059C               _INTCONbits 000B  
               intlevel1 0000                stringcode 061D               _OSCCONbits 008F  
               stringdir 061D                 stringtab 061D  
