

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul 29 01:52:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  0001                     _TMR0	set	1
   457  0009                     _PORTE	set	9
   458  0007                     _PORTC	set	7
   459  0005                     _PORTA	set	5
   460  0019                     _TXREG	set	25
   461  001A                     _RCREG	set	26
   462  000C                     _PIR1bits	set	12
   463  001E                     _ADRESH	set	30
   464  000B                     _INTCONbits	set	11
   465  0008                     _PORTD	set	8
   466  001F                     _ADCON0bits	set	31
   467  0064                     _TXIF	set	100
   468  0035                     _RB5	set	53
   469  0066                     _ADIF	set	102
   470  0049                     _RE1	set	73
   471  0048                     _RE0	set	72
   472  009A                     _SPBRGH	set	154
   473  0099                     _SPBRG	set	153
   474  0098                     _TXSTAbits	set	152
   475  0081                     _OPTION_REGbits	set	129
   476  008C                     _PIE1bits	set	140
   477  008F                     _OSCCONbits	set	143
   478  0089                     _TRISE	set	137
   479  0088                     _TRISD	set	136
   480  0087                     _TRISC	set	135
   481  0085                     _TRISA	set	133
   482  009F                     _ADCON1bits	set	159
   483  0464                     _TXIE	set	1124
   484  0187                     _BAUDCTLbits	set	391
   485  0188                     _ANSEL	set	392
   486  0189                     _ANSELH	set	393
   487                           
   488                           	psect	strings
   489  0686                     __pstrings:
   490  0686                     stringtab:
   491  0686                     __stringtab:
   492  0686                     stringcode:	
   493                           ;	String table - string pointers are 1 byte each
   494                           
   495  0686                     stringdir:
   496  0686  3006               	movlw	high stringdir
   497  0687  008A               	movwf	10
   498  0688  0804               	movf	4,w
   499  0689  0A84               	incf	4,f
   500  068A  0782               	addwf	2,f
   501  068B                     __stringbase:
   502  068B  3400               	retlw	0
   503  068C                     __end_of__stringtab:
   504  068C                     STR_2:
   505  068C  3430               	retlw	48	;'0'
   506  068D  342E               	retlw	46	;'.'
   507  068E  3430               	retlw	48	;'0'
   508  068F  3430               	retlw	48	;'0'
   509  0690  3400               	retlw	0
   510  0691                     STR_1:
   511  0691  3453               	retlw	83	;'S'
   512  0692  3431               	retlw	49	;'1'
   513  0693  3400               	retlw	0
   514  0694                     STR_3:
   515  0694  3453               	retlw	83	;'S'
   516  0695  3432               	retlw	50	;'2'
   517  0696  3400               	retlw	0
   518  0697                     STR_5:
   519  0697  3453               	retlw	83	;'S'
   520  0698  3433               	retlw	51	;'3'
   521  0699  3400               	retlw	0
   522  068E                     
   523                           	psect	cinit
   524  0011                     start_initialization:	
   525                           ; #config settings
   526                           
   527  0011                     __initialization:
   528                           
   529                           ; Clear objects allocated to COMMON
   530  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   531  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   532  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   533                           
   534                           ; Clear objects allocated to BANK0
   535  0014  1283               	bcf	3,5	;RP0=0, select bank0
   536  0015  1303               	bcf	3,6	;RP1=0, select bank0
   537  0016  01B8               	clrf	__pbssBANK0& (0+127)
   538  0017  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   539  0018  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   540  0019  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   541  001A  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   542  001B  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   543  001C  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   544  001D  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   545  001E  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   546  001F  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   547  0020  01C2               	clrf	(__pbssBANK0+10)& (0+127)
   548  0021  01C3               	clrf	(__pbssBANK0+11)& (0+127)
   549  0022  01C4               	clrf	(__pbssBANK0+12)& (0+127)
   550  0023  01C5               	clrf	(__pbssBANK0+13)& (0+127)
   551  0024                     end_of_initialization:	
   552                           ;End of C runtime variable initialization code
   553                           
   554  0024                     __end_of__initialization:
   555  0024  0183               	clrf	3
   556  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   557                           
   558                           	psect	bssCOMMON
   559  0076                     __pbssCOMMON:
   560  0076                     _F0:
   561  0076                     	ds	1
   562  0077                     _F1:
   563  0077                     	ds	1
   564  0078                     _temp_read:
   565  0078                     	ds	1
   566                           
   567                           	psect	bssBANK0
   568  0038                     __pbssBANK0:
   569  0038                     _unity:
   570  0038                     	ds	1
   571  0039                     _dozens:
   572  0039                     	ds	1
   573  003A                     _t:
   574  003A                     	ds	1
   575  003B                     _unit_1:
   576  003B                     	ds	1
   577  003C                     _decimal0:
   578  003C                     	ds	1
   579  003D                     _decimal:
   580  003D                     	ds	1
   581  003E                     _unit:
   582  003E                     	ds	1
   583  003F                     _hundreds:
   584  003F                     	ds	1
   585  0040                     _k0:
   586  0040                     	ds	1
   587  0041                     _k1:
   588  0041                     	ds	1
   589  0042                     _var1:
   590  0042                     	ds	1
   591  0043                     _var0:
   592  0043                     	ds	1
   593  0044                     _c:
   594  0044                     	ds	1
   595  0045                     _counter:
   596  0045                     	ds	1
   597                           
   598                           	psect	cstackCOMMON
   599  0070                     __pcstackCOMMON:
   600  0070                     ?_LCDsetup:
   601  0070                     ?_enableLCD:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_initCONFIG:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_configTMR0:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_UARTs:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_setupADC:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_initLCD:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_wLCD:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_wsLCD:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_main:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_isr:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ??_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_LCD_display:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 1 bytes @ 0x0
   639  0070                     	ds	5
   640  0075                     ??_LCDsetup:
   641  0075                     ??_configTMR0:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0075                     ??_UARTs:	
   645                           ; 1 bytes @ 0x5
   646                           
   647  0075                     ??_setupADC:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     ??___wmul:	
   651                           ; 1 bytes @ 0x5
   652                           
   653  0075                     ?___bmul:	
   654                           ; 1 bytes @ 0x5
   655                           
   656  0075                     ??___awdiv:	
   657                           ; 1 bytes @ 0x5
   658                           
   659  0075                     ??___awmod:	
   660                           ; 1 bytes @ 0x5
   661                           
   662  0075                     LCDsetup@x:	
   663                           ; 1 bytes @ 0x5
   664                           
   665  0075                     ___bmul@multiplicand:	
   666                           ; 1 bytes @ 0x5
   667                           
   668                           
   669                           ; 1 bytes @ 0x5
   670  0075                     	ds	1
   671  0076                     ??_initCONFIG:
   672  0076                     ??_wsLCD:	
   673                           ; 1 bytes @ 0x6
   674                           
   675                           
   676                           	psect	cstackBANK0
   677  0020                     __pcstackBANK0:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0020                     ??_enableLCD:
   681  0020                     ??_wLCD:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0020                     ??___bmul:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0020                     ?___wmul:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     ?___awmod:	
   691                           ; 2 bytes @ 0x0
   692                           
   693  0020                     ___wmul@multiplier:	
   694                           ; 2 bytes @ 0x0
   695                           
   696  0020                     ___awmod@divisor:	
   697                           ; 2 bytes @ 0x0
   698                           
   699                           
   700                           ; 2 bytes @ 0x0
   701  0020                     	ds	1
   702  0021                     wLCD@x:
   703  0021                     ___bmul@product:	
   704                           ; 1 bytes @ 0x1
   705                           
   706                           
   707                           ; 1 bytes @ 0x1
   708  0021                     	ds	1
   709  0022                     enableLCD@x:
   710  0022                     ___bmul@multiplier:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0022                     wsLCD@i:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0022                     ___wmul@multiplicand:	
   717                           ; 2 bytes @ 0x2
   718                           
   719  0022                     ___awmod@dividend:	
   720                           ; 2 bytes @ 0x2
   721                           
   722                           
   723                           ; 2 bytes @ 0x2
   724  0022                     	ds	1
   725  0023                     ??_initLCD:
   726  0023                     ?_cursorLCD:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0023                     cursorLCD@y:	
   730                           ; 1 bytes @ 0x3
   731                           
   732                           
   733                           ; 1 bytes @ 0x3
   734  0023                     	ds	1
   735  0024                     ??_cursorLCD:
   736  0024                     wsLCD@x:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0024                     ___awmod@counter:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0024                     ___wmul@product:	
   743                           ; 1 bytes @ 0x4
   744                           
   745                           
   746                           ; 2 bytes @ 0x4
   747  0024                     	ds	1
   748  0025                     cursorLCD@x:
   749  0025                     ___awmod@sign:	
   750                           ; 1 bytes @ 0x5
   751                           
   752                           
   753                           ; 1 bytes @ 0x5
   754  0025                     	ds	1
   755  0026                     ?___awdiv:
   756  0026                     cursorLCD@t:	
   757                           ; 2 bytes @ 0x6
   758                           
   759  0026                     ___awdiv@divisor:	
   760                           ; 1 bytes @ 0x6
   761                           
   762                           
   763                           ; 2 bytes @ 0x6
   764  0026                     	ds	1
   765  0027                     ??_LCD_display:
   766                           
   767                           ; 1 bytes @ 0x7
   768  0027                     	ds	1
   769  0028                     ___awdiv@dividend:
   770                           
   771                           ; 2 bytes @ 0x8
   772  0028                     	ds	2
   773  002A                     ___awdiv@counter:
   774                           
   775                           ; 1 bytes @ 0xA
   776  002A                     	ds	1
   777  002B                     ___awdiv@sign:
   778                           
   779                           ; 1 bytes @ 0xB
   780  002B                     	ds	1
   781  002C                     ___awdiv@quotient:
   782                           
   783                           ; 2 bytes @ 0xC
   784  002C                     	ds	2
   785  002E                     ??_main:
   786                           
   787                           ; 1 bytes @ 0xE
   788  002E                     	ds	8
   789  0036                     _main$1127:
   790                           
   791                           ; 2 bytes @ 0x16
   792  0036                     	ds	2
   793                           
   794                           	psect	maintext
   795  0028                     __pmaintext:	
   796 ;;
   797 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   798 ;;
   799 ;; *************** function _main *****************
   800 ;; Defined at:
   801 ;;		line 58 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : B00/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       2       0       0       0
   817 ;;      Temps:          0       8       0       0       0
   818 ;;      Totals:         0      10       0       0       0
   819 ;;Total ram usage:       10 bytes
   820 ;; Hardware stack levels required when called: 6
   821 ;; This function calls:
   822 ;;		___awdiv
   823 ;;		___awmod
   824 ;;		___bmul
   825 ;;		___wmul
   826 ;;		_configTMR0
   827 ;;		_cursorLCD
   828 ;;		_initCONFIG
   829 ;;		_wLCD
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _main
   837  0028                     _main:
   838  0028                     l2049:	
   839                           ;incstack = 0
   840                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   841                           
   842                           
   843                           ;main.c: 59:     initCONFIG();
   844  0028  120A  118A  2563  120A  118A  	fcall	_initCONFIG
   845  002D                     l2051:
   846                           
   847                           ;main.c: 60:     configTMR0();
   848  002D  120A  118A  269A  120A  118A  	fcall	_configTMR0
   849  0032                     l2053:
   850                           
   851                           ;main.c: 62:     unit = var0 / 51;
   852  0032  3033               	movlw	51
   853  0033  1283               	bcf	3,5	;RP0=0, select bank0
   854  0034  1303               	bcf	3,6	;RP1=0, select bank0
   855  0035  00A6               	movwf	___awdiv@divisor
   856  0036  3000               	movlw	0
   857  0037  00A7               	movwf	___awdiv@divisor+1
   858  0038  0843               	movf	_var0,w
   859  0039  00AE               	movwf	??_main
   860  003A  01AF               	clrf	??_main+1
   861  003B  082E               	movf	??_main,w
   862  003C  00A8               	movwf	___awdiv@dividend
   863  003D  082F               	movf	??_main+1,w
   864  003E  00A9               	movwf	___awdiv@dividend+1
   865  003F  120A  118A  2439  120A  118A  	fcall	___awdiv
   866  0044  1283               	bcf	3,5	;RP0=0, select bank0
   867  0045  1303               	bcf	3,6	;RP1=0, select bank0
   868  0046  0826               	movf	?___awdiv,w
   869  0047  00B0               	movwf	??_main+2
   870  0048  0830               	movf	??_main+2,w
   871  0049  00BE               	movwf	_unit
   872  004A                     l2055:
   873                           
   874                           ;main.c: 63:     decimal = ((var0 * 100 / 51) - (unit*100))/10;
   875  004A  3033               	movlw	51
   876  004B  00A6               	movwf	___awdiv@divisor
   877  004C  3000               	movlw	0
   878  004D  00A7               	movwf	___awdiv@divisor+1
   879  004E  0843               	movf	_var0,w
   880  004F  00AE               	movwf	??_main
   881  0050  01AF               	clrf	??_main+1
   882  0051  082E               	movf	??_main,w
   883  0052  00A0               	movwf	___wmul@multiplier
   884  0053  082F               	movf	??_main+1,w
   885  0054  00A1               	movwf	___wmul@multiplier+1
   886  0055  3064               	movlw	100
   887  0056  00A2               	movwf	___wmul@multiplicand
   888  0057  3000               	movlw	0
   889  0058  00A3               	movwf	___wmul@multiplicand+1
   890  0059  120A  118A  25C4  120A  118A  	fcall	___wmul
   891  005E  1283               	bcf	3,5	;RP0=0, select bank0
   892  005F  1303               	bcf	3,6	;RP1=0, select bank0
   893  0060  0821               	movf	?___wmul+1,w
   894  0061  00A9               	movwf	___awdiv@dividend+1
   895  0062  0820               	movf	?___wmul,w
   896  0063  00A8               	movwf	___awdiv@dividend
   897  0064  120A  118A  2439  120A  118A  	fcall	___awdiv
   898  0069  1283               	bcf	3,5	;RP0=0, select bank0
   899  006A  1303               	bcf	3,6	;RP1=0, select bank0
   900  006B  0826               	movf	?___awdiv,w
   901  006C  00B0               	movwf	??_main+2
   902  006D  0827               	movf	?___awdiv+1,w
   903  006E  00B1               	movwf	??_main+3
   904  006F  083E               	movf	_unit,w
   905  0070  00B2               	movwf	??_main+4
   906  0071  01B3               	clrf	??_main+5
   907  0072  0832               	movf	??_main+4,w
   908  0073  00A0               	movwf	___wmul@multiplier
   909  0074  0833               	movf	??_main+5,w
   910  0075  00A1               	movwf	___wmul@multiplier+1
   911  0076  309C               	movlw	156
   912  0077  00A2               	movwf	___wmul@multiplicand
   913  0078  30FF               	movlw	255
   914  0079  00A3               	movwf	___wmul@multiplicand+1
   915  007A  120A  118A  25C4  120A  118A  	fcall	___wmul
   916  007F  1283               	bcf	3,5	;RP0=0, select bank0
   917  0080  1303               	bcf	3,6	;RP1=0, select bank0
   918  0081  0820               	movf	?___wmul,w
   919  0082  0730               	addwf	??_main+2,w
   920  0083  00B6               	movwf	_main$1127
   921  0084  0821               	movf	?___wmul+1,w
   922  0085  1803               	skipnc
   923  0086  0A21               	incf	?___wmul+1,w
   924  0087  0731               	addwf	??_main+3,w
   925  0088  00B7               	movwf	_main$1127+1
   926  0089                     l2057:
   927                           
   928                           ;main.c: 63:     decimal = ((var0 * 100 / 51) - (unit*100))/10;
   929  0089  300A               	movlw	10
   930  008A  00A6               	movwf	___awdiv@divisor
   931  008B  3000               	movlw	0
   932  008C  00A7               	movwf	___awdiv@divisor+1
   933  008D  0837               	movf	_main$1127+1,w
   934  008E  00A9               	movwf	___awdiv@dividend+1
   935  008F  0836               	movf	_main$1127,w
   936  0090  00A8               	movwf	___awdiv@dividend
   937  0091  120A  118A  2439  120A  118A  	fcall	___awdiv
   938  0096  1283               	bcf	3,5	;RP0=0, select bank0
   939  0097  1303               	bcf	3,6	;RP1=0, select bank0
   940  0098  0826               	movf	?___awdiv,w
   941  0099  00AE               	movwf	??_main
   942  009A  082E               	movf	??_main,w
   943  009B  00BD               	movwf	_decimal
   944  009C                     l2059:
   945                           
   946                           ;main.c: 64:     decimal0 = ((var0 * 100 / 51) - (unit*100) - (decimal*10));
   947  009C  3033               	movlw	51
   948  009D  00A6               	movwf	___awdiv@divisor
   949  009E  3000               	movlw	0
   950  009F  00A7               	movwf	___awdiv@divisor+1
   951  00A0  0843               	movf	_var0,w
   952  00A1  00AE               	movwf	??_main
   953  00A2  01AF               	clrf	??_main+1
   954  00A3  082E               	movf	??_main,w
   955  00A4  00A0               	movwf	___wmul@multiplier
   956  00A5  082F               	movf	??_main+1,w
   957  00A6  00A1               	movwf	___wmul@multiplier+1
   958  00A7  3064               	movlw	100
   959  00A8  00A2               	movwf	___wmul@multiplicand
   960  00A9  3000               	movlw	0
   961  00AA  00A3               	movwf	___wmul@multiplicand+1
   962  00AB  120A  118A  25C4  120A  118A  	fcall	___wmul
   963  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   964  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   965  00B2  0821               	movf	?___wmul+1,w
   966  00B3  00A9               	movwf	___awdiv@dividend+1
   967  00B4  0820               	movf	?___wmul,w
   968  00B5  00A8               	movwf	___awdiv@dividend
   969  00B6  120A  118A  2439  120A  118A  	fcall	___awdiv
   970  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   971  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   972  00BD  0826               	movf	?___awdiv,w
   973  00BE  00B0               	movwf	??_main+2
   974  00BF  0827               	movf	?___awdiv+1,w
   975  00C0  00B1               	movwf	??_main+3
   976  00C1  309C               	movlw	156
   977  00C2  00B2               	movwf	??_main+4
   978  00C3  0832               	movf	??_main+4,w
   979  00C4  00F5               	movwf	___bmul@multiplicand
   980  00C5  083E               	movf	_unit,w
   981  00C6  120A  118A  2644  120A  118A  	fcall	___bmul
   982  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   983  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   984  00CD  00B3               	movwf	??_main+5
   985  00CE  30F6               	movlw	246
   986  00CF  00B4               	movwf	??_main+6
   987  00D0  0834               	movf	??_main+6,w
   988  00D1  00F5               	movwf	___bmul@multiplicand
   989  00D2  083D               	movf	_decimal,w
   990  00D3  120A  118A  2644  120A  118A  	fcall	___bmul
   991  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   992  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   993  00DA  0733               	addwf	??_main+5,w
   994  00DB  0730               	addwf	??_main+2,w
   995  00DC  00B5               	movwf	??_main+7
   996  00DD  0835               	movf	??_main+7,w
   997  00DE  00BC               	movwf	_decimal0
   998  00DF                     l2061:
   999                           
  1000                           ;main.c: 66:     unit_1 = var1 / 51;
  1001  00DF  3033               	movlw	51
  1002  00E0  00A6               	movwf	___awdiv@divisor
  1003  00E1  3000               	movlw	0
  1004  00E2  00A7               	movwf	___awdiv@divisor+1
  1005  00E3  0842               	movf	_var1,w
  1006  00E4  00AE               	movwf	??_main
  1007  00E5  01AF               	clrf	??_main+1
  1008  00E6  082E               	movf	??_main,w
  1009  00E7  00A8               	movwf	___awdiv@dividend
  1010  00E8  082F               	movf	??_main+1,w
  1011  00E9  00A9               	movwf	___awdiv@dividend+1
  1012  00EA  120A  118A  2439  120A  118A  	fcall	___awdiv
  1013  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00F1  0826               	movf	?___awdiv,w
  1016  00F2  00B0               	movwf	??_main+2
  1017  00F3  0830               	movf	??_main+2,w
  1018  00F4  00BB               	movwf	_unit_1
  1019  00F5                     l2063:
  1020                           
  1021                           ;main.c: 67:     k1 = (((var1 * 100) / 51) - (unit_1*100))/10;
  1022  00F5  3033               	movlw	51
  1023  00F6  00A6               	movwf	___awdiv@divisor
  1024  00F7  3000               	movlw	0
  1025  00F8  00A7               	movwf	___awdiv@divisor+1
  1026  00F9  0842               	movf	_var1,w
  1027  00FA  00AE               	movwf	??_main
  1028  00FB  01AF               	clrf	??_main+1
  1029  00FC  082E               	movf	??_main,w
  1030  00FD  00A0               	movwf	___wmul@multiplier
  1031  00FE  082F               	movf	??_main+1,w
  1032  00FF  00A1               	movwf	___wmul@multiplier+1
  1033  0100  3064               	movlw	100
  1034  0101  00A2               	movwf	___wmul@multiplicand
  1035  0102  3000               	movlw	0
  1036  0103  00A3               	movwf	___wmul@multiplicand+1
  1037  0104  120A  118A  25C4  120A  118A  	fcall	___wmul
  1038  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1039  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1040  010B  0821               	movf	?___wmul+1,w
  1041  010C  00A9               	movwf	___awdiv@dividend+1
  1042  010D  0820               	movf	?___wmul,w
  1043  010E  00A8               	movwf	___awdiv@dividend
  1044  010F  120A  118A  2439  120A  118A  	fcall	___awdiv
  1045  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0116  0826               	movf	?___awdiv,w
  1048  0117  00B0               	movwf	??_main+2
  1049  0118  0827               	movf	?___awdiv+1,w
  1050  0119  00B1               	movwf	??_main+3
  1051  011A  083B               	movf	_unit_1,w
  1052  011B  00B2               	movwf	??_main+4
  1053  011C  01B3               	clrf	??_main+5
  1054  011D  0832               	movf	??_main+4,w
  1055  011E  00A0               	movwf	___wmul@multiplier
  1056  011F  0833               	movf	??_main+5,w
  1057  0120  00A1               	movwf	___wmul@multiplier+1
  1058  0121  309C               	movlw	156
  1059  0122  00A2               	movwf	___wmul@multiplicand
  1060  0123  30FF               	movlw	255
  1061  0124  00A3               	movwf	___wmul@multiplicand+1
  1062  0125  120A  118A  25C4  120A  118A  	fcall	___wmul
  1063  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1064  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1065  012C  0820               	movf	?___wmul,w
  1066  012D  0730               	addwf	??_main+2,w
  1067  012E  00B6               	movwf	_main$1127
  1068  012F  0821               	movf	?___wmul+1,w
  1069  0130  1803               	skipnc
  1070  0131  0A21               	incf	?___wmul+1,w
  1071  0132  0731               	addwf	??_main+3,w
  1072  0133  00B7               	movwf	_main$1127+1
  1073  0134                     l2065:
  1074                           
  1075                           ;main.c: 67:     k1 = (((var1 * 100) / 51) - (unit_1*100))/10;
  1076  0134  300A               	movlw	10
  1077  0135  00A6               	movwf	___awdiv@divisor
  1078  0136  3000               	movlw	0
  1079  0137  00A7               	movwf	___awdiv@divisor+1
  1080  0138  0837               	movf	_main$1127+1,w
  1081  0139  00A9               	movwf	___awdiv@dividend+1
  1082  013A  0836               	movf	_main$1127,w
  1083  013B  00A8               	movwf	___awdiv@dividend
  1084  013C  120A  118A  2439  120A  118A  	fcall	___awdiv
  1085  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0143  0826               	movf	?___awdiv,w
  1088  0144  00AE               	movwf	??_main
  1089  0145  082E               	movf	??_main,w
  1090  0146  00C1               	movwf	_k1
  1091  0147                     l2067:
  1092                           
  1093                           ;main.c: 68:     k0 = (((var1 * 100) / 51) - (unit_1*100) - (k1*10));
  1094  0147  3033               	movlw	51
  1095  0148  00A6               	movwf	___awdiv@divisor
  1096  0149  3000               	movlw	0
  1097  014A  00A7               	movwf	___awdiv@divisor+1
  1098  014B  0842               	movf	_var1,w
  1099  014C  00AE               	movwf	??_main
  1100  014D  01AF               	clrf	??_main+1
  1101  014E  082E               	movf	??_main,w
  1102  014F  00A0               	movwf	___wmul@multiplier
  1103  0150  082F               	movf	??_main+1,w
  1104  0151  00A1               	movwf	___wmul@multiplier+1
  1105  0152  3064               	movlw	100
  1106  0153  00A2               	movwf	___wmul@multiplicand
  1107  0154  3000               	movlw	0
  1108  0155  00A3               	movwf	___wmul@multiplicand+1
  1109  0156  120A  118A  25C4  120A  118A  	fcall	___wmul
  1110  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1111  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1112  015D  0821               	movf	?___wmul+1,w
  1113  015E  00A9               	movwf	___awdiv@dividend+1
  1114  015F  0820               	movf	?___wmul,w
  1115  0160  00A8               	movwf	___awdiv@dividend
  1116  0161  120A  118A  2439  120A  118A  	fcall	___awdiv
  1117  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0168  0826               	movf	?___awdiv,w
  1120  0169  00B0               	movwf	??_main+2
  1121  016A  0827               	movf	?___awdiv+1,w
  1122  016B  00B1               	movwf	??_main+3
  1123  016C  309C               	movlw	156
  1124  016D  00B2               	movwf	??_main+4
  1125  016E  0832               	movf	??_main+4,w
  1126  016F  00F5               	movwf	___bmul@multiplicand
  1127  0170  083B               	movf	_unit_1,w
  1128  0171  120A  118A  2644  120A  118A  	fcall	___bmul
  1129  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0178  00B3               	movwf	??_main+5
  1132  0179  30F6               	movlw	246
  1133  017A  00B4               	movwf	??_main+6
  1134  017B  0834               	movf	??_main+6,w
  1135  017C  00F5               	movwf	___bmul@multiplicand
  1136  017D  0841               	movf	_k1,w
  1137  017E  120A  118A  2644  120A  118A  	fcall	___bmul
  1138  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0185  0733               	addwf	??_main+5,w
  1141  0186  0730               	addwf	??_main+2,w
  1142  0187  00B5               	movwf	??_main+7
  1143  0188  0835               	movf	??_main+7,w
  1144  0189  00C0               	movwf	_k0
  1145  018A                     l2069:
  1146                           
  1147                           ;main.c: 69:     hundreds = counter/100;
  1148  018A  3064               	movlw	100
  1149  018B  00A6               	movwf	___awdiv@divisor
  1150  018C  3000               	movlw	0
  1151  018D  00A7               	movwf	___awdiv@divisor+1
  1152  018E  0845               	movf	_counter,w
  1153  018F  00AE               	movwf	??_main
  1154  0190  01AF               	clrf	??_main+1
  1155  0191  082E               	movf	??_main,w
  1156  0192  00A8               	movwf	___awdiv@dividend
  1157  0193  082F               	movf	??_main+1,w
  1158  0194  00A9               	movwf	___awdiv@dividend+1
  1159  0195  120A  118A  2439  120A  118A  	fcall	___awdiv
  1160  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1161  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1162  019C  0826               	movf	?___awdiv,w
  1163  019D  00B0               	movwf	??_main+2
  1164  019E  0830               	movf	??_main+2,w
  1165  019F  00BF               	movwf	_hundreds
  1166  01A0                     l2071:
  1167                           
  1168                           ;main.c: 70:     t = counter%100;
  1169  01A0  3064               	movlw	100
  1170  01A1  00A0               	movwf	___awmod@divisor
  1171  01A2  3000               	movlw	0
  1172  01A3  00A1               	movwf	___awmod@divisor+1
  1173  01A4  0845               	movf	_counter,w
  1174  01A5  00AE               	movwf	??_main
  1175  01A6  01AF               	clrf	??_main+1
  1176  01A7  082E               	movf	??_main,w
  1177  01A8  00A2               	movwf	___awmod@dividend
  1178  01A9  082F               	movf	??_main+1,w
  1179  01AA  00A3               	movwf	___awmod@dividend+1
  1180  01AB  120A  118A  2508  120A  118A  	fcall	___awmod
  1181  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1182  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1183  01B2  0820               	movf	?___awmod,w
  1184  01B3  00B0               	movwf	??_main+2
  1185  01B4  0830               	movf	??_main+2,w
  1186  01B5  00BA               	movwf	_t
  1187  01B6                     l2073:
  1188                           
  1189                           ;main.c: 71:     dozens = t/10;
  1190  01B6  300A               	movlw	10
  1191  01B7  00A6               	movwf	___awdiv@divisor
  1192  01B8  3000               	movlw	0
  1193  01B9  00A7               	movwf	___awdiv@divisor+1
  1194  01BA  083A               	movf	_t,w
  1195  01BB  00AE               	movwf	??_main
  1196  01BC  01AF               	clrf	??_main+1
  1197  01BD  082E               	movf	??_main,w
  1198  01BE  00A8               	movwf	___awdiv@dividend
  1199  01BF  082F               	movf	??_main+1,w
  1200  01C0  00A9               	movwf	___awdiv@dividend+1
  1201  01C1  120A  118A  2439  120A  118A  	fcall	___awdiv
  1202  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1203  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1204  01C8  0826               	movf	?___awdiv,w
  1205  01C9  00B0               	movwf	??_main+2
  1206  01CA  0830               	movf	??_main+2,w
  1207  01CB  00B9               	movwf	_dozens
  1208  01CC                     l2075:
  1209                           
  1210                           ;main.c: 72:     unity = counter%10;
  1211  01CC  300A               	movlw	10
  1212  01CD  00A0               	movwf	___awmod@divisor
  1213  01CE  3000               	movlw	0
  1214  01CF  00A1               	movwf	___awmod@divisor+1
  1215  01D0  0845               	movf	_counter,w
  1216  01D1  00AE               	movwf	??_main
  1217  01D2  01AF               	clrf	??_main+1
  1218  01D3  082E               	movf	??_main,w
  1219  01D4  00A2               	movwf	___awmod@dividend
  1220  01D5  082F               	movf	??_main+1,w
  1221  01D6  00A3               	movwf	___awmod@dividend+1
  1222  01D7  120A  118A  2508  120A  118A  	fcall	___awmod
  1223  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1224  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1225  01DE  0820               	movf	?___awmod,w
  1226  01DF  00B0               	movwf	??_main+2
  1227  01E0  0830               	movf	??_main+2,w
  1228  01E1  00B8               	movwf	_unity
  1229  01E2                     l2077:
  1230                           
  1231                           ;main.c: 74:     if (decimal > 9){
  1232  01E2  300A               	movlw	10
  1233  01E3  023D               	subwf	_decimal,w
  1234  01E4  1C03               	skipc
  1235  01E5  29E7               	goto	u1151
  1236  01E6  29E8               	goto	u1150
  1237  01E7                     u1151:
  1238  01E7  29EC               	goto	l151
  1239  01E8                     u1150:
  1240  01E8                     l2079:
  1241                           
  1242                           ;main.c: 75:         decimal = 9;
  1243  01E8  3009               	movlw	9
  1244  01E9  00AE               	movwf	??_main
  1245  01EA  082E               	movf	??_main,w
  1246  01EB  00BD               	movwf	_decimal
  1247  01EC                     l151:	
  1248                           ;main.c: 76:     }
  1249                           
  1250                           
  1251                           ;main.c: 77:     if (decimal0 > 9){
  1252  01EC  300A               	movlw	10
  1253  01ED  023C               	subwf	_decimal0,w
  1254  01EE  1C03               	skipc
  1255  01EF  29F1               	goto	u1161
  1256  01F0  29F2               	goto	u1160
  1257  01F1                     u1161:
  1258  01F1  29F6               	goto	l152
  1259  01F2                     u1160:
  1260  01F2                     l2081:
  1261                           
  1262                           ;main.c: 78:         decimal0 = 9;
  1263  01F2  3009               	movlw	9
  1264  01F3  00AE               	movwf	??_main
  1265  01F4  082E               	movf	??_main,w
  1266  01F5  00BC               	movwf	_decimal0
  1267  01F6                     l152:	
  1268                           ;main.c: 79:     }
  1269                           
  1270                           
  1271                           ;main.c: 80:     if (k1 > 9){
  1272  01F6  300A               	movlw	10
  1273  01F7  0241               	subwf	_k1,w
  1274  01F8  1C03               	skipc
  1275  01F9  29FB               	goto	u1171
  1276  01FA  29FC               	goto	u1170
  1277  01FB                     u1171:
  1278  01FB  2A00               	goto	l153
  1279  01FC                     u1170:
  1280  01FC                     l2083:
  1281                           
  1282                           ;main.c: 81:         k1 = 9;
  1283  01FC  3009               	movlw	9
  1284  01FD  00AE               	movwf	??_main
  1285  01FE  082E               	movf	??_main,w
  1286  01FF  00C1               	movwf	_k1
  1287  0200                     l153:	
  1288                           ;main.c: 82:     }
  1289                           
  1290                           
  1291                           ;main.c: 83:     if (k0 > 9){
  1292  0200  300A               	movlw	10
  1293  0201  0240               	subwf	_k0,w
  1294  0202  1C03               	skipc
  1295  0203  2A05               	goto	u1181
  1296  0204  2A06               	goto	u1180
  1297  0205                     u1181:
  1298  0205  2A0A               	goto	l154
  1299  0206                     u1180:
  1300  0206                     l2085:
  1301                           
  1302                           ;main.c: 84:         k0 = 9;
  1303  0206  3009               	movlw	9
  1304  0207  00AE               	movwf	??_main
  1305  0208  082E               	movf	??_main,w
  1306  0209  00C0               	movwf	_k0
  1307  020A                     l154:	
  1308                           ;main.c: 85:     }
  1309                           
  1310                           
  1311                           ;main.c: 87:     if (unit > 5){
  1312  020A  3006               	movlw	6
  1313  020B  023E               	subwf	_unit,w
  1314  020C  1C03               	skipc
  1315  020D  2A0F               	goto	u1191
  1316  020E  2A10               	goto	u1190
  1317  020F                     u1191:
  1318  020F  2A14               	goto	l155
  1319  0210                     u1190:
  1320  0210                     l2087:
  1321                           
  1322                           ;main.c: 88:         unit = 5;
  1323  0210  3005               	movlw	5
  1324  0211  00AE               	movwf	??_main
  1325  0212  082E               	movf	??_main,w
  1326  0213  00BE               	movwf	_unit
  1327  0214                     l155:	
  1328                           ;main.c: 89:     }
  1329                           
  1330                           
  1331                           ;main.c: 90:     if (unit_1 > 5){
  1332  0214  3006               	movlw	6
  1333  0215  023B               	subwf	_unit_1,w
  1334  0216  1C03               	skipc
  1335  0217  2A19               	goto	u1201
  1336  0218  2A1A               	goto	u1200
  1337  0219                     u1201:
  1338  0219  2A1E               	goto	l156
  1339  021A                     u1200:
  1340  021A                     l2089:
  1341                           
  1342                           ;main.c: 91:         unit = 5;
  1343  021A  3005               	movlw	5
  1344  021B  00AE               	movwf	??_main
  1345  021C  082E               	movf	??_main,w
  1346  021D  00BE               	movwf	_unit
  1347  021E                     l156:	
  1348                           ;main.c: 92:     }
  1349                           
  1350                           
  1351                           ;main.c: 93:     if (counter > 5){
  1352  021E  3006               	movlw	6
  1353  021F  0245               	subwf	_counter,w
  1354  0220  1C03               	skipc
  1355  0221  2A23               	goto	u1211
  1356  0222  2A24               	goto	u1210
  1357  0223                     u1211:
  1358  0223  2A28               	goto	l2093
  1359  0224                     u1210:
  1360  0224                     l2091:
  1361                           
  1362                           ;main.c: 94:         unit = 5;
  1363  0224  3005               	movlw	5
  1364  0225  00AE               	movwf	??_main
  1365  0226  082E               	movf	??_main,w
  1366  0227  00BE               	movwf	_unit
  1367  0228                     l2093:
  1368                           
  1369                           ;main.c: 97:     cursorLCD(2,1);
  1370  0228  01A3               	clrf	cursorLCD@y
  1371  0229  0AA3               	incf	cursorLCD@y,f
  1372  022A  3002               	movlw	2
  1373  022B  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1374  0230                     l2095:
  1375                           
  1376                           ;main.c: 98:     wLCD(unit +48);
  1377  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0232  083E               	movf	_unit,w
  1380  0233  3E30               	addlw	48
  1381  0234  120A  118A  262C  120A  118A  	fcall	_wLCD
  1382  0239                     l2097:
  1383                           
  1384                           ;main.c: 99:     cursorLCD(2,3);
  1385  0239  3003               	movlw	3
  1386  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1387  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1388  023C  00AE               	movwf	??_main
  1389  023D  082E               	movf	??_main,w
  1390  023E  00A3               	movwf	cursorLCD@y
  1391  023F  3002               	movlw	2
  1392  0240  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1393  0245                     l2099:
  1394                           
  1395                           ;main.c: 100:     wLCD(decimal + 48);
  1396  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0247  083D               	movf	_decimal,w
  1399  0248  3E30               	addlw	48
  1400  0249  120A  118A  262C  120A  118A  	fcall	_wLCD
  1401  024E                     l2101:
  1402                           
  1403                           ;main.c: 101:     cursorLCD(2,4);
  1404  024E  3004               	movlw	4
  1405  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0251  00AE               	movwf	??_main
  1408  0252  082E               	movf	??_main,w
  1409  0253  00A3               	movwf	cursorLCD@y
  1410  0254  3002               	movlw	2
  1411  0255  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1412  025A                     l2103:
  1413                           
  1414                           ;main.c: 102:     wLCD(decimal0 + 48);
  1415  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1416  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1417  025C  083C               	movf	_decimal0,w
  1418  025D  3E30               	addlw	48
  1419  025E  120A  118A  262C  120A  118A  	fcall	_wLCD
  1420  0263                     l2105:
  1421                           
  1422                           ;main.c: 104:     cursorLCD(2,7);
  1423  0263  3007               	movlw	7
  1424  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0266  00AE               	movwf	??_main
  1427  0267  082E               	movf	??_main,w
  1428  0268  00A3               	movwf	cursorLCD@y
  1429  0269  3002               	movlw	2
  1430  026A  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1431  026F                     l2107:
  1432                           
  1433                           ;main.c: 105:     wLCD(unit_1 +48);
  1434  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0271  083B               	movf	_unit_1,w
  1437  0272  3E30               	addlw	48
  1438  0273  120A  118A  262C  120A  118A  	fcall	_wLCD
  1439  0278                     l2109:
  1440                           
  1441                           ;main.c: 106:     cursorLCD(2,9);
  1442  0278  3009               	movlw	9
  1443  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1444  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1445  027B  00AE               	movwf	??_main
  1446  027C  082E               	movf	??_main,w
  1447  027D  00A3               	movwf	cursorLCD@y
  1448  027E  3002               	movlw	2
  1449  027F  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1450  0284                     l2111:
  1451                           
  1452                           ;main.c: 107:     wLCD(k1 + 48);
  1453  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0286  0841               	movf	_k1,w
  1456  0287  3E30               	addlw	48
  1457  0288  120A  118A  262C  120A  118A  	fcall	_wLCD
  1458  028D                     l2113:
  1459                           
  1460                           ;main.c: 108:     cursorLCD(2,10);
  1461  028D  300A               	movlw	10
  1462  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1463  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0290  00AE               	movwf	??_main
  1465  0291  082E               	movf	??_main,w
  1466  0292  00A3               	movwf	cursorLCD@y
  1467  0293  3002               	movlw	2
  1468  0294  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1469  0299                     l2115:
  1470                           
  1471                           ;main.c: 109:     wLCD(k0 + 48);
  1472  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1473  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1474  029B  0840               	movf	_k0,w
  1475  029C  3E30               	addlw	48
  1476  029D  120A  118A  262C  120A  118A  	fcall	_wLCD
  1477  02A2                     l2117:
  1478                           
  1479                           ;main.c: 111:     cursorLCD(2,13);
  1480  02A2  300D               	movlw	13
  1481  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1482  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1483  02A5  00AE               	movwf	??_main
  1484  02A6  082E               	movf	??_main,w
  1485  02A7  00A3               	movwf	cursorLCD@y
  1486  02A8  3002               	movlw	2
  1487  02A9  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1488  02AE                     l2119:
  1489                           
  1490                           ;main.c: 112:     wLCD(hundreds +48);
  1491  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1492  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1493  02B0  083F               	movf	_hundreds,w
  1494  02B1  3E30               	addlw	48
  1495  02B2  120A  118A  262C  120A  118A  	fcall	_wLCD
  1496  02B7                     l2121:
  1497                           
  1498                           ;main.c: 113:     cursorLCD(2,14);
  1499  02B7  300E               	movlw	14
  1500  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1501  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1502  02BA  00AE               	movwf	??_main
  1503  02BB  082E               	movf	??_main,w
  1504  02BC  00A3               	movwf	cursorLCD@y
  1505  02BD  3002               	movlw	2
  1506  02BE  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1507  02C3                     l2123:
  1508                           
  1509                           ;main.c: 114:     wLCD(dozens + 48);
  1510  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1512  02C5  0839               	movf	_dozens,w
  1513  02C6  3E30               	addlw	48
  1514  02C7  120A  118A  262C  120A  118A  	fcall	_wLCD
  1515  02CC                     l2125:
  1516                           
  1517                           ;main.c: 115:     cursorLCD(2,15);
  1518  02CC  300F               	movlw	15
  1519  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1520  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1521  02CF  00AE               	movwf	??_main
  1522  02D0  082E               	movf	??_main,w
  1523  02D1  00A3               	movwf	cursorLCD@y
  1524  02D2  3002               	movlw	2
  1525  02D3  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  1526  02D8                     l2127:
  1527                           
  1528                           ;main.c: 116:     wLCD(unity + 48);
  1529  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1530  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1531  02DA  0838               	movf	_unity,w
  1532  02DB  3E30               	addlw	48
  1533  02DC  120A  118A  262C  120A  118A  	fcall	_wLCD
  1534                           
  1535                           ;main.c: 117:     if(c > 20){
  1536  02E1  3015               	movlw	21
  1537  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1538  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1539  02E4  0244               	subwf	_c,w
  1540  02E5  1C03               	skipc
  1541  02E6  2AE8               	goto	u1221
  1542  02E7  2AE9               	goto	u1220
  1543  02E8                     u1221:
  1544  02E8  2832               	goto	l2053
  1545  02E9                     u1220:
  1546  02E9                     l2129:
  1547                           
  1548                           ;main.c: 118:         c = 0;
  1549  02E9  01C4               	clrf	_c
  1550  02EA                     l2131:
  1551                           
  1552                           ;main.c: 119:         TXIE = 1;
  1553  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1554  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1555  02EC  160C               	bsf	12,4	;volatile
  1556  02ED  2832               	goto	l2053
  1557  02EE  120A  118A  280E   	ljmp	start
  1558  02F1                     __end_of_main:
  1559                           
  1560                           	psect	text1
  1561  0563                     __ptext1:	
  1562 ;; *************** function _initCONFIG *****************
  1563 ;; Defined at:
  1564 ;;		line 235 in file "main.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0
  1581 ;;      Totals:         0       0       0       0       0
  1582 ;;Total ram usage:        0 bytes
  1583 ;; Hardware stack levels used: 1
  1584 ;; Hardware stack levels required when called: 5
  1585 ;; This function calls:
  1586 ;;		_LCD_display
  1587 ;;		_UARTs
  1588 ;;		_initLCD
  1589 ;;		_setupADC
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _initCONFIG
  1597  0563                     _initCONFIG:
  1598  0563                     l1891:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _initCONFIG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1601                           
  1602                           
  1603                           ;main.c: 236:     ANSELH = 0;
  1604  0563  1683               	bsf	3,5	;RP0=1, select bank3
  1605  0564  1703               	bsf	3,6	;RP1=1, select bank3
  1606  0565  0189               	clrf	9	;volatile
  1607  0566                     l1893:
  1608                           
  1609                           ;main.c: 237:     ANSEL = 0b00000011;
  1610  0566  3003               	movlw	3
  1611  0567  0088               	movwf	8	;volatile
  1612  0568                     l1895:
  1613                           
  1614                           ;main.c: 238:     TRISA = 0b00000011;
  1615  0568  3003               	movlw	3
  1616  0569  1683               	bsf	3,5	;RP0=1, select bank1
  1617  056A  1303               	bcf	3,6	;RP1=0, select bank1
  1618  056B  0085               	movwf	5	;volatile
  1619  056C                     l1897:
  1620                           
  1621                           ;main.c: 239:     TRISC = 0b11000000;
  1622  056C  30C0               	movlw	192
  1623  056D  0087               	movwf	7	;volatile
  1624  056E                     l1899:
  1625                           
  1626                           ;main.c: 240:     TRISD = 0;
  1627  056E  0188               	clrf	8	;volatile
  1628  056F                     l1901:
  1629                           
  1630                           ;main.c: 241:     TRISE = 0;
  1631  056F  0189               	clrf	9	;volatile
  1632  0570                     l1903:
  1633                           
  1634                           ;main.c: 242:     PORTA = 0;
  1635  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0572  0185               	clrf	5	;volatile
  1638  0573                     l1905:
  1639                           
  1640                           ;main.c: 243:     PORTC = 0;
  1641  0573  0187               	clrf	7	;volatile
  1642  0574                     l1907:
  1643                           
  1644                           ;main.c: 244:     PORTD = 0;
  1645  0574  0188               	clrf	8	;volatile
  1646  0575                     l1909:
  1647                           
  1648                           ;main.c: 245:     PORTE = 0;
  1649  0575  0189               	clrf	9	;volatile
  1650  0576                     l1911:
  1651                           
  1652                           ;main.c: 246:     OSCCONbits.IRCF2 = 1;
  1653  0576  1683               	bsf	3,5	;RP0=1, select bank1
  1654  0577  1303               	bcf	3,6	;RP1=0, select bank1
  1655  0578  170F               	bsf	15,6	;volatile
  1656  0579                     l1913:
  1657                           
  1658                           ;main.c: 247:     OSCCONbits.IRCF1 = 1;
  1659  0579  168F               	bsf	15,5	;volatile
  1660  057A                     l1915:
  1661                           
  1662                           ;main.c: 248:     OSCCONbits.IRCF0 = 1;
  1663  057A  160F               	bsf	15,4	;volatile
  1664  057B                     l1917:
  1665                           
  1666                           ;main.c: 249:     OSCCONbits.SCS = 1;
  1667  057B  140F               	bsf	15,0	;volatile
  1668  057C                     l1919:
  1669                           
  1670                           ;main.c: 250:     setupADC();
  1671  057C  120A  118A  265B  120A  118A  	fcall	_setupADC
  1672  0581                     l1921:
  1673                           
  1674                           ;main.c: 251:     INTCONbits.GIE = 1;
  1675  0581  178B               	bsf	11,7	;volatile
  1676  0582                     l1923:
  1677                           
  1678                           ;main.c: 252:     INTCONbits.T0IE = 1;
  1679  0582  168B               	bsf	11,5	;volatile
  1680  0583                     l1925:
  1681                           
  1682                           ;main.c: 253:     INTCONbits.T0IF = 0;
  1683  0583  110B               	bcf	11,2	;volatile
  1684  0584                     l1927:
  1685                           
  1686                           ;main.c: 254:     INTCONbits.PEIE = 1;
  1687  0584  170B               	bsf	11,6	;volatile
  1688  0585                     l1929:
  1689                           
  1690                           ;main.c: 255:     PIE1bits.ADIE = 1;
  1691  0585  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0586  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0587  170C               	bsf	12,6	;volatile
  1694  0588                     l1931:
  1695                           
  1696                           ;main.c: 256:     PIR1bits.ADIF = 0;
  1697  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1699  058A  130C               	bcf	12,6	;volatile
  1700  058B                     l1933:
  1701                           
  1702                           ;main.c: 257:     initLCD();
  1703  058B  120A  118A  24A2  120A  118A  	fcall	_initLCD
  1704  0590                     l1935:
  1705                           
  1706                           ;main.c: 258:     UARTs();
  1707  0590  120A  118A  2671  120A  118A  	fcall	_UARTs
  1708  0595                     l1937:
  1709                           
  1710                           ;main.c: 259:     LCD_display();
  1711  0595  120A  118A  23CE  120A  118A  	fcall	_LCD_display
  1712  059A                     l199:
  1713  059A  0008               	return
  1714  059B                     __end_of_initCONFIG:
  1715                           
  1716                           	psect	text2
  1717  065B                     __ptext2:	
  1718 ;; *************** function _setupADC *****************
  1719 ;; Defined at:
  1720 ;;		line 15 in file "ADC.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1734 ;;      Params:         0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0
  1736 ;;      Temps:          1       0       0       0       0
  1737 ;;      Totals:         1       0       0       0       0
  1738 ;;Total ram usage:        1 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 1
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_initCONFIG
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _setupADC
  1750  065B                     _setupADC:
  1751  065B                     l1349:	
  1752                           ;incstack = 0
  1753                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1754                           
  1755                           
  1756                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  1757  065B  1683               	bsf	3,5	;RP0=1, select bank1
  1758  065C  1303               	bcf	3,6	;RP1=0, select bank1
  1759  065D  139F               	bcf	31,7	;volatile
  1760                           
  1761                           ;ADC.c: 17:     ADCON1bits.VCFG0 = 0;
  1762  065E  121F               	bcf	31,4	;volatile
  1763                           
  1764                           ;ADC.c: 18:     ADCON1bits.VCFG1 = 0;
  1765  065F  129F               	bcf	31,5	;volatile
  1766  0660                     l1351:
  1767                           
  1768                           ;ADC.c: 19:     ADCON0bits.ADCS = 0b10;
  1769  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0662  081F               	movf	31,w	;volatile
  1772  0663  393F               	andlw	-193
  1773  0664  3880               	iorlw	128
  1774  0665  009F               	movwf	31	;volatile
  1775                           
  1776                           ;ADC.c: 20:     ADCON0bits.CHS = 0;
  1777  0666  30C3               	movlw	-61
  1778  0667  059F               	andwf	31,f	;volatile
  1779  0668                     l1353:
  1780                           
  1781                           ;ADC.c: 21:     ADCON0bits.ADON = 1;
  1782  0668  141F               	bsf	31,0	;volatile
  1783  0669                     l1355:
  1784                           
  1785                           ;ADC.c: 22:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1786  0669  3021               	movlw	33
  1787  066A  00F5               	movwf	??_setupADC
  1788  066B                     u1237:
  1789  066B  0BF5               	decfsz	??_setupADC,f
  1790  066C  2E6B               	goto	u1237
  1791  066D                     l1357:
  1792                           
  1793                           ;ADC.c: 23:     ADCON0bits.GO = 1;
  1794  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1795  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1796  066F  149F               	bsf	31,1	;volatile
  1797  0670                     l9:
  1798  0670  0008               	return
  1799  0671                     __end_of_setupADC:
  1800                           
  1801                           	psect	text3
  1802  04A2                     __ptext3:	
  1803 ;; *************** function _initLCD *****************
  1804 ;; Defined at:
  1805 ;;		line 14 in file "LCD8bits.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, pclath, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       3       0       0       0
  1822 ;;      Totals:         0       3       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 3
  1826 ;; This function calls:
  1827 ;;		_LCDsetup
  1828 ;;		_enableLCD
  1829 ;; This function is called by:
  1830 ;;		_initCONFIG
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _initLCD
  1836  04A2                     _initLCD:
  1837  04A2                     l1849:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1840                           
  1841                           
  1842                           ;LCD8bits.c: 15:    _delay((unsigned long)((80)*(4000000/4000.0)));
  1843  04A2  3068               	movlw	104
  1844  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1845  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1846  04A5  00A4               	movwf	??_initLCD+1
  1847  04A6  30E3               	movlw	227
  1848  04A7  00A3               	movwf	??_initLCD
  1849  04A8                     u1247:
  1850  04A8  0BA3               	decfsz	??_initLCD,f
  1851  04A9  2CA8               	goto	u1247
  1852  04AA  0BA4               	decfsz	??_initLCD+1,f
  1853  04AB  2CA8               	goto	u1247
  1854  04AC  2CAD               	nop2
  1855  04AD                     l1851:
  1856                           
  1857                           ;LCD8bits.c: 16:    LCDsetup(0b0);
  1858  04AD  3000               	movlw	0
  1859  04AE  120A  118A  26A6  120A  118A  	fcall	_LCDsetup
  1860  04B3                     l1853:
  1861                           
  1862                           ;LCD8bits.c: 17:    _delay((unsigned long)((110)*(4000000/4000.0)));
  1863  04B3  308F               	movlw	143
  1864  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1865  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1866  04B6  00A4               	movwf	??_initLCD+1
  1867  04B7  30D9               	movlw	217
  1868  04B8  00A3               	movwf	??_initLCD
  1869  04B9                     u1257:
  1870  04B9  0BA3               	decfsz	??_initLCD,f
  1871  04BA  2CB9               	goto	u1257
  1872  04BB  0BA4               	decfsz	??_initLCD+1,f
  1873  04BC  2CB9               	goto	u1257
  1874  04BD  2CBE               	nop2
  1875                           
  1876                           ;LCD8bits.c: 18:    enableLCD(0b110000);
  1877  04BE  3030               	movlw	48
  1878  04BF  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1879  04C4                     l1855:
  1880                           
  1881                           ;LCD8bits.c: 19:    _delay((unsigned long)((40)*(4000000/4000.0)));
  1882  04C4  3034               	movlw	52
  1883  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1884  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1885  04C7  00A4               	movwf	??_initLCD+1
  1886  04C8  30F1               	movlw	241
  1887  04C9  00A3               	movwf	??_initLCD
  1888  04CA                     u1267:
  1889  04CA  0BA3               	decfsz	??_initLCD,f
  1890  04CB  2CCA               	goto	u1267
  1891  04CC  0BA4               	decfsz	??_initLCD+1,f
  1892  04CD  2CCA               	goto	u1267
  1893  04CE                     l1857:
  1894                           
  1895                           ;LCD8bits.c: 20:    enableLCD(0b110000);
  1896  04CE  3030               	movlw	48
  1897  04CF  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1898                           
  1899                           ;LCD8bits.c: 21:    _delay((unsigned long)((390)*(4000000/4000.0)));
  1900  04D4  3002               	movlw	2
  1901  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1902  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1903  04D7  00A5               	movwf	??_initLCD+2
  1904  04D8  30FB               	movlw	251
  1905  04D9  00A4               	movwf	??_initLCD+1
  1906  04DA  307A               	movlw	122
  1907  04DB  00A3               	movwf	??_initLCD
  1908  04DC                     u1277:
  1909  04DC  0BA3               	decfsz	??_initLCD,f
  1910  04DD  2CDC               	goto	u1277
  1911  04DE  0BA4               	decfsz	??_initLCD+1,f
  1912  04DF  2CDC               	goto	u1277
  1913  04E0  0BA5               	decfsz	??_initLCD+2,f
  1914  04E1  2CDC               	goto	u1277
  1915  04E2  0000               	nop
  1916  04E3                     l1859:
  1917                           
  1918                           ;LCD8bits.c: 22:    enableLCD(0b110000);
  1919  04E3  3030               	movlw	48
  1920  04E4  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1921  04E9                     l1861:
  1922                           
  1923                           ;LCD8bits.c: 23:    enableLCD(0b111000);
  1924  04E9  3038               	movlw	56
  1925  04EA  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1926  04EF                     l1863:
  1927                           
  1928                           ;LCD8bits.c: 24:    enableLCD(0b10000);
  1929  04EF  3010               	movlw	16
  1930  04F0  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1931  04F5                     l1865:
  1932                           
  1933                           ;LCD8bits.c: 25:    enableLCD(0b1);
  1934  04F5  3001               	movlw	1
  1935  04F6  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1936  04FB                     l1867:
  1937                           
  1938                           ;LCD8bits.c: 26:    enableLCD(0b110);
  1939  04FB  3006               	movlw	6
  1940  04FC  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1941  0501                     l1869:
  1942                           
  1943                           ;LCD8bits.c: 27:    enableLCD(0b1100);
  1944  0501  300C               	movlw	12
  1945  0502  120A  118A  2611  120A  118A  	fcall	_enableLCD
  1946  0507                     l24:
  1947  0507  0008               	return
  1948  0508                     __end_of_initLCD:
  1949                           
  1950                           	psect	text4
  1951  0671                     __ptext4:	
  1952 ;; *************** function _UARTs *****************
  1953 ;; Defined at:
  1954 ;;		line 11 in file "UART.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_initCONFIG
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function _UARTs
  1984  0671                     _UARTs:
  1985  0671                     l1403:	
  1986                           ;incstack = 0
  1987                           ; Regs used in _UARTs: [wreg+status,2]
  1988                           
  1989                           
  1990                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  1991  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0672  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0673  1218               	bcf	24,4	;volatile
  1994                           
  1995                           ;UART.c: 13:     TXSTAbits.BRGH = 1;
  1996  0674  1518               	bsf	24,2	;volatile
  1997                           
  1998                           ;UART.c: 14:     BAUDCTLbits.BRG16 = 1;
  1999  0675  1683               	bsf	3,5	;RP0=1, select bank3
  2000  0676  1703               	bsf	3,6	;RP1=1, select bank3
  2001  0677  1587               	bsf	7,3	;volatile
  2002  0678                     l1405:
  2003                           
  2004                           ;UART.c: 15:     SPBRG = 207;
  2005  0678  30CF               	movlw	207
  2006  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2007  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2008  067B  0099               	movwf	25	;volatile
  2009  067C                     l1407:
  2010                           
  2011                           ;UART.c: 16:     SPBRGH = 0;
  2012  067C  019A               	clrf	26	;volatile
  2013  067D                     l1409:
  2014                           
  2015                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  2016  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2017  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2018  067F  1798               	bsf	24,7	;volatile
  2019  0680                     l1411:
  2020                           
  2021                           ;UART.c: 18:     RCSTAbits.RX9 = 0;
  2022  0680  1318               	bcf	24,6	;volatile
  2023  0681                     l1413:
  2024                           
  2025                           ;UART.c: 19:     RCSTAbits.CREN = 1;
  2026  0681  1618               	bsf	24,4	;volatile
  2027  0682                     l1415:
  2028                           
  2029                           ;UART.c: 20:     TXSTAbits.TXEN = 1;
  2030  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0683  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0684  1698               	bsf	24,5	;volatile
  2033  0685                     l215:
  2034  0685  0008               	return
  2035  0686                     __end_of_UARTs:
  2036                           
  2037                           	psect	text5
  2038  03CE                     __ptext5:	
  2039 ;; *************** function _LCD_display *****************
  2040 ;; Defined at:
  2041 ;;		line 219 in file "main.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2055 ;;      Params:         0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0
  2057 ;;      Temps:          0       1       0       0       0
  2058 ;;      Totals:         0       1       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 4
  2062 ;; This function calls:
  2063 ;;		_cursorLCD
  2064 ;;		_wsLCD
  2065 ;; This function is called by:
  2066 ;;		_initCONFIG
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _LCD_display
  2072  03CE                     _LCD_display:
  2073  03CE                     l1871:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _LCD_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2076                           
  2077                           
  2078                           ;main.c: 220:     cursorLCD(1,3);
  2079  03CE  3003               	movlw	3
  2080  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2081  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2082  03D1  00A7               	movwf	??_LCD_display
  2083  03D2  0827               	movf	??_LCD_display,w
  2084  03D3  00A3               	movwf	cursorLCD@y
  2085  03D4  3001               	movlw	1
  2086  03D5  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2087  03DA                     l1873:
  2088                           
  2089                           ;main.c: 221:     wsLCD("S1");
  2090  03DA  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2091  03DB  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2092  03E0                     l1875:
  2093                           
  2094                           ;main.c: 222:     cursorLCD(2,1);
  2095  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2096  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2097  03E2  01A3               	clrf	cursorLCD@y
  2098  03E3  0AA3               	incf	cursorLCD@y,f
  2099  03E4  3002               	movlw	2
  2100  03E5  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2101                           
  2102                           ;main.c: 223:     wsLCD("0.00");
  2103  03EA  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2104  03EB  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2105  03F0                     l1877:
  2106                           
  2107                           ;main.c: 224:     cursorLCD(1,8);
  2108  03F0  3008               	movlw	8
  2109  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2110  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2111  03F3  00A7               	movwf	??_LCD_display
  2112  03F4  0827               	movf	??_LCD_display,w
  2113  03F5  00A3               	movwf	cursorLCD@y
  2114  03F6  3001               	movlw	1
  2115  03F7  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2116  03FC                     l1879:
  2117                           
  2118                           ;main.c: 225:     wsLCD("S2");
  2119  03FC  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2120  03FD  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2121                           
  2122                           ;main.c: 226:     cursorLCD(2,7);
  2123  0402  3007               	movlw	7
  2124  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0405  00A7               	movwf	??_LCD_display
  2127  0406  0827               	movf	??_LCD_display,w
  2128  0407  00A3               	movwf	cursorLCD@y
  2129  0408  3002               	movlw	2
  2130  0409  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2131  040E                     l1881:
  2132                           
  2133                           ;main.c: 227:     wsLCD("0.00");
  2134  040E  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2135  040F  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2136  0414                     l1883:
  2137                           
  2138                           ;main.c: 228:     cursorLCD(1,13);
  2139  0414  300D               	movlw	13
  2140  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0417  00A7               	movwf	??_LCD_display
  2143  0418  0827               	movf	??_LCD_display,w
  2144  0419  00A3               	movwf	cursorLCD@y
  2145  041A  3001               	movlw	1
  2146  041B  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2147                           
  2148                           ;main.c: 229:     wsLCD("S3");
  2149  0420  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2150  0421  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2151  0426                     l1885:
  2152                           
  2153                           ;main.c: 230:     cursorLCD(2,13);
  2154  0426  300D               	movlw	13
  2155  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0429  00A7               	movwf	??_LCD_display
  2158  042A  0827               	movf	??_LCD_display,w
  2159  042B  00A3               	movwf	cursorLCD@y
  2160  042C  3002               	movlw	2
  2161  042D  120A  118A  25EB  120A  118A  	fcall	_cursorLCD
  2162  0432                     l1887:
  2163                           
  2164                           ;main.c: 231:     wsLCD("00");
  2165  0432  3003               	movlw	(low (((STR_2+2)-__stringbase)| (0+32768)))& (0+255)
  2166  0433  120A  118A  259B  120A  118A  	fcall	_wsLCD
  2167  0438                     l196:
  2168  0438  0008               	return
  2169  0439                     __end_of_LCD_display:
  2170                           
  2171                           	psect	text6
  2172  059B                     __ptext6:	
  2173 ;; *************** function _wsLCD *****************
  2174 ;; Defined at:
  2175 ;;		line 57 in file "LCD8bits.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  x               1    wreg     PTR unsigned char 
  2178 ;;		 -> STR_6(3), STR_5(3), STR_4(5), STR_3(3), 
  2179 ;;		 -> STR_2(5), STR_1(3), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  x               1    4[BANK0 ] PTR unsigned char 
  2182 ;;		 -> STR_6(3), STR_5(3), STR_4(5), STR_3(3), 
  2183 ;;		 -> STR_2(5), STR_1(3), 
  2184 ;;  i               2    2[BANK0 ] int 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       3       0       0       0
  2196 ;;      Temps:          0       0       0       0       0
  2197 ;;      Totals:         0       3       0       0       0
  2198 ;;Total ram usage:        3 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 3
  2201 ;; This function calls:
  2202 ;;		_wLCD
  2203 ;; This function is called by:
  2204 ;;		_LCD_display
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _wsLCD
  2210  059B                     _wsLCD:
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _wsLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2214                           ;wsLCD@x stored from wreg
  2215  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2216  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2217  059D  00A4               	movwf	wsLCD@x
  2218  059E                     l1841:
  2219                           
  2220                           ;LCD8bits.c: 58:     int i;;LCD8bits.c: 59:     for(i=0;x[i]!='\0';i++)
  2221  059E  01A2               	clrf	wsLCD@i
  2222  059F  01A3               	clrf	wsLCD@i+1
  2223  05A0  2DB6               	goto	l1847
  2224  05A1                     l1843:
  2225                           
  2226                           ;LCD8bits.c: 60:         wLCD(x[i]);
  2227  05A1  0822               	movf	wsLCD@i,w
  2228  05A2  0724               	addwf	wsLCD@x,w
  2229  05A3  0084               	movwf	4
  2230  05A4  120A  118A  2686  120A  118A  	fcall	stringdir
  2231  05A9  120A  118A  262C  120A  118A  	fcall	_wLCD
  2232  05AE                     l1845:
  2233  05AE  3001               	movlw	1
  2234  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2235  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  2236  05B1  07A2               	addwf	wsLCD@i,f
  2237  05B2  1803               	skipnc
  2238  05B3  0AA3               	incf	wsLCD@i+1,f
  2239  05B4  3000               	movlw	0
  2240  05B5  07A3               	addwf	wsLCD@i+1,f
  2241  05B6                     l1847:
  2242  05B6  0822               	movf	wsLCD@i,w
  2243  05B7  0724               	addwf	wsLCD@x,w
  2244  05B8  0084               	movwf	4
  2245  05B9  120A  118A  2686  120A  118A  	fcall	stringdir
  2246  05BE  3A00               	xorlw	0
  2247  05BF  1D03               	skipz
  2248  05C0  2DC2               	goto	u891
  2249  05C1  2DC3               	goto	u890
  2250  05C2                     u891:
  2251  05C2  2DA1               	goto	l1843
  2252  05C3                     u890:
  2253  05C3                     l45:
  2254  05C3  0008               	return
  2255  05C4                     __end_of_wsLCD:
  2256                           
  2257                           	psect	text7
  2258  062C                     __ptext7:	
  2259 ;; *************** function _wLCD *****************
  2260 ;; Defined at:
  2261 ;;		line 39 in file "LCD8bits.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  x               1    wreg     unsigned char 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  x               1    1[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       0       0       0
  2276 ;;      Locals:         0       1       0       0       0
  2277 ;;      Temps:          0       1       0       0       0
  2278 ;;      Totals:         0       2       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 2
  2282 ;; This function calls:
  2283 ;;		_LCDsetup
  2284 ;; This function is called by:
  2285 ;;		_wsLCD
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _wLCD
  2292  062C                     _wLCD:
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _wLCD: [wreg+status,2+status,0+pclath+cstack]
  2296                           ;wLCD@x stored from wreg
  2297  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2298  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2299  062E  00A1               	movwf	wLCD@x
  2300  062F                     l1819:
  2301                           
  2302                           ;LCD8bits.c: 40:     RE0 = 1;
  2303  062F  1409               	bsf	9,0	;volatile
  2304  0630                     l1821:
  2305                           
  2306                           ;LCD8bits.c: 41:     LCDsetup(x);
  2307  0630  0821               	movf	wLCD@x,w
  2308  0631  120A  118A  26A6  120A  118A  	fcall	_LCDsetup
  2309  0636                     l1823:
  2310                           
  2311                           ;LCD8bits.c: 42:     RE1 = 1;
  2312  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0638  1489               	bsf	9,1	;volatile
  2315  0639                     l1825:
  2316                           
  2317                           ;LCD8bits.c: 43:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2318  0639  3020               	movlw	32
  2319  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2320  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2321  063C  00A0               	movwf	??_wLCD
  2322  063D                     u1287:
  2323  063D  0BA0               	decfsz	??_wLCD,f
  2324  063E  2E3D               	goto	u1287
  2325  063F  0000               	nop
  2326  0640                     l1827:
  2327                           
  2328                           ;LCD8bits.c: 44:     RE1 = 0;
  2329  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0642  1089               	bcf	9,1	;volatile
  2332  0643                     l33:
  2333  0643  0008               	return
  2334  0644                     __end_of_wLCD:
  2335                           
  2336                           	psect	text8
  2337  05EB                     __ptext8:	
  2338 ;; *************** function _cursorLCD *****************
  2339 ;; Defined at:
  2340 ;;		line 46 in file "LCD8bits.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  x               1    wreg     unsigned char 
  2343 ;;  y               1    3[BANK0 ] unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  x               1    5[BANK0 ] unsigned char 
  2346 ;;  t               1    6[BANK0 ] unsigned char 
  2347 ;;  v               1    0        unsigned char 
  2348 ;;  u               1    0        unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       1       0       0       0
  2359 ;;      Locals:         0       2       0       0       0
  2360 ;;      Temps:          0       1       0       0       0
  2361 ;;      Totals:         0       4       0       0       0
  2362 ;;Total ram usage:        4 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 3
  2365 ;; This function calls:
  2366 ;;		_enableLCD
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;;		_LCD_display
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _cursorLCD
  2375  05EB                     _cursorLCD:
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _cursorLCD: [wreg+status,2+status,0+pclath+cstack]
  2379                           ;cursorLCD@x stored from wreg
  2380  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2381  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2382  05ED  00A5               	movwf	cursorLCD@x
  2383  05EE                     l1829:
  2384                           
  2385                           ;LCD8bits.c: 47:     char t, u, v;;LCD8bits.c: 48:     if (x == 1){
  2386  05EE  0325               	decf	cursorLCD@x,w
  2387  05EF  1D03               	btfss	3,2
  2388  05F0  2DF2               	goto	u871
  2389  05F1  2DF3               	goto	u870
  2390  05F2                     u871:
  2391  05F2  2DFF               	goto	l1835
  2392  05F3                     u870:
  2393  05F3                     l1831:
  2394                           
  2395                           ;LCD8bits.c: 49:         t = 0x80 + y - 1;
  2396  05F3  0823               	movf	cursorLCD@y,w
  2397  05F4  3E7F               	addlw	127
  2398  05F5  00A4               	movwf	??_cursorLCD
  2399  05F6  0824               	movf	??_cursorLCD,w
  2400  05F7  00A6               	movwf	cursorLCD@t
  2401  05F8                     l1833:
  2402                           
  2403                           ;LCD8bits.c: 50:         enableLCD(t);
  2404  05F8  0826               	movf	cursorLCD@t,w
  2405  05F9  120A  118A  2611  120A  118A  	fcall	_enableLCD
  2406                           
  2407                           ;LCD8bits.c: 51:     }
  2408  05FE  2E10               	goto	l39
  2409  05FF                     l1835:
  2410  05FF  3002               	movlw	2
  2411  0600  0625               	xorwf	cursorLCD@x,w
  2412  0601  1D03               	btfss	3,2
  2413  0602  2E04               	goto	u881
  2414  0603  2E05               	goto	u880
  2415  0604                     u881:
  2416  0604  2E10               	goto	l39
  2417  0605                     u880:
  2418  0605                     l1837:
  2419                           
  2420                           ;LCD8bits.c: 53:         t = 0xC0 + y - 1;
  2421  0605  0823               	movf	cursorLCD@y,w
  2422  0606  3EBF               	addlw	191
  2423  0607  00A4               	movwf	??_cursorLCD
  2424  0608  0824               	movf	??_cursorLCD,w
  2425  0609  00A6               	movwf	cursorLCD@t
  2426  060A                     l1839:
  2427                           
  2428                           ;LCD8bits.c: 54:         enableLCD(t);
  2429  060A  0826               	movf	cursorLCD@t,w
  2430  060B  120A  118A  2611  120A  118A  	fcall	_enableLCD
  2431  0610                     l39:
  2432  0610  0008               	return
  2433  0611                     __end_of_cursorLCD:
  2434                           
  2435                           	psect	text9
  2436  0611                     __ptext9:	
  2437 ;; *************** function _enableLCD *****************
  2438 ;; Defined at:
  2439 ;;		line 29 in file "LCD8bits.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  x               1    wreg     unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  x               1    2[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       0       0       0       0
  2454 ;;      Locals:         0       1       0       0       0
  2455 ;;      Temps:          0       2       0       0       0
  2456 ;;      Totals:         0       3       0       0       0
  2457 ;;Total ram usage:        3 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 2
  2460 ;; This function calls:
  2461 ;;		_LCDsetup
  2462 ;; This function is called by:
  2463 ;;		_initLCD
  2464 ;;		_cursorLCD
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _enableLCD
  2470  0611                     _enableLCD:
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _enableLCD: [wreg+status,2+status,0+pclath+cstack]
  2474                           ;enableLCD@x stored from wreg
  2475  0611  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0612  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0613  00A2               	movwf	enableLCD@x
  2478  0614                     l1809:
  2479                           
  2480                           ;LCD8bits.c: 30:     RE0 = 0;
  2481  0614  1009               	bcf	9,0	;volatile
  2482  0615                     l1811:
  2483                           
  2484                           ;LCD8bits.c: 31:     LCDsetup(x);
  2485  0615  0822               	movf	enableLCD@x,w
  2486  0616  120A  118A  26A6  120A  118A  	fcall	_LCDsetup
  2487  061B                     l1813:
  2488                           
  2489                           ;LCD8bits.c: 32:     RE1 = 1;
  2490  061B  1283               	bcf	3,5	;RP0=0, select bank0
  2491  061C  1303               	bcf	3,6	;RP1=0, select bank0
  2492  061D  1489               	bsf	9,1	;volatile
  2493  061E                     l1815:
  2494                           
  2495                           ;LCD8bits.c: 33:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2496  061E  300D               	movlw	13
  2497  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0621  00A1               	movwf	??_enableLCD+1
  2500  0622  30FB               	movlw	251
  2501  0623  00A0               	movwf	??_enableLCD
  2502  0624                     u1297:
  2503  0624  0BA0               	decfsz	??_enableLCD,f
  2504  0625  2E24               	goto	u1297
  2505  0626  0BA1               	decfsz	??_enableLCD+1,f
  2506  0627  2E24               	goto	u1297
  2507  0628                     l1817:
  2508                           
  2509                           ;LCD8bits.c: 34:     RE1 = 0;
  2510  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2512  062A  1089               	bcf	9,1	;volatile
  2513  062B                     l27:
  2514  062B  0008               	return
  2515  062C                     __end_of_enableLCD:
  2516                           
  2517                           	psect	text10
  2518  06A6                     __ptext10:	
  2519 ;; *************** function _LCDsetup *****************
  2520 ;; Defined at:
  2521 ;;		line 36 in file "LCD8bits.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  x               1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  x               1    5[COMMON] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       0       0       0       0
  2536 ;;      Locals:         1       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0
  2538 ;;      Totals:         1       0       0       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_initLCD
  2546 ;;		_enableLCD
  2547 ;;		_wLCD
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _LCDsetup
  2553  06A6                     _LCDsetup:
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _LCDsetup: [wreg]
  2557                           ;LCDsetup@x stored from wreg
  2558  06A6  00F5               	movwf	LCDsetup@x
  2559  06A7                     l1807:
  2560                           
  2561                           ;LCD8bits.c: 37:     PORTD = x;
  2562  06A7  0875               	movf	LCDsetup@x,w
  2563  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2564  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2565  06AA  0088               	movwf	8	;volatile
  2566  06AB                     l30:
  2567  06AB  0008               	return
  2568  06AC                     __end_of_LCDsetup:
  2569                           
  2570                           	psect	text11
  2571  069A                     __ptext11:	
  2572 ;; *************** function _configTMR0 *****************
  2573 ;; Defined at:
  2574 ;;		line 262 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 1
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _configTMR0
  2604  069A                     _configTMR0:
  2605  069A                     l1467:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _configTMR0: [wreg]
  2608                           
  2609                           
  2610                           ;main.c: 263:     OPTION_REGbits.T0CS = 0;
  2611  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2612  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2613  069C  1281               	bcf	1,5	;volatile
  2614                           
  2615                           ;main.c: 264:     OPTION_REGbits.PSA = 0;
  2616  069D  1181               	bcf	1,3	;volatile
  2617                           
  2618                           ;main.c: 265:     OPTION_REGbits.PS2 = 1;
  2619  069E  1501               	bsf	1,2	;volatile
  2620                           
  2621                           ;main.c: 266:     OPTION_REGbits.PS1 = 1;
  2622  069F  1481               	bsf	1,1	;volatile
  2623                           
  2624                           ;main.c: 267:     OPTION_REGbits.PS0 = 1;
  2625  06A0  1401               	bsf	1,0	;volatile
  2626  06A1                     l1469:
  2627                           
  2628                           ;main.c: 268:     TMR0 = 217;
  2629  06A1  30D9               	movlw	217
  2630  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2631  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2632  06A4  0081               	movwf	1	;volatile
  2633  06A5                     l202:
  2634  06A5  0008               	return
  2635  06A6                     __end_of_configTMR0:
  2636                           
  2637                           	psect	text12
  2638  05C4                     __ptext12:	
  2639 ;; *************** function ___wmul *****************
  2640 ;; Defined at:
  2641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2644 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  product         2    4[BANK0 ] unsigned int 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2    0[BANK0 ] unsigned int 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         0       4       0       0       0
  2657 ;;      Locals:         0       2       0       0       0
  2658 ;;      Temps:          0       0       0       0       0
  2659 ;;      Totals:         0       6       0       0       0
  2660 ;;Total ram usage:        6 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function ___wmul
  2672  05C4                     ___wmul:
  2673  05C4                     l1939:	
  2674                           ;incstack = 0
  2675                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2676                           
  2677  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2678  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2679  05C6  01A4               	clrf	___wmul@product
  2680  05C7  01A5               	clrf	___wmul@product+1
  2681  05C8                     l1941:
  2682  05C8  1C20               	btfss	___wmul@multiplier,0
  2683  05C9  2DCB               	goto	u901
  2684  05CA  2DCC               	goto	u900
  2685  05CB                     u901:
  2686  05CB  2DD2               	goto	l301
  2687  05CC                     u900:
  2688  05CC                     l1943:
  2689  05CC  0822               	movf	___wmul@multiplicand,w
  2690  05CD  07A4               	addwf	___wmul@product,f
  2691  05CE  1803               	skipnc
  2692  05CF  0AA5               	incf	___wmul@product+1,f
  2693  05D0  0823               	movf	___wmul@multiplicand+1,w
  2694  05D1  07A5               	addwf	___wmul@product+1,f
  2695  05D2                     l301:
  2696  05D2  3001               	movlw	1
  2697  05D3                     u915:
  2698  05D3  1003               	clrc
  2699  05D4  0DA2               	rlf	___wmul@multiplicand,f
  2700  05D5  0DA3               	rlf	___wmul@multiplicand+1,f
  2701  05D6  3EFF               	addlw	-1
  2702  05D7  1D03               	skipz
  2703  05D8  2DD3               	goto	u915
  2704  05D9                     l1945:
  2705  05D9  3001               	movlw	1
  2706  05DA                     u925:
  2707  05DA  1003               	clrc
  2708  05DB  0CA1               	rrf	___wmul@multiplier+1,f
  2709  05DC  0CA0               	rrf	___wmul@multiplier,f
  2710  05DD  3EFF               	addlw	-1
  2711  05DE  1D03               	skipz
  2712  05DF  2DDA               	goto	u925
  2713  05E0                     l1947:
  2714  05E0  0820               	movf	___wmul@multiplier,w
  2715  05E1  0421               	iorwf	___wmul@multiplier+1,w
  2716  05E2  1D03               	btfss	3,2
  2717  05E3  2DE5               	goto	u931
  2718  05E4  2DE6               	goto	u930
  2719  05E5                     u931:
  2720  05E5  2DC8               	goto	l1941
  2721  05E6                     u930:
  2722  05E6                     l1949:
  2723  05E6  0825               	movf	___wmul@product+1,w
  2724  05E7  00A1               	movwf	?___wmul+1
  2725  05E8  0824               	movf	___wmul@product,w
  2726  05E9  00A0               	movwf	?___wmul
  2727  05EA                     l303:
  2728  05EA  0008               	return
  2729  05EB                     __end_of___wmul:
  2730                           
  2731                           	psect	text13
  2732  0644                     __ptext13:	
  2733 ;; *************** function ___bmul *****************
  2734 ;; Defined at:
  2735 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  multiplier      1    wreg     unsigned char 
  2738 ;;  multiplicand    1    5[COMMON] unsigned char 
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;  multiplier      1    2[BANK0 ] unsigned char 
  2741 ;;  product         1    1[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      unsigned char 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         1       0       0       0       0
  2752 ;;      Locals:         0       2       0       0       0
  2753 ;;      Temps:          0       1       0       0       0
  2754 ;;      Totals:         1       3       0       0       0
  2755 ;;Total ram usage:        4 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function ___bmul
  2767  0644                     ___bmul:
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2771                           ;___bmul@multiplier stored from wreg
  2772  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0646  00A2               	movwf	___bmul@multiplier
  2775  0647                     l1953:
  2776  0647  01A1               	clrf	___bmul@product
  2777  0648                     l1955:
  2778  0648  1C22               	btfss	___bmul@multiplier,0
  2779  0649  2E4B               	goto	u941
  2780  064A  2E4C               	goto	u940
  2781  064B                     u941:
  2782  064B  2E50               	goto	l1959
  2783  064C                     u940:
  2784  064C                     l1957:
  2785  064C  0875               	movf	___bmul@multiplicand,w
  2786  064D  00A0               	movwf	??___bmul
  2787  064E  0820               	movf	??___bmul,w
  2788  064F  07A1               	addwf	___bmul@product,f
  2789  0650                     l1959:
  2790  0650  1003               	clrc
  2791  0651  0DF5               	rlf	___bmul@multiplicand,f
  2792  0652                     l1961:
  2793  0652  1003               	clrc
  2794  0653  0CA2               	rrf	___bmul@multiplier,f
  2795  0654  0822               	movf	___bmul@multiplier,w
  2796  0655  1D03               	btfss	3,2
  2797  0656  2E58               	goto	u951
  2798  0657  2E59               	goto	u950
  2799  0658                     u951:
  2800  0658  2E48               	goto	l1955
  2801  0659                     u950:
  2802  0659                     l1963:
  2803  0659  0821               	movf	___bmul@product,w
  2804  065A                     l327:
  2805  065A  0008               	return
  2806  065B                     __end_of___bmul:
  2807                           
  2808                           	psect	text14
  2809  0508                     __ptext14:	
  2810 ;; *************** function ___awmod *****************
  2811 ;; Defined at:
  2812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  divisor         2    0[BANK0 ] int 
  2815 ;;  dividend        2    2[BANK0 ] int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  sign            1    5[BANK0 ] unsigned char 
  2818 ;;  counter         1    4[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  2    0[BANK0 ] int 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       4       0       0       0
  2829 ;;      Locals:         0       2       0       0       0
  2830 ;;      Temps:          1       0       0       0       0
  2831 ;;      Totals:         1       6       0       0       0
  2832 ;;Total ram usage:        7 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___awmod
  2844  0508                     ___awmod:
  2845  0508                     l2011:	
  2846                           ;incstack = 0
  2847                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2848                           
  2849  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2851  050A  01A5               	clrf	___awmod@sign
  2852  050B                     l2013:
  2853  050B  1FA3               	btfss	___awmod@dividend+1,7
  2854  050C  2D0E               	goto	u1061
  2855  050D  2D0F               	goto	u1060
  2856  050E                     u1061:
  2857  050E  2D16               	goto	l2019
  2858  050F                     u1060:
  2859  050F                     l2015:
  2860  050F  09A2               	comf	___awmod@dividend,f
  2861  0510  09A3               	comf	___awmod@dividend+1,f
  2862  0511  0AA2               	incf	___awmod@dividend,f
  2863  0512  1903               	skipnz
  2864  0513  0AA3               	incf	___awmod@dividend+1,f
  2865  0514                     l2017:
  2866  0514  01A5               	clrf	___awmod@sign
  2867  0515  0AA5               	incf	___awmod@sign,f
  2868  0516                     l2019:
  2869  0516  1FA1               	btfss	___awmod@divisor+1,7
  2870  0517  2D19               	goto	u1071
  2871  0518  2D1A               	goto	u1070
  2872  0519                     u1071:
  2873  0519  2D1F               	goto	l2023
  2874  051A                     u1070:
  2875  051A                     l2021:
  2876  051A  09A0               	comf	___awmod@divisor,f
  2877  051B  09A1               	comf	___awmod@divisor+1,f
  2878  051C  0AA0               	incf	___awmod@divisor,f
  2879  051D  1903               	skipnz
  2880  051E  0AA1               	incf	___awmod@divisor+1,f
  2881  051F                     l2023:
  2882  051F  0820               	movf	___awmod@divisor,w
  2883  0520  0421               	iorwf	___awmod@divisor+1,w
  2884  0521  1903               	btfsc	3,2
  2885  0522  2D24               	goto	u1081
  2886  0523  2D25               	goto	u1080
  2887  0524                     u1081:
  2888  0524  2D54               	goto	l2041
  2889  0525                     u1080:
  2890  0525                     l2025:
  2891  0525  01A4               	clrf	___awmod@counter
  2892  0526  0AA4               	incf	___awmod@counter,f
  2893  0527  2D33               	goto	l2031
  2894  0528                     l2027:
  2895  0528  3001               	movlw	1
  2896  0529                     u1095:
  2897  0529  1003               	clrc
  2898  052A  0DA0               	rlf	___awmod@divisor,f
  2899  052B  0DA1               	rlf	___awmod@divisor+1,f
  2900  052C  3EFF               	addlw	-1
  2901  052D  1D03               	skipz
  2902  052E  2D29               	goto	u1095
  2903  052F                     l2029:
  2904  052F  3001               	movlw	1
  2905  0530  00F5               	movwf	??___awmod
  2906  0531  0875               	movf	??___awmod,w
  2907  0532  07A4               	addwf	___awmod@counter,f
  2908  0533                     l2031:
  2909  0533  1FA1               	btfss	___awmod@divisor+1,7
  2910  0534  2D36               	goto	u1101
  2911  0535  2D37               	goto	u1100
  2912  0536                     u1101:
  2913  0536  2D28               	goto	l2027
  2914  0537                     u1100:
  2915  0537                     l2033:
  2916  0537  0821               	movf	___awmod@divisor+1,w
  2917  0538  0223               	subwf	___awmod@dividend+1,w
  2918  0539  1D03               	skipz
  2919  053A  2D3D               	goto	u1115
  2920  053B  0820               	movf	___awmod@divisor,w
  2921  053C  0222               	subwf	___awmod@dividend,w
  2922  053D                     u1115:
  2923  053D  1C03               	skipc
  2924  053E  2D40               	goto	u1111
  2925  053F  2D41               	goto	u1110
  2926  0540                     u1111:
  2927  0540  2D47               	goto	l2037
  2928  0541                     u1110:
  2929  0541                     l2035:
  2930  0541  0820               	movf	___awmod@divisor,w
  2931  0542  02A2               	subwf	___awmod@dividend,f
  2932  0543  0821               	movf	___awmod@divisor+1,w
  2933  0544  1C03               	skipc
  2934  0545  03A3               	decf	___awmod@dividend+1,f
  2935  0546  02A3               	subwf	___awmod@dividend+1,f
  2936  0547                     l2037:
  2937  0547  3001               	movlw	1
  2938  0548                     u1125:
  2939  0548  1003               	clrc
  2940  0549  0CA1               	rrf	___awmod@divisor+1,f
  2941  054A  0CA0               	rrf	___awmod@divisor,f
  2942  054B  3EFF               	addlw	-1
  2943  054C  1D03               	skipz
  2944  054D  2D48               	goto	u1125
  2945  054E                     l2039:
  2946  054E  3001               	movlw	1
  2947  054F  02A4               	subwf	___awmod@counter,f
  2948  0550  1D03               	btfss	3,2
  2949  0551  2D53               	goto	u1131
  2950  0552  2D54               	goto	u1130
  2951  0553                     u1131:
  2952  0553  2D37               	goto	l2033
  2953  0554                     u1130:
  2954  0554                     l2041:
  2955  0554  0825               	movf	___awmod@sign,w
  2956  0555  1903               	btfsc	3,2
  2957  0556  2D58               	goto	u1141
  2958  0557  2D59               	goto	u1140
  2959  0558                     u1141:
  2960  0558  2D5E               	goto	l2045
  2961  0559                     u1140:
  2962  0559                     l2043:
  2963  0559  09A2               	comf	___awmod@dividend,f
  2964  055A  09A3               	comf	___awmod@dividend+1,f
  2965  055B  0AA2               	incf	___awmod@dividend,f
  2966  055C  1903               	skipnz
  2967  055D  0AA3               	incf	___awmod@dividend+1,f
  2968  055E                     l2045:
  2969  055E  0823               	movf	___awmod@dividend+1,w
  2970  055F  00A1               	movwf	?___awmod+1
  2971  0560  0822               	movf	___awmod@dividend,w
  2972  0561  00A0               	movwf	?___awmod
  2973  0562                     l467:
  2974  0562  0008               	return
  2975  0563                     __end_of___awmod:
  2976                           
  2977                           	psect	text15
  2978  0439                     __ptext15:	
  2979 ;; *************** function ___awdiv *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    6[BANK0 ] int 
  2984 ;;  dividend        2    8[BANK0 ] int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  quotient        2   12[BANK0 ] int 
  2987 ;;  sign            1   11[BANK0 ] unsigned char 
  2988 ;;  counter         1   10[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  2    6[BANK0 ] int 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       4       0       0       0
  2999 ;;      Locals:         0       4       0       0       0
  3000 ;;      Temps:          1       0       0       0       0
  3001 ;;      Totals:         1       8       0       0       0
  3002 ;;Total ram usage:        9 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function ___awdiv
  3014  0439                     ___awdiv:
  3015  0439                     l1967:	
  3016                           ;incstack = 0
  3017                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3018                           
  3019  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3020  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3021  043B  01AB               	clrf	___awdiv@sign
  3022  043C                     l1969:
  3023  043C  1FA7               	btfss	___awdiv@divisor+1,7
  3024  043D  2C3F               	goto	u961
  3025  043E  2C40               	goto	u960
  3026  043F                     u961:
  3027  043F  2C47               	goto	l1975
  3028  0440                     u960:
  3029  0440                     l1971:
  3030  0440  09A6               	comf	___awdiv@divisor,f
  3031  0441  09A7               	comf	___awdiv@divisor+1,f
  3032  0442  0AA6               	incf	___awdiv@divisor,f
  3033  0443  1903               	skipnz
  3034  0444  0AA7               	incf	___awdiv@divisor+1,f
  3035  0445                     l1973:
  3036  0445  01AB               	clrf	___awdiv@sign
  3037  0446  0AAB               	incf	___awdiv@sign,f
  3038  0447                     l1975:
  3039  0447  1FA9               	btfss	___awdiv@dividend+1,7
  3040  0448  2C4A               	goto	u971
  3041  0449  2C4B               	goto	u970
  3042  044A                     u971:
  3043  044A  2C54               	goto	l1981
  3044  044B                     u970:
  3045  044B                     l1977:
  3046  044B  09A8               	comf	___awdiv@dividend,f
  3047  044C  09A9               	comf	___awdiv@dividend+1,f
  3048  044D  0AA8               	incf	___awdiv@dividend,f
  3049  044E  1903               	skipnz
  3050  044F  0AA9               	incf	___awdiv@dividend+1,f
  3051  0450                     l1979:
  3052  0450  3001               	movlw	1
  3053  0451  00F5               	movwf	??___awdiv
  3054  0452  0875               	movf	??___awdiv,w
  3055  0453  06AB               	xorwf	___awdiv@sign,f
  3056  0454                     l1981:
  3057  0454  01AC               	clrf	___awdiv@quotient
  3058  0455  01AD               	clrf	___awdiv@quotient+1
  3059  0456                     l1983:
  3060  0456  0826               	movf	___awdiv@divisor,w
  3061  0457  0427               	iorwf	___awdiv@divisor+1,w
  3062  0458  1903               	btfsc	3,2
  3063  0459  2C5B               	goto	u981
  3064  045A  2C5C               	goto	u980
  3065  045B                     u981:
  3066  045B  2C93               	goto	l2003
  3067  045C                     u980:
  3068  045C                     l1985:
  3069  045C  01AA               	clrf	___awdiv@counter
  3070  045D  0AAA               	incf	___awdiv@counter,f
  3071  045E  2C6A               	goto	l1991
  3072  045F                     l1987:
  3073  045F  3001               	movlw	1
  3074  0460                     u995:
  3075  0460  1003               	clrc
  3076  0461  0DA6               	rlf	___awdiv@divisor,f
  3077  0462  0DA7               	rlf	___awdiv@divisor+1,f
  3078  0463  3EFF               	addlw	-1
  3079  0464  1D03               	skipz
  3080  0465  2C60               	goto	u995
  3081  0466                     l1989:
  3082  0466  3001               	movlw	1
  3083  0467  00F5               	movwf	??___awdiv
  3084  0468  0875               	movf	??___awdiv,w
  3085  0469  07AA               	addwf	___awdiv@counter,f
  3086  046A                     l1991:
  3087  046A  1FA7               	btfss	___awdiv@divisor+1,7
  3088  046B  2C6D               	goto	u1001
  3089  046C  2C6E               	goto	u1000
  3090  046D                     u1001:
  3091  046D  2C5F               	goto	l1987
  3092  046E                     u1000:
  3093  046E                     l1993:
  3094  046E  3001               	movlw	1
  3095  046F                     u1015:
  3096  046F  1003               	clrc
  3097  0470  0DAC               	rlf	___awdiv@quotient,f
  3098  0471  0DAD               	rlf	___awdiv@quotient+1,f
  3099  0472  3EFF               	addlw	-1
  3100  0473  1D03               	skipz
  3101  0474  2C6F               	goto	u1015
  3102  0475  0827               	movf	___awdiv@divisor+1,w
  3103  0476  0229               	subwf	___awdiv@dividend+1,w
  3104  0477  1D03               	skipz
  3105  0478  2C7B               	goto	u1025
  3106  0479  0826               	movf	___awdiv@divisor,w
  3107  047A  0228               	subwf	___awdiv@dividend,w
  3108  047B                     u1025:
  3109  047B  1C03               	skipc
  3110  047C  2C7E               	goto	u1021
  3111  047D  2C7F               	goto	u1020
  3112  047E                     u1021:
  3113  047E  2C86               	goto	l1999
  3114  047F                     u1020:
  3115  047F                     l1995:
  3116  047F  0826               	movf	___awdiv@divisor,w
  3117  0480  02A8               	subwf	___awdiv@dividend,f
  3118  0481  0827               	movf	___awdiv@divisor+1,w
  3119  0482  1C03               	skipc
  3120  0483  03A9               	decf	___awdiv@dividend+1,f
  3121  0484  02A9               	subwf	___awdiv@dividend+1,f
  3122  0485                     l1997:
  3123  0485  142C               	bsf	___awdiv@quotient,0
  3124  0486                     l1999:
  3125  0486  3001               	movlw	1
  3126  0487                     u1035:
  3127  0487  1003               	clrc
  3128  0488  0CA7               	rrf	___awdiv@divisor+1,f
  3129  0489  0CA6               	rrf	___awdiv@divisor,f
  3130  048A  3EFF               	addlw	-1
  3131  048B  1D03               	skipz
  3132  048C  2C87               	goto	u1035
  3133  048D                     l2001:
  3134  048D  3001               	movlw	1
  3135  048E  02AA               	subwf	___awdiv@counter,f
  3136  048F  1D03               	btfss	3,2
  3137  0490  2C92               	goto	u1041
  3138  0491  2C93               	goto	u1040
  3139  0492                     u1041:
  3140  0492  2C6E               	goto	l1993
  3141  0493                     u1040:
  3142  0493                     l2003:
  3143  0493  082B               	movf	___awdiv@sign,w
  3144  0494  1903               	btfsc	3,2
  3145  0495  2C97               	goto	u1051
  3146  0496  2C98               	goto	u1050
  3147  0497                     u1051:
  3148  0497  2C9D               	goto	l2007
  3149  0498                     u1050:
  3150  0498                     l2005:
  3151  0498  09AC               	comf	___awdiv@quotient,f
  3152  0499  09AD               	comf	___awdiv@quotient+1,f
  3153  049A  0AAC               	incf	___awdiv@quotient,f
  3154  049B  1903               	skipnz
  3155  049C  0AAD               	incf	___awdiv@quotient+1,f
  3156  049D                     l2007:
  3157  049D  082D               	movf	___awdiv@quotient+1,w
  3158  049E  00A7               	movwf	?___awdiv+1
  3159  049F  082C               	movf	___awdiv@quotient,w
  3160  04A0  00A6               	movwf	?___awdiv
  3161  04A1                     l454:
  3162  04A1  0008               	return
  3163  04A2                     __end_of___awdiv:
  3164                           
  3165                           	psect	text16
  3166  02F1                     __ptext16:	
  3167 ;; *************** function _isr *****************
  3168 ;; Defined at:
  3169 ;;		line 126 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0
  3185 ;;      Temps:          5       0       0       0       0
  3186 ;;      Totals:         5       0       0       0       0
  3187 ;;Total ram usage:        5 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		Interrupt level 1
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _isr
  3198  02F1                     _isr:
  3199  02F1                     i1l1665:
  3200                           
  3201                           ;main.c: 127:     if (INTCONbits.T0IF){
  3202  02F1  1D0B               	btfss	11,2	;volatile
  3203  02F2  2AF4               	goto	u80_21
  3204  02F3  2AF5               	goto	u80_20
  3205  02F4                     u80_21:
  3206  02F4  2AFC               	goto	i1l1671
  3207  02F5                     u80_20:
  3208  02F5                     i1l1667:
  3209                           
  3210                           ;main.c: 128:         c++;
  3211  02F5  3001               	movlw	1
  3212  02F6  00F0               	movwf	??_isr
  3213  02F7  0870               	movf	??_isr,w
  3214  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3215  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3216  02FA  07C4               	addwf	_c,f
  3217  02FB                     i1l1669:
  3218                           
  3219                           ;main.c: 129:         INTCONbits.T0IF = 0;
  3220  02FB  110B               	bcf	11,2	;volatile
  3221  02FC                     i1l1671:
  3222                           
  3223                           ;main.c: 131:     if(ADIF == 1){
  3224  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3225  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3226  02FE  1F0C               	btfss	12,6	;volatile
  3227  02FF  2B01               	goto	u81_21
  3228  0300  2B02               	goto	u81_20
  3229  0301                     u81_21:
  3230  0301  2B2B               	goto	i1l1695
  3231  0302                     u81_20:
  3232  0302  2B12               	goto	i1l1689
  3233  0303                     i1l1675:
  3234                           
  3235                           ;main.c: 134:                 var0 = ADRESH;
  3236  0303  081E               	movf	30,w	;volatile
  3237  0304  00F0               	movwf	??_isr
  3238  0305  0870               	movf	??_isr,w
  3239  0306  00C3               	movwf	_var0
  3240  0307                     i1l1677:
  3241                           
  3242                           ;main.c: 135:                 ADCON0bits.CHS0 = 1;
  3243  0307  151F               	bsf	31,2	;volatile
  3244  0308                     i1l1679:
  3245                           
  3246                           ;main.c: 136:                 F0 = 0;
  3247  0308  01F6               	clrf	_F0
  3248                           
  3249                           ;main.c: 137:                 break;
  3250  0309  2B22               	goto	i1l170
  3251  030A                     i1l1681:
  3252                           
  3253                           ;main.c: 139:                 var1 = ADRESH;
  3254  030A  081E               	movf	30,w	;volatile
  3255  030B  00F0               	movwf	??_isr
  3256  030C  0870               	movf	??_isr,w
  3257  030D  00C2               	movwf	_var1
  3258  030E                     i1l1683:
  3259                           
  3260                           ;main.c: 140:                 ADCON0bits.CHS0 = 0;
  3261  030E  111F               	bcf	31,2	;volatile
  3262  030F                     i1l1685:
  3263                           
  3264                           ;main.c: 141:                 F0 = 1;
  3265  030F  01F6               	clrf	_F0
  3266  0310  0AF6               	incf	_F0,f
  3267                           
  3268                           ;main.c: 142:                 break;
  3269  0311  2B22               	goto	i1l170
  3270  0312                     i1l1689:
  3271  0312  0876               	movf	_F0,w
  3272  0313  00F0               	movwf	??_isr
  3273  0314  01F1               	clrf	??_isr+1
  3274                           
  3275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 1, Range of values is 0 to 0
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            4     3 (average)
  3281                           ; direct_byte           11     8 (fixed)
  3282                           ; jumptable            260     6 (fixed)
  3283                           ;	Chosen strategy is simple_byte
  3284  0315  0871               	movf	??_isr+1,w
  3285  0316  3A00               	xorlw	0	; case 0
  3286  0317  1903               	skipnz
  3287  0318  2B1A               	goto	i1l2173
  3288  0319  2B22               	goto	i1l170
  3289  031A                     i1l2173:
  3290                           
  3291                           ; Switch size 1, requested type "simple"
  3292                           ; Number of cases is 2, Range of values is 0 to 1
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; simple_byte            7     4 (average)
  3296                           ; direct_byte           14     8 (fixed)
  3297                           ; jumptable            260     6 (fixed)
  3298                           ;	Chosen strategy is simple_byte
  3299  031A  0870               	movf	??_isr,w
  3300  031B  3A00               	xorlw	0	; case 0
  3301  031C  1903               	skipnz
  3302  031D  2B0A               	goto	i1l1681
  3303  031E  3A01               	xorlw	1	; case 1
  3304  031F  1903               	skipnz
  3305  0320  2B03               	goto	i1l1675
  3306  0321  2B22               	goto	i1l170
  3307  0322                     i1l170:
  3308                           
  3309                           ;main.c: 144:                 ADIF = 0;
  3310  0322  130C               	bcf	12,6	;volatile
  3311  0323                     i1l1691:
  3312                           
  3313                           ;main.c: 145:                 _delay((unsigned long)((120)*(4000000/4000000.0)));
  3314  0323  3027               	movlw	39
  3315  0324  00F0               	movwf	??_isr
  3316  0325                     u130_27:
  3317  0325  0BF0               	decfsz	??_isr,f
  3318  0326  2B25               	goto	u130_27
  3319  0327  2B28               	nop2
  3320  0328                     i1l1693:
  3321                           
  3322                           ;main.c: 146:                 ADCON0bits.GO = 1;
  3323  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0329  1303               	bcf	3,6	;RP1=0, select bank0
  3325  032A  149F               	bsf	31,1	;volatile
  3326  032B                     i1l1695:
  3327                           
  3328                           ;main.c: 148:     if(PIR1bits.RCIF == 1){
  3329  032B  1E8C               	btfss	12,5	;volatile
  3330  032C  2B2E               	goto	u82_21
  3331  032D  2B2F               	goto	u82_20
  3332  032E                     u82_21:
  3333  032E  2B50               	goto	i1l1717
  3334  032F                     u82_20:
  3335  032F                     i1l1697:
  3336                           
  3337                           ;main.c: 149:         RB5 = 1;
  3338  032F  1686               	bsf	6,5	;volatile
  3339  0330                     i1l1699:
  3340                           
  3341                           ;main.c: 150:         if (RCREG == 0b1101){
  3342  0330  300D               	movlw	13
  3343  0331  061A               	xorwf	26,w	;volatile
  3344  0332  1D03               	btfss	3,2
  3345  0333  2B35               	goto	u83_21
  3346  0334  2B36               	goto	u83_20
  3347  0335                     u83_21:
  3348  0335  2B4B               	goto	i1l1715
  3349  0336                     u83_20:
  3350  0336                     i1l1701:
  3351                           
  3352                           ;main.c: 151:         RB5 = 0;
  3353  0336  1286               	bcf	6,5	;volatile
  3354  0337                     i1l1703:
  3355                           
  3356                           ;main.c: 152:             if (temp_read == 0b101110){
  3357  0337  302E               	movlw	46
  3358  0338  0678               	xorwf	_temp_read,w
  3359  0339  1D03               	btfss	3,2
  3360  033A  2B3C               	goto	u84_21
  3361  033B  2B3D               	goto	u84_20
  3362  033C                     u84_21:
  3363  033C  2B42               	goto	i1l1709
  3364  033D                     u84_20:
  3365  033D                     i1l1705:
  3366                           
  3367                           ;main.c: 153:                 counter++;
  3368  033D  3001               	movlw	1
  3369  033E  00F0               	movwf	??_isr
  3370  033F  0870               	movf	??_isr,w
  3371  0340  07C5               	addwf	_counter,f
  3372                           
  3373                           ;main.c: 154:                 if (counter > 255){
  3374  0341  2B50               	goto	i1l1717
  3375  0342                     i1l1709:
  3376  0342  302D               	movlw	45
  3377  0343  0678               	xorwf	_temp_read,w
  3378  0344  1D03               	btfss	3,2
  3379  0345  2B47               	goto	u85_21
  3380  0346  2B48               	goto	u85_20
  3381  0347                     u85_21:
  3382  0347  2B50               	goto	i1l179
  3383  0348                     u85_20:
  3384  0348                     i1l1711:
  3385                           
  3386                           ;main.c: 160:                 counter--;
  3387  0348  3001               	movlw	1
  3388  0349  02C5               	subwf	_counter,f
  3389                           
  3390                           ;main.c: 161:                 if (counter > 255){
  3391  034A  2B50               	goto	i1l1717
  3392  034B                     i1l1715:
  3393                           
  3394                           ;main.c: 167:         temp_read = RCREG;
  3395  034B  081A               	movf	26,w	;volatile
  3396  034C  00F0               	movwf	??_isr
  3397  034D  0870               	movf	??_isr,w
  3398  034E  00F8               	movwf	_temp_read
  3399  034F  2B50               	goto	i1l1717
  3400  0350                     i1l179:	
  3401                           ;main.c: 168:         }
  3402                           
  3403  0350                     i1l1717:
  3404                           
  3405                           ;main.c: 170:     if (TXIF == 1){
  3406  0350  1E0C               	btfss	12,4	;volatile
  3407  0351  2B53               	goto	u86_21
  3408  0352  2B54               	goto	u86_20
  3409  0353                     u86_21:
  3410  0353  2BC5               	goto	i1l193
  3411  0354                     u86_20:
  3412  0354  2B9C               	goto	i1l1757
  3413  0355                     i1l1721:
  3414                           
  3415                           ;main.c: 173:                 TXREG = unit + 48;
  3416  0355  083E               	movf	_unit,w
  3417  0356  3E30               	addlw	48
  3418  0357  0099               	movwf	25	;volatile
  3419  0358                     i1l1723:
  3420                           
  3421                           ;main.c: 174:                 F1 = 1;
  3422  0358  01F7               	clrf	_F1
  3423  0359  0AF7               	incf	_F1,f
  3424                           
  3425                           ;main.c: 175:                 break;
  3426  035A  2BC4               	goto	i1l183
  3427  035B                     i1l1725:
  3428                           
  3429                           ;main.c: 177:                 TXREG = 0b101110;
  3430  035B  302E               	movlw	46
  3431  035C  0099               	movwf	25	;volatile
  3432                           
  3433                           ;main.c: 178:                 F1 = 2;
  3434  035D  3002               	movlw	2
  3435  035E  00F0               	movwf	??_isr
  3436  035F  0870               	movf	??_isr,w
  3437  0360  00F7               	movwf	_F1
  3438                           
  3439                           ;main.c: 179:                 break;
  3440  0361  2BC4               	goto	i1l183
  3441  0362                     i1l1727:
  3442                           
  3443                           ;main.c: 181:                 TXREG = decimal + 48;
  3444  0362  083D               	movf	_decimal,w
  3445  0363  3E30               	addlw	48
  3446  0364  0099               	movwf	25	;volatile
  3447  0365                     i1l1729:
  3448                           
  3449                           ;main.c: 182:                 F1 = 3;
  3450  0365  3003               	movlw	3
  3451  0366  00F0               	movwf	??_isr
  3452  0367  0870               	movf	??_isr,w
  3453  0368  00F7               	movwf	_F1
  3454                           
  3455                           ;main.c: 183:                 break;
  3456  0369  2BC4               	goto	i1l183
  3457  036A                     i1l1731:
  3458                           
  3459                           ;main.c: 185:                 TXREG = decimal0 + 48;
  3460  036A  083C               	movf	_decimal0,w
  3461  036B  3E30               	addlw	48
  3462  036C  0099               	movwf	25	;volatile
  3463  036D                     i1l1733:
  3464                           
  3465                           ;main.c: 186:                 F1 = 4;
  3466  036D  3004               	movlw	4
  3467  036E  00F0               	movwf	??_isr
  3468  036F  0870               	movf	??_isr,w
  3469  0370  00F7               	movwf	_F1
  3470                           
  3471                           ;main.c: 187:                 break;
  3472  0371  2BC4               	goto	i1l183
  3473  0372                     i1l1735:
  3474                           
  3475                           ;main.c: 189:                 TXREG = 0b101101;
  3476  0372  302D               	movlw	45
  3477  0373  0099               	movwf	25	;volatile
  3478                           
  3479                           ;main.c: 190:                 F1 = 5;
  3480  0374  3005               	movlw	5
  3481  0375  00F0               	movwf	??_isr
  3482  0376  0870               	movf	??_isr,w
  3483  0377  00F7               	movwf	_F1
  3484                           
  3485                           ;main.c: 191:                 break;
  3486  0378  2BC4               	goto	i1l183
  3487  0379                     i1l1737:
  3488                           
  3489                           ;main.c: 193:                 TXREG = unit_1 + 48;
  3490  0379  083B               	movf	_unit_1,w
  3491  037A  3E30               	addlw	48
  3492  037B  0099               	movwf	25	;volatile
  3493  037C                     i1l1739:
  3494                           
  3495                           ;main.c: 194:                 F1 = 6;
  3496  037C  3006               	movlw	6
  3497  037D  00F0               	movwf	??_isr
  3498  037E  0870               	movf	??_isr,w
  3499  037F  00F7               	movwf	_F1
  3500                           
  3501                           ;main.c: 195:                 break;
  3502  0380  2BC4               	goto	i1l183
  3503  0381                     i1l1741:
  3504                           
  3505                           ;main.c: 197:                 TXREG = 0b101110;
  3506  0381  302E               	movlw	46
  3507  0382  0099               	movwf	25	;volatile
  3508                           
  3509                           ;main.c: 198:                 F1 = 7;
  3510  0383  3007               	movlw	7
  3511  0384  00F0               	movwf	??_isr
  3512  0385  0870               	movf	??_isr,w
  3513  0386  00F7               	movwf	_F1
  3514                           
  3515                           ;main.c: 199:                 break;
  3516  0387  2BC4               	goto	i1l183
  3517  0388                     i1l1743:
  3518                           
  3519                           ;main.c: 201:                 TXREG = k1 + 48;
  3520  0388  0841               	movf	_k1,w
  3521  0389  3E30               	addlw	48
  3522  038A  0099               	movwf	25	;volatile
  3523  038B                     i1l1745:
  3524                           
  3525                           ;main.c: 202:                 F1 = 8;
  3526  038B  3008               	movlw	8
  3527  038C  00F0               	movwf	??_isr
  3528  038D  0870               	movf	??_isr,w
  3529  038E  00F7               	movwf	_F1
  3530                           
  3531                           ;main.c: 203:                 break;
  3532  038F  2BC4               	goto	i1l183
  3533  0390                     i1l1747:
  3534                           
  3535                           ;main.c: 205:                 TXREG = k0 + 48;
  3536  0390  0840               	movf	_k0,w
  3537  0391  3E30               	addlw	48
  3538  0392  0099               	movwf	25	;volatile
  3539  0393                     i1l1749:
  3540                           
  3541                           ;main.c: 206:                 F1 = 9;
  3542  0393  3009               	movlw	9
  3543  0394  00F0               	movwf	??_isr
  3544  0395  0870               	movf	??_isr,w
  3545  0396  00F7               	movwf	_F1
  3546                           
  3547                           ;main.c: 207:                 break;
  3548  0397  2BC4               	goto	i1l183
  3549  0398                     i1l1751:
  3550                           
  3551                           ;main.c: 209:                 TXREG = 0b1101;
  3552  0398  300D               	movlw	13
  3553  0399  0099               	movwf	25	;volatile
  3554  039A                     i1l1753:
  3555                           
  3556                           ;main.c: 210:                 F1 = 0;
  3557  039A  01F7               	clrf	_F1
  3558                           
  3559                           ;main.c: 211:                 break;
  3560  039B  2BC4               	goto	i1l183
  3561  039C                     i1l1757:
  3562  039C  0877               	movf	_F1,w
  3563  039D  00F0               	movwf	??_isr
  3564  039E  01F1               	clrf	??_isr+1
  3565                           
  3566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3567                           ; Switch size 1, requested type "simple"
  3568                           ; Number of cases is 1, Range of values is 0 to 0
  3569                           ; switch strategies available:
  3570                           ; Name         Instructions Cycles
  3571                           ; simple_byte            4     3 (average)
  3572                           ; direct_byte           11     8 (fixed)
  3573                           ; jumptable            260     6 (fixed)
  3574                           ;	Chosen strategy is simple_byte
  3575  039F  0871               	movf	??_isr+1,w
  3576  03A0  3A00               	xorlw	0	; case 0
  3577  03A1  1903               	skipnz
  3578  03A2  2BA4               	goto	i1l2175
  3579  03A3  2BC4               	goto	i1l183
  3580  03A4                     i1l2175:
  3581                           
  3582                           ; Switch size 1, requested type "simple"
  3583                           ; Number of cases is 10, Range of values is 0 to 9
  3584                           ; switch strategies available:
  3585                           ; Name         Instructions Cycles
  3586                           ; simple_byte           31    16 (average)
  3587                           ; direct_byte           38     8 (fixed)
  3588                           ; jumptable            260     6 (fixed)
  3589                           ;	Chosen strategy is simple_byte
  3590  03A4  0870               	movf	??_isr,w
  3591  03A5  3A00               	xorlw	0	; case 0
  3592  03A6  1903               	skipnz
  3593  03A7  2B55               	goto	i1l1721
  3594  03A8  3A01               	xorlw	1	; case 1
  3595  03A9  1903               	skipnz
  3596  03AA  2B5B               	goto	i1l1725
  3597  03AB  3A03               	xorlw	3	; case 2
  3598  03AC  1903               	skipnz
  3599  03AD  2B62               	goto	i1l1727
  3600  03AE  3A01               	xorlw	1	; case 3
  3601  03AF  1903               	skipnz
  3602  03B0  2B6A               	goto	i1l1731
  3603  03B1  3A07               	xorlw	7	; case 4
  3604  03B2  1903               	skipnz
  3605  03B3  2B72               	goto	i1l1735
  3606  03B4  3A01               	xorlw	1	; case 5
  3607  03B5  1903               	skipnz
  3608  03B6  2B79               	goto	i1l1737
  3609  03B7  3A03               	xorlw	3	; case 6
  3610  03B8  1903               	skipnz
  3611  03B9  2B81               	goto	i1l1741
  3612  03BA  3A01               	xorlw	1	; case 7
  3613  03BB  1903               	skipnz
  3614  03BC  2B88               	goto	i1l1743
  3615  03BD  3A0F               	xorlw	15	; case 8
  3616  03BE  1903               	skipnz
  3617  03BF  2B90               	goto	i1l1747
  3618  03C0  3A01               	xorlw	1	; case 9
  3619  03C1  1903               	skipnz
  3620  03C2  2B98               	goto	i1l1751
  3621  03C3  2BC4               	goto	i1l183
  3622  03C4                     i1l183:
  3623                           
  3624                           ;main.c: 213:         TXIF = 0;
  3625  03C4  120C               	bcf	12,4	;volatile
  3626  03C5                     i1l193:
  3627  03C5  0874               	movf	??_isr+4,w
  3628  03C6  008A               	movwf	10
  3629  03C7  0873               	movf	??_isr+3,w
  3630  03C8  0084               	movwf	4
  3631  03C9  0E72               	swapf	??_isr+2,w
  3632  03CA  0083               	movwf	3
  3633  03CB  0EFE               	swapf	btemp,f
  3634  03CC  0E7E               	swapf	btemp,w
  3635  03CD  0009               	retfie
  3636  03CE                     __end_of_isr:
  3637  007E                     btemp	set	126	;btemp
  3638  007E                     wtemp0	set	126
  3639                           
  3640                           	psect	intentry
  3641  0004                     __pintentry:	
  3642                           ;incstack = 0
  3643                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  3644                           
  3645  0004                     interrupt_function:
  3646  007E                     saved_w	set	btemp
  3647  0004  00FE               	movwf	btemp
  3648  0005  0E03               	swapf	3,w
  3649  0006  00F2               	movwf	??_isr+2
  3650  0007  0804               	movf	4,w
  3651  0008  00F3               	movwf	??_isr+3
  3652  0009  080A               	movf	10,w
  3653  000A  00F4               	movwf	??_isr+4
  3654  000B  120A  118A  2AF1   	ljmp	_isr
  3655                           
  3656                           	psect	config
  3657                           
  3658                           ;Config register CONFIG1 @ 0x2007
  3659                           ;	Oscillator Selection bits
  3660                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3661                           ;	Watchdog Timer Enable bit
  3662                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3663                           ;	Power-up Timer Enable bit
  3664                           ;	PWRTE = OFF, PWRT disabled
  3665                           ;	RE3/MCLR pin function select bit
  3666                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3667                           ;	Code Protection bit
  3668                           ;	CP = OFF, Program memory code protection is disabled
  3669                           ;	Data Code Protection bit
  3670                           ;	CPD = OFF, Data memory code protection is disabled
  3671                           ;	Brown Out Reset Selection bits
  3672                           ;	BOREN = OFF, BOR disabled
  3673                           ;	Internal External Switchover bit
  3674                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3675                           ;	Fail-Safe Clock Monitor Enabled bit
  3676                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3677                           ;	Low Voltage Programming Enable bit
  3678                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3679                           ;	In-Circuit Debugger Mode bit
  3680                           ;	DEBUG = 0x1, unprogrammed default
  3681  2007                     	org	8199
  3682  2007  20D4               	dw	8404
  3683                           
  3684                           ;Config register CONFIG2 @ 0x2008
  3685                           ;	Brown-out Reset Selection bit
  3686                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3687                           ;	Flash Program Memory Self Write Enable bits
  3688                           ;	WRT = OFF, Write protection off
  3689  2008                     	org	8200
  3690  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     24      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    wsLCD@x	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[3]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod
    _main->___bmul
    _initCONFIG->_setupADC
    _initLCD->_LCDsetup
    _wLCD->_LCDsetup
    _enableLCD->_LCDsetup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    _initCONFIG->_LCD_display
    _initLCD->_enableLCD
    _LCD_display->_cursorLCD
    _wsLCD->_wLCD
    _cursorLCD->_enableLCD
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    8589
                                             14 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                             ___bmul
                             ___wmul
                         _configTMR0
                          _cursorLCD
                         _initCONFIG
                               _wLCD
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0    2105
                        _LCD_display
                              _UARTs
                            _initLCD
                           _setupADC
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              3     3      0      93
                                              3 BANK0      3     3      0
                           _LCDsetup
                          _enableLCD
 ---------------------------------------------------------------------------------
 (2) _UARTs                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_display                                          1     1      0    2012
                                              7 BANK0      1     1      0
                          _cursorLCD
                              _wsLCD
 ---------------------------------------------------------------------------------
 (3) _wsLCD                                                3     3      0     408
                                              2 BANK0      3     3      0
                               _wLCD
 ---------------------------------------------------------------------------------
 (1) _wLCD                                                 2     2      0      62
                                              0 BANK0      2     2      0
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (3) _cursorLCD                                            6     5      1    1604
                                              3 BANK0      4     3      1
                          _enableLCD
 ---------------------------------------------------------------------------------
 (3) _enableLCD                                            3     3      0      62
                                              0 BANK0      3     3      0
                           _LCDsetup
 ---------------------------------------------------------------------------------
 (2) _LCDsetup                                             1     1      0      31
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configTMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1216
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     496
                                              5 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2245
                                              5 COMMON     1     1      0
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___bmul
   ___wmul
   _configTMR0
   _cursorLCD
     _enableLCD
       _LCDsetup
   _initCONFIG
     _LCD_display
       _cursorLCD
       _wsLCD
         _wLCD
           _LCDsetup
     _UARTs
     _initLCD
       _LCDsetup
       _enableLCD
     _setupADC
   _wLCD

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul 29 01:52:20 2021

                      l9 0670                        _c 0044                        _t 003A  
                      pc 0002           ___bmul@product 0021                       _F0 0076  
                     _F1 0077                       l30 06AB                       l24 0507  
                     l33 0643                       l27 062B                       l45 05C3  
                     l39 0610                       _k0 0040                       _k1 0041  
           ___awdiv@sign 002B                       fsr 0004      ___wmul@multiplicand 0022  
                    l202 06A5                      l301 05D2                      l303 05EA  
                    l215 0685                      l151 01EC                      l152 01F6  
                    l153 0200                      l154 020A                      l155 0214  
                    l156 021E                      l327 065A                      l196 0438  
                    l454 04A1                      l199 059A                      l467 0562  
                    _RB5 0035                      _RE0 0048                      _RE1 0049  
                    u900 05CC                      u901 05CB                      u930 05E6  
                    u931 05E5                      u915 05D3                      u940 064C  
                    u941 064B                      u925 05DA                      u950 0659  
                    u870 05F3                      u951 0658                      u871 05F2  
                    u960 0440                      u880 0605                      u961 043F  
                    u881 0604                      u970 044B                      u890 05C3  
                    u971 044A                      u891 05C2                      u980 045C  
                    u981 045B                      u995 0460                      _isr 02F1  
                    fsr0 0004             ___awmod@sign 0025                     l2001 048D  
                   l2003 0493                     l2011 0508                     l2005 0498  
                   l2021 051A                     l2013 050B                     l2101 024E  
                   l2007 049D                     l2031 0533                     l2023 051F  
                   l2015 050F                     l2111 0284                     l2103 025A  
                   l2033 0537                     l2025 0525                     l2041 0554  
                   l2017 0514                     l2121 02B7                     l2113 028D  
                   l2105 0263                     l2043 0559                     l2035 0541  
                   l2027 0528                     l2019 0516                     l1411 0680  
                   l1403 0671                     l2131 02EA                     l2123 02C3  
                   l2115 0299                     l2107 026F                     l2051 002D  
                   l2045 055E                     l2037 0547                     l2029 052F  
                   l1413 0681                     l1405 0678                     l2125 02CC  
                   l2117 02A2                     l2109 0278                     l2061 00DF  
                   l2053 0032                     l2039 054E                     l1415 0682  
                   l1407 067C                     l1351 0660                     l2127 02D8  
                   l2119 02AE                     l2071 01A0                     l2063 00F5  
                   l2055 004A                     l1409 067D                     l1353 0668  
                   l2129 02E9                     l2081 01F2                     l2073 01B6  
                   l2065 0134                     l2057 0089                     l2049 0028  
                   l1355 0669                     l2091 0224                     l2083 01FC  
                   l2075 01CC                     l2067 0147                     l2059 009C  
                   l1357 066D                     l1349 065B                     l2093 0228  
                   l2085 0206                     l2077 01E2                     l2069 018A  
                   l2095 0230                     l2087 0210                     l2079 01E8  
                   l2097 0239                     l2089 021A                     l1467 069A  
                   l1811 0615                     l2099 0245                     l1469 06A1  
                   l1813 061B                     l1821 0630                     l1901 056F  
                   l1807 06A7                     l1815 061E                     l1831 05F3  
                   l1823 0636                     l1911 0576                     l1903 0570  
                   l1817 0628                     l1809 0614                     l1833 05F8  
                   l1825 0639                     l1841 059E                     l1921 0581  
                   l1913 0579                     l1905 0573                     l1835 05FF  
                   l1827 0640                     l1819 062F                     l1843 05A1  
                   l1851 04AD                     l1931 0588                     l1923 0582  
                   l1915 057A                     l1907 0574                     l1941 05C8  
                   l1837 0605                     l1829 05EE                     l1845 05AE  
                   l1861 04E9                     l1853 04B3                     l1933 058B  
                   l1925 0583                     l1917 057B                     l1909 0575  
                   l1943 05CC                     l1839 060A                     l1847 05B6  
                   l1871 03CE                     l1863 04EF                     l1855 04C4  
                   l1935 0590                     l1927 0584                     l1919 057C  
                   l1961 0652                     l1953 0647                     l1945 05D9  
                   l1881 040E                     l1873 03DA                     l1865 04F5  
                   l1857 04CE                     l1849 04A2                     l1937 0595  
                   l1929 0585                     l1971 0440                     l1963 0659  
                   l1955 0648                     l1947 05E0                     l1939 05C4  
                   l1883 0414                     l1875 03E0                     l1867 04FB  
                   l1859 04E3                     l1891 0563                     l1981 0454  
                   l1973 0445                     l1957 064C                     l1949 05E6  
                   l1885 0426                     l1877 03F0                     l1869 0501  
                   l1893 0566                     l1991 046A                     l1983 0456  
                   l1975 0447                     l1967 0439                     l1959 0650  
                   l1887 0432                     l1879 03FC                     l1895 0568  
                   l1993 046E                     l1985 045C                     l1977 044B  
                   l1969 043C                     l1897 056C                     l1995 047F  
                   l1987 045F                     l1979 0450                     l1899 056E  
                   l1997 0485                     l1989 0466                     l1999 0486  
                   _ADIF 0066                     ?_isr 0070                     STR_1 0691  
                   STR_2 068C                     STR_3 0694                     STR_4 068C  
                   STR_5 0697                     STR_6 068E                     u1000 046E  
                   u1001 046D                     u1020 047F                     u1100 0537  
                   u1021 047E                     u1101 0536                     u1110 0541  
                   u1015 046F                     u1111 0540                     u1040 0493  
                   u1200 021A                     u1041 0492                     u1025 047B  
                   u1201 0219                     u1050 0498                     u1130 0554  
                   u1210 0224                     u1051 0497                     u1035 0487  
                   u1131 0553                     u1115 053D                     u1211 0223  
                   u1140 0559                     u1060 050F                     u1220 02E9  
                   u1141 0558                     u1125 0548                     u1061 050E  
                   u1221 02E8                     u1070 051A                     u1150 01E8  
                   u1071 0519                     u1151 01E7                     u1080 0525  
                   u1160 01F2                     u1081 0524                     u1161 01F1  
           ?_LCD_display 0070                     u1170 01FC                     u1171 01FB  
                   u1180 0206                     u1237 066B                     u1181 0205  
                   u1190 0210                     u1095 0529                     u1247 04A8  
                   u1191 020F                     u1257 04B9                     u1267 04CA  
                   u1277 04DC                     u1287 063D                     u1297 0624  
                   _TMR0 0001                     _TXIE 0464                     _TXIF 0064  
                   _wLCD 062C                     _main 0028                     _var0 0043  
                   _var1 0042                     _unit 003E                     btemp 007E  
                   start 000E        ___bmul@multiplier 0022                    ??_isr 0070  
                  ?_wLCD 0070                    ?_main 0070          __end_of___awdiv 04A2  
        __end_of___awmod 0563                    _ANSEL 0188         __end_of_LCDsetup 06AC  
        ___awdiv@divisor 0026                    i1l170 0322                    i1l183 03C4  
                  i1l193 03C5                    i1l179 0350          ___awdiv@counter 002A  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _UARTs 0671                    u80_20 02F5                    u80_21 02F4  
                  u81_20 0302                    u81_21 0301                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u82_20 032F                    u82_21 032E                    u83_20 0336  
                  u83_21 0335                    u84_20 033D                    u84_21 033C  
                  u85_20 0348                    u85_21 0347                    u86_20 0354  
                  u86_21 0353                    _TXREG 0019                    wLCD@x 0021  
        __end_of_initLCD 0508                    _wsLCD 059B                    _unity 0038  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_wLCD 0644             __end_of_main 02F1  
                 ??_wLCD 0020                   ??_main 002E                   ?_UARTs 0070  
                 ?_wsLCD 0070                   _ADRESH 001E         ___awdiv@dividend 0028  
                 _ANSELH 0189                   i1l1701 0336                   i1l2173 031A  
                 i1l2175 03A4                   i1l1711 0348                   i1l1703 0337  
                 i1l1721 0355                   i1l1705 033D                   i1l1731 036A  
                 i1l1723 0358                   i1l1715 034B                   i1l1741 0381  
                 i1l1733 036D                   i1l1725 035B                   i1l1709 0342  
                 i1l1717 0350                   i1l1751 0398                   i1l1743 0388  
                 i1l1735 0372                   i1l1727 0362                   i1l1671 02FC  
                 i1l1753 039A                   i1l1745 038B                   i1l1737 0379  
                 i1l1729 0365                   i1l1681 030A                   i1l1665 02F1  
                 i1l1747 0390                   i1l1739 037C                   i1l1691 0323  
                 i1l1683 030E                   i1l1675 0303                   i1l1667 02F5  
                 i1l1749 0393                   i1l1757 039C                   i1l1693 0328  
                 i1l1685 030F                   i1l1677 0307                   i1l1669 02FB  
                 u130_27 0325                   i1l1679 0308                   i1l1695 032B  
                 i1l1697 032F                   i1l1689 0312                   i1l1699 0330  
                 _SPBRGH 009A                   ___bmul 0644                   ___wmul 05C4  
              ??___awdiv 0075                ??___awmod 0075                   _dozens 0039  
       ___awdiv@quotient 002C          ___awmod@divisor 0020          ___awmod@counter 0024  
                 _unit_1 003B                ??_initLCD 0023                   wsLCD@i 0022  
                 wsLCD@x 0024         __end_of_setupADC 0671                   saved_w 007E  
__end_of__initialization 0024     __size_of_LCD_display 006B                ?_LCDsetup 0070  
          __end_of_UARTs 0686      ___bmul@multiplicand 0075           __pcstackCOMMON 0070  
          __end_of_wsLCD 05C4       __size_of_enableLCD 001B                  ??_UARTs 0075  
         _OPTION_REGbits 0081                LCDsetup@x 0075                  ??_wsLCD 0076  
             __pbssBANK0 0038       __size_of_cursorLCD 0026               ??_LCDsetup 0075  
             __pmaintext 0028                  ?___bmul 0075                  ?___wmul 0020  
             __pintentry 0004               _configTMR0 069A               __stringtab 0686  
             _initCONFIG 0563        __end_of_enableLCD 062C                ?_setupADC 0070  
        __size_of___bmul 0017                  ___awdiv 0439                  ___awmod 0508  
        __size_of___wmul 0027                  _decimal 003D                  __ptext1 0563  
                __ptext2 065B                  __ptext3 04A2                  __ptext4 0671  
                __ptext5 03CE                  __ptext6 059B                  __ptext7 062C  
                __ptext8 05EB                  __ptext9 0611                  _initLCD 04A2  
                _counter 0045        __end_of_cursorLCD 0611             __size_of_isr 00DD  
       ___awmod@dividend 0022     end_of_initialization 0024               enableLCD@x 0022  
             ??_setupADC 0075                _RCSTAbits 0018              ?_configTMR0 0070  
            ?_initCONFIG 0070                _TXSTAbits 0098        __size_of_LCDsetup 0006  
         __end_of___bmul 065B           __end_of___wmul 05EB              _BAUDCTLbits 0187  
    start_initialization 0011              __end_of_isr 03CE            ??_LCD_display 0027  
    __size_of_configTMR0 000C                 ??___bmul 0020                 ??___wmul 0075  
             cursorLCD@t 0026               cursorLCD@x 0025               cursorLCD@y 0023  
    __size_of_initCONFIG 0038              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020      __end_of_LCD_display 0439                _main$1127 0036  
              _enableLCD 0611                 ?___awdiv 0026                 ?___awmod 0020  
      __size_of_setupADC 0016                __pstrings 0686                 ?_initLCD 0070  
         __size_of_UARTs 0015                _cursorLCD 05EB           __size_of_wsLCD 0029  
      interrupt_function 0004           ___wmul@product 0024                 _PIE1bits 008C  
               _LCDsetup 06A6                 _PIR1bits 000C                _temp_read 0078  
             ?_enableLCD 0070               _ADCON0bits 001F              __stringbase 068B  
             _ADCON1bits 009F        ___wmul@multiplier 0020             ??_configTMR0 0075  
             ?_cursorLCD 0023              _LCD_display 03CE             ??_initCONFIG 0076  
     __end_of_configTMR0 06A6         __size_of___awdiv 0069         __size_of___awmod 005B  
     __end_of__stringtab 068C       __end_of_initCONFIG 059B                 _decimal0 003C  
       __size_of_initLCD 0066                 __ptext10 06A6                 __ptext11 069A  
               __ptext12 05C4                 __ptext13 0644                 __ptext14 0508  
               __ptext15 0439                 __ptext16 02F1            __size_of_wLCD 0018  
          __size_of_main 02C9                 _hundreds 003F                 _setupADC 065B  
            ??_enableLCD 0020               _INTCONbits 000B              ??_cursorLCD 0024  
               intlevel1 0000                stringcode 0686               _OSCCONbits 008F  
               stringdir 0686                 stringtab 0686  
